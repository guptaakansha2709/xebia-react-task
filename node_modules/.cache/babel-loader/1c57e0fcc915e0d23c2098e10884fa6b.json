{"ast":null,"code":"import { LoginActionType } from \"../actiontype/login.actiontype\";\nimport LoginService from '../services/login.service';\nimport { openSnackbarRequest } from './snackbar.action';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { resetState } from \"../actions/common.action\";\nvar snackbarMessage = {};\nexport var fetchLoginData = function fetchLoginData(loginObj) {\n  return function (dispatch) {\n    dispatch(resetState());\n    dispatch(loginApiLoading());\n    LoginService.fetchLoginApi(loginObj).then(function (response) {\n      if (response && response.data) {\n        LoginService.loginDataHandler(response.data);\n        dispatch(loginApiSuccess(response));\n        dispatch(openSnackbarRequest(null, SnackbarMessages.LOGIN_SUCCESS_MSG));\n      }\n    }, function (error) {\n      dispatch(loginApiFailure(error));\n      dispatch(openSnackbarRequest(error, SnackbarMessages.LOGIN_FAILURE));\n    });\n  };\n};\n\nfunction loginApiLoading() {\n  return {\n    type: LoginActionType.LOGIN_REQUEST\n  };\n}\n\nexport function loginApiSuccess(response) {\n  return {\n    type: LoginActionType.LOGIN_SUCCESS,\n    payload: response.data\n  };\n}\nexport function loginApiFailure(error) {\n  return {\n    type: LoginActionType.LOGIN_FAILURE,\n    payload: error\n  };\n}","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/tasks/src/actions/login.action.js"],"names":["LoginActionType","LoginService","openSnackbarRequest","SnackbarMessages","resetState","snackbarMessage","fetchLoginData","loginObj","dispatch","loginApiLoading","fetchLoginApi","then","response","data","loginDataHandler","loginApiSuccess","LOGIN_SUCCESS_MSG","error","loginApiFailure","LOGIN_FAILURE","type","LOGIN_REQUEST","LOGIN_SUCCESS","payload"],"mappings":"AACA,SAASA,eAAT,QAAgC,gCAAhC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,IAAIC,eAAe,GAAG,EAAtB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAClDA,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACAI,IAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACAR,IAAAA,YAAY,CAACS,aAAb,CAA2BH,QAA3B,EAAqCI,IAArC,CACI,UAAAC,QAAQ,EAAI;AACR,UAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAzB,EAA+B;AAC3BZ,QAAAA,YAAY,CAACa,gBAAb,CAA8BF,QAAQ,CAACC,IAAvC;AACAL,QAAAA,QAAQ,CAACO,eAAe,CAACH,QAAD,CAAhB,CAAR;AACAJ,QAAAA,QAAQ,CAACN,mBAAmB,CAAC,IAAD,EAAOC,gBAAgB,CAACa,iBAAxB,CAApB,CAAR;AACH;AACJ,KAPL,EAQI,UAAAC,KAAK,EAAI;AACLT,MAAAA,QAAQ,CAACU,eAAe,CAACD,KAAD,CAAhB,CAAR;AACAT,MAAAA,QAAQ,CAACN,mBAAmB,CAACe,KAAD,EAAQd,gBAAgB,CAACgB,aAAzB,CAApB,CAAR;AACH,KAXL;AAaH,GAhBqC;AAAA,CAA/B;;AAiBP,SAASV,eAAT,GAA2B;AACvB,SAAO;AACHW,IAAAA,IAAI,EAAEpB,eAAe,CAACqB;AADnB,GAAP;AAGH;;AACD,OAAO,SAASN,eAAT,CAAyBH,QAAzB,EAAmC;AACtC,SAAO;AACHQ,IAAAA,IAAI,EAAEpB,eAAe,CAACsB,aADnB;AAEHC,IAAAA,OAAO,EAAEX,QAAQ,CAACC;AAFf,GAAP;AAIH;AACD,OAAO,SAASK,eAAT,CAAyBD,KAAzB,EAAgC;AACnC,SAAO;AACHG,IAAAA,IAAI,EAAEpB,eAAe,CAACmB,aADnB;AAEHI,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH","sourcesContent":["\nimport { LoginActionType } from \"../actiontype/login.actiontype\";\nimport LoginService from '../services/login.service';\nimport { openSnackbarRequest } from './snackbar.action';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { resetState } from \"../actions/common.action\";\nlet snackbarMessage = {}\n\nexport const fetchLoginData = loginObj => dispatch => {\n    dispatch(resetState());\n    dispatch(loginApiLoading());\n    LoginService.fetchLoginApi(loginObj).then(\n        response => {\n            if (response && response.data) {\n                LoginService.loginDataHandler(response.data);\n                dispatch(loginApiSuccess(response));\n                dispatch(openSnackbarRequest(null, SnackbarMessages.LOGIN_SUCCESS_MSG));\n            }\n        },\n        error => {\n            dispatch(loginApiFailure(error));\n            dispatch(openSnackbarRequest(error, SnackbarMessages.LOGIN_FAILURE));\n        }\n    );\n}\nfunction loginApiLoading() {\n    return {\n        type: LoginActionType.LOGIN_REQUEST\n    }\n}\nexport function loginApiSuccess(response) {\n    return {\n        type: LoginActionType.LOGIN_SUCCESS,\n        payload: response.data\n    }\n}\nexport function loginApiFailure(error) {\n    return {\n        type: LoginActionType.LOGIN_FAILURE,\n        payload: error\n    }\n}\n"]},"metadata":{},"sourceType":"module"}