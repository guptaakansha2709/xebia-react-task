{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/sr-details/sr-details.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport '../../../index.css';\nimport Button from '@material-ui/core/Button';\nimport { fetchSRDetailsTabData as _fetchSRDetailsTabData, showSRHistoryTab as _showSRHistoryTab, srNotesDetailsDialogHandler as _srNotesDetailsDialogHandler, reOpenResolvedSr as _reOpenResolvedSr } from '../../../actions/sr-details-tab.action';\nimport { srTaskUpdateCaseSelectorHandler as _srTaskUpdateCaseSelectorHandler } from '../../../actions/task-update.action';\nimport styles from './sr-details.style';\nimport { withStyles } from '@material-ui/core/styles';\nimport { openPreviousInteractionsDialog as _openPreviousInteractionsDialog } from '../../../actions/dialog.action';\nimport Tooltips from '../../common/tooltip/tooltip.dumb';\nimport Typography from '@material-ui/core/Typography';\nvar SRDetailsFormLabel = [{\n  title: 'SR NUMBER',\n  key: 'problem_problemId',\n  gridSize: 25\n}, {\n  title: 'PROBLEM SUMMARY',\n  key: 'problem_description',\n  gridSize: 25\n}, {\n  title: 'STATUS',\n  key: 'problem_activityStatus',\n  gridSize: 25\n}, {\n  title: 'CREATED DATE',\n  key: 'problem_createdDate',\n  gridSize: 25\n}, {\n  title: 'SUB TYPE',\n  key: 'problem_subType',\n  gridSize: 25\n}, {\n  title: 'SUB SUB TYPE',\n  key: 'problem_subSubType',\n  gridSize: 25\n}, {\n  title: 'LOCAL CONTACT NAME',\n  key: 'localContactName',\n  gridSize: 25\n}, {\n  title: 'LOCAL EMAIL CONTACT',\n  key: 'emailContact',\n  gridSize: 25\n}, {\n  title: 'LOCAL CONTACT NUMBER',\n  key: 'localContactNumber',\n  gridSize: 25\n}, {\n  title: 'CASE TYPE',\n  key: 'problem_caseType',\n  gridSize: 25\n}, {\n  title: 'IMPACT',\n  key: 'impact',\n  gridSize: 25\n}, {\n  title: 'SEVERITY',\n  key: 'severity',\n  gridSize: 25\n}, {\n  title: 'FFC',\n  key: 'problem_problemCode',\n  gridSize: 25\n}, {\n  title: 'RC',\n  key: 'problem_resolution',\n  gridSize: 25\n}, {\n  title: 'RESOLUTION DATE',\n  key: 'problem_resolutionTime',\n  gridSize: 25\n}];\n\nvar SRDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SRDetails, _Component);\n\n  function SRDetails(props) {\n    var _this;\n\n    _classCallCheck(this, SRDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SRDetails).call(this, props));\n\n    _this.openPreviosHistoryDialog = function () {\n      if (_this.props.srDetailsCategorySpecificData && _this.props.srDetailsTabApiResponse) {\n        _this.props.openPreviousInteractionsDialog(\"SR\");\n      }\n    };\n\n    _this.showSRHistory = function () {\n      _this.props.showSRHistoryTab();\n    };\n\n    _this.openSRNotesDialog = function (srNo) {\n      _this.props.srNotesDetailsDialogHandler(srNo);\n    };\n\n    _this.reOpenSr = function (srNumber) {\n      _this.props.reOpenResolvedSr(srNumber);\n    };\n\n    _this.openSrTaskUpdateCaseSelectorDialog = function (srNumber) {\n      _this.props.srTaskUpdateCaseSelectorHandler(srNumber);\n    };\n\n    _this.showReOpenSrButton = function (srData, typeSubtypeOpenSrExists) {\n      var isResolved = srData && srData.problem_activityStatus && srData.problem_activityStatus.toLowerCase() === 'resolved';\n      var key = \"\".concat(srData['problem_type'], \"-\").concat(srData['problem_subType']);\n      return isResolved && typeSubtypeOpenSrExists && !typeSubtypeOpenSrExists[key];\n    };\n\n    _this.fetchSRToDisplay = function (srNumber, srDetailsCategorySpecificData) {\n      if (srDetailsCategorySpecificData && srDetailsCategorySpecificData['srData'] && srDetailsCategorySpecificData['srData'].length > 0) {\n        if (srNumber) {\n          var displaySR = srDetailsCategorySpecificData['srData'].filter(function (srDetails) {\n            return srDetails[\"problem_problemId\"] === srNumber;\n          });\n          return displaySR[0];\n        } else {\n          return srDetailsCategorySpecificData['srData'][0];\n        }\n      }\n\n      return null;\n    };\n\n    _this.openPreviosHistoryDialog = _this.openPreviosHistoryDialog.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchSRToDisplay = _this.fetchSRToDisplay.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SRDetails, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchSRDetailsTabData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          currentSRNumber = _this$props.currentSRNumber,\n          srDetailsCategorySpecificData = _this$props.srDetailsCategorySpecificData,\n          srDetailsProcessedData = _this$props.srDetailsProcessedData;\n      var displaySR = this.fetchSRToDisplay(currentSRNumber, srDetailsCategorySpecificData);\n      var displayReOpenSrButton = false;\n      var displayUpdateTaskButton = false;\n\n      if (displaySR) {\n        var isResolved = displaySR.problem_activityStatus && displaySR.problem_activityStatus.toLowerCase() === 'resolved';\n        displayUpdateTaskButton = displaySR.problem_activityStatus && (displaySR.problem_activityStatus.toLowerCase() === 'open' || displaySR.problem_activityStatus.toLowerCase() === 're-open');\n        var isTatExceeded = false;\n\n        if (isResolved && displaySR.problem_resolutionTime) {\n          var resolutionDateTime = new Date(Date.parse(displaySR.problem_resolutionTime));\n          var currentDateTime = new Date();\n          var diff = Math.abs(currentDateTime.getTime() - resolutionDateTime.getTime()) / 3600000;\n\n          if (diff > 24) {\n            isTatExceeded = true;\n          }\n        }\n\n        var key = \"\".concat(displaySR['problem_type'], \"-\").concat(displaySR['problem_subType'], \"-\").concat(displaySR['problem_subSubType']);\n        displayReOpenSrButton = isResolved && !isTatExceeded && srDetailsProcessedData && !srDetailsProcessedData[key];\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, !displaySR && React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: \"width-100 padding-40 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"No valid SR found in last 6 months\"))), displaySR && React.createElement(Grid, {\n        className: \"mt-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, SRDetailsFormLabel.map(function (item, index) {\n        return React.createElement(Grid, {\n          key: index,\n          item: true,\n          className: \"width-\" + item.gridSize + \" mb-15\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"color-grey fs-12 text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, item.title), srDetailsCategorySpecificData && srDetailsCategorySpecificData['srData'] && srDetailsCategorySpecificData['srData'][0] && React.createElement(Tooltips, {\n          tooltipText: displaySR[item.key],\n          position: _this2.tooltipPosition,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          className: \"field-value\",\n          variant: \"inherit\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, displaySR[item.key])));\n      })), React.createElement(Button, {\n        color: \"primary\",\n        className: classes.button + ' padding-0 fs-16 color-blue pull-right',\n        onClick: function onClick() {\n          return _this2.openSRNotesDialog(displaySR);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"View Notes \\u203A\"), displayReOpenSrButton && React.createElement(Button, {\n        color: \"primary\",\n        className: classes.button + ' padding-0 fs-16 color-blue pull-right',\n        onClick: function onClick() {\n          return _this2.reOpenSr(displaySR['problem_problemId']);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Re-Open SR \\u203A\"), displayUpdateTaskButton && React.createElement(Button, {\n        color: \"primary\",\n        className: classes.button + ' padding-0 fs-16 color-blue pull-right',\n        onClick: function onClick() {\n          return _this2.openSrTaskUpdateCaseSelectorDialog(displaySR['problem_problemId']);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Assign Task \\u203A\")));\n    }\n  }]);\n\n  return SRDetails;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchSRDetailsTabData: function fetchSRDetailsTabData(data) {\n      return dispatch(_fetchSRDetailsTabData(data));\n    },\n    openPreviousInteractionsDialog: function openPreviousInteractionsDialog(data) {\n      return dispatch(_openPreviousInteractionsDialog(data));\n    },\n    showSRHistoryTab: function showSRHistoryTab() {\n      return dispatch(_showSRHistoryTab());\n    },\n    srNotesDetailsDialogHandler: function srNotesDetailsDialogHandler(srNo) {\n      return dispatch(_srNotesDetailsDialogHandler(srNo));\n    },\n    reOpenResolvedSr: function reOpenResolvedSr(srNumber) {\n      return dispatch(_reOpenResolvedSr(srNumber));\n    },\n    srTaskUpdateCaseSelectorHandler: function srTaskUpdateCaseSelectorHandler(srNumber) {\n      return dispatch(_srTaskUpdateCaseSelectorHandler(srNumber));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    srDetailsTabApiResponse: state.SRDetailsTabApiInfo.srDetailsTabApiResponse,\n    srDetailsCategorySpecificData: state.SRDetailsTabApiInfo.srDetailsCategorySpecificData,\n    customerMobile: state.customerInfo.customerMobile,\n    srDetailsAdditionalData: state.SRDetailsTabApiInfo.srAdditionalDetails,\n    currentSRNumber: state.customerInfo.customerSRNumber,\n    srDetailsProcessedData: state.SRDetailsTabApiInfo.srDetailsProcessedData\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SRDetails));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/sr-details/sr-details.smart.js"],"names":["React","Component","connect","Grid","Button","fetchSRDetailsTabData","showSRHistoryTab","srNotesDetailsDialogHandler","reOpenResolvedSr","srTaskUpdateCaseSelectorHandler","styles","withStyles","openPreviousInteractionsDialog","Tooltips","Typography","SRDetailsFormLabel","title","key","gridSize","SRDetails","props","openPreviosHistoryDialog","srDetailsCategorySpecificData","srDetailsTabApiResponse","showSRHistory","openSRNotesDialog","srNo","reOpenSr","srNumber","openSrTaskUpdateCaseSelectorDialog","showReOpenSrButton","srData","typeSubtypeOpenSrExists","isResolved","problem_activityStatus","toLowerCase","fetchSRToDisplay","length","displaySR","filter","srDetails","bind","classes","currentSRNumber","srDetailsProcessedData","displayReOpenSrButton","displayUpdateTaskButton","isTatExceeded","problem_resolutionTime","resolutionDateTime","Date","parse","currentDateTime","diff","Math","abs","getTime","map","item","index","tooltipPosition","button","mapDispatchToProps","dispatch","data","mapStateToProps","state","SRDetailsTabApiInfo","customerMobile","customerInfo","srDetailsAdditionalData","srAdditionalDetails","customerSRNumber"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport '../../../index.css';\nimport Button from '@material-ui/core/Button';\nimport { fetchSRDetailsTabData, showSRHistoryTab, srNotesDetailsDialogHandler, reOpenResolvedSr} from '../../../actions/sr-details-tab.action';\nimport { srTaskUpdateCaseSelectorHandler} from '../../../actions/task-update.action';\nimport styles from './sr-details.style';\nimport { withStyles } from '@material-ui/core/styles';\nimport { openPreviousInteractionsDialog } from '../../../actions/dialog.action';\nimport Tooltips from '../../common/tooltip/tooltip.dumb';\nimport Typography from '@material-ui/core/Typography';\n\nconst SRDetailsFormLabel = [\n  {\n    title: 'SR NUMBER',\n    key: 'problem_problemId',\n    gridSize: 25\n  },\n  {\n    title: 'PROBLEM SUMMARY',\n    key: 'problem_description',\n    gridSize: 25\n  },\n  {\n    title: 'STATUS',\n    key: 'problem_activityStatus',\n    gridSize: 25\n  },\n  {\n    title: 'CREATED DATE',\n    key: 'problem_createdDate',\n    gridSize: 25\n  },\n  {\n    title: 'SUB TYPE',\n    key: 'problem_subType',\n    gridSize: 25\n  },\n  {\n    title: 'SUB SUB TYPE',\n    key: 'problem_subSubType',\n    gridSize: 25\n  },\n  {\n    title: 'LOCAL CONTACT NAME',\n    key: 'localContactName',\n    gridSize: 25\n  },\n  {\n    title: 'LOCAL EMAIL CONTACT',\n    key: 'emailContact',\n    gridSize: 25\n  },\n  {\n    title: 'LOCAL CONTACT NUMBER',\n    key: 'localContactNumber',\n    gridSize: 25\n  },\n  {\n    title: 'CASE TYPE',\n    key: 'problem_caseType',\n    gridSize: 25\n  },\n  {\n    title: 'IMPACT',\n    key: 'impact',\n    gridSize: 25\n  },\n  {\n    title: 'SEVERITY',\n    key: 'severity',\n    gridSize: 25\n  },\n  {\n    title: 'FFC',\n    key: 'problem_problemCode',\n    gridSize: 25\n  },\n  {\n    title: 'RC',\n    key: 'problem_resolution',\n    gridSize: 25\n  },\n  {\n    title: 'RESOLUTION DATE',\n    key: 'problem_resolutionTime',\n    gridSize: 25\n  }\n]\n\nclass SRDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.openPreviosHistoryDialog = this.openPreviosHistoryDialog.bind(this);\n    this.fetchSRToDisplay = this.fetchSRToDisplay.bind(this);\n  }\n  componentWillMount() {\n    this.props.fetchSRDetailsTabData();\n  }\n  openPreviosHistoryDialog = () => {\n    if (this.props.srDetailsCategorySpecificData && this.props.srDetailsTabApiResponse) {\n      this.props.openPreviousInteractionsDialog(\"SR\");\n    }\n  }\n  showSRHistory = () => {\n    this.props.showSRHistoryTab();\n  }\n\n  openSRNotesDialog = (srNo) => {\n    this.props.srNotesDetailsDialogHandler(srNo);\n  }\n\n  reOpenSr = (srNumber) => {\n    this.props.reOpenResolvedSr(srNumber);\n  }\n\n  openSrTaskUpdateCaseSelectorDialog = (srNumber) => {\n\n    this.props.srTaskUpdateCaseSelectorHandler(srNumber)\n  }\n\n  showReOpenSrButton = (srData, typeSubtypeOpenSrExists) => {\n    let isResolved = srData && srData.problem_activityStatus && srData.problem_activityStatus.toLowerCase() === 'resolved'\n    let key = `${srData['problem_type']}-${srData['problem_subType']}`\n\n    return (isResolved && typeSubtypeOpenSrExists && !typeSubtypeOpenSrExists[key])\n}\n\n  fetchSRToDisplay = (srNumber, srDetailsCategorySpecificData) => {\n    if (srDetailsCategorySpecificData && srDetailsCategorySpecificData['srData'] && srDetailsCategorySpecificData['srData'].length > 0) {\n      if (srNumber) {\n        let displaySR = srDetailsCategorySpecificData['srData'].filter(\n          (srDetails) => {\n            return srDetails[\"problem_problemId\"] === srNumber\n          }\n        )\n        return displaySR[0];\n      } else {\n        return srDetailsCategorySpecificData['srData'][0];\n      }\n    }\n    return null;\n  }\n\n  render() {\n    const { classes, currentSRNumber, srDetailsCategorySpecificData, srDetailsProcessedData } = this.props;\n\n    const displaySR = this.fetchSRToDisplay(currentSRNumber, srDetailsCategorySpecificData);\n\n    let displayReOpenSrButton = false\n    let displayUpdateTaskButton = false\n    if(displaySR) {\n      let isResolved = displaySR.problem_activityStatus && displaySR.problem_activityStatus.toLowerCase() === 'resolved'\n      displayUpdateTaskButton = displaySR.problem_activityStatus && (displaySR.problem_activityStatus.toLowerCase() === 'open' || displaySR.problem_activityStatus.toLowerCase() === 're-open')\n      let isTatExceeded = false\n      if(isResolved && displaySR.problem_resolutionTime) {\n        const resolutionDateTime = new Date(Date.parse(displaySR.problem_resolutionTime))\n        const currentDateTime = new Date()\n        var diff = Math.abs(currentDateTime.getTime() - resolutionDateTime.getTime()) / 3600000;\n        if(diff > 24) {\n          isTatExceeded = true\n        }\n      }\n      let key = `${displaySR['problem_type']}-${displaySR['problem_subType']}-${displaySR['problem_subSubType']}`\n      displayReOpenSrButton = (isResolved && !isTatExceeded && srDetailsProcessedData && !srDetailsProcessedData[key])\n    }\n    \n\n    return (\n      <div>\n        {!displaySR &&\n          <Grid container spacing={24}>\n            <Grid className=\"width-100 padding-40 text-center\">\n              <Typography>\n                No valid SR found in last 6 months\n              </Typography>\n            </Grid>\n          </Grid>\n        }\n        {displaySR &&\n          <Grid className=\"mt-20\">\n            {/* <Button color=\"primary\" className={classes.button + ' padding-0 fs-16 color-blue pull-right'} onClick={this.openPreviosHistoryDialog}>\n              view history &rsaquo;\n            </Button> */}\n            <Grid container>\n              {SRDetailsFormLabel.map((item, index) => (\n                <Grid key={index} item className={(\"width-\") + item.gridSize + \" mb-15\"}>\n                  <p className=\"color-grey fs-12 text-left\">{item.title}</p>\n                  {srDetailsCategorySpecificData && srDetailsCategorySpecificData['srData'] && srDetailsCategorySpecificData['srData'][0] &&\n                    <Tooltips tooltipText={displaySR[item.key]} position={this.tooltipPosition}>\n                      <Typography className=\"field-value\" variant=\"inherit\" noWrap>\n                        {displaySR[item.key]}\n                      </Typography>\n                    </Tooltips>\n                  }\n                </Grid>\n              ))}\n            </Grid>\n            <Button color=\"primary\" className={classes.button + ' padding-0 fs-16 color-blue pull-right'} onClick={() => this.openSRNotesDialog(displaySR)}>\n              View Notes &rsaquo;\n            </Button>\n            {displayReOpenSrButton && <Button color=\"primary\" className={classes.button + ' padding-0 fs-16 color-blue pull-right'} onClick={() => this.reOpenSr(displaySR['problem_problemId'])}>\n              Re-Open SR &rsaquo;\n            </Button>}\n            {displayUpdateTaskButton && <Button color=\"primary\" className={classes.button + ' padding-0 fs-16 color-blue pull-right'} onClick={() => this.openSrTaskUpdateCaseSelectorDialog(displaySR['problem_problemId'])}>\n              Assign Task &rsaquo;\n            </Button>}\n          </Grid>}\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSRDetailsTabData: data => dispatch(fetchSRDetailsTabData(data)),\n  openPreviousInteractionsDialog: data => dispatch(openPreviousInteractionsDialog(data)),\n  showSRHistoryTab: () => dispatch(showSRHistoryTab()),\n  srNotesDetailsDialogHandler: (srNo) => dispatch(srNotesDetailsDialogHandler(srNo)),\n  reOpenResolvedSr: (srNumber) => dispatch(reOpenResolvedSr(srNumber)),\n  srTaskUpdateCaseSelectorHandler: (srNumber) => dispatch(srTaskUpdateCaseSelectorHandler(srNumber))\n});\n\nconst mapStateToProps = state => {\n  return {\n    srDetailsTabApiResponse: state.SRDetailsTabApiInfo.srDetailsTabApiResponse,\n    srDetailsCategorySpecificData: state.SRDetailsTabApiInfo.srDetailsCategorySpecificData,\n    customerMobile: state.customerInfo.customerMobile,\n    srDetailsAdditionalData: state.SRDetailsTabApiInfo.srAdditionalDetails,\n    currentSRNumber: state.customerInfo.customerSRNumber,\n    srDetailsProcessedData: state.SRDetailsTabApiInfo.srDetailsProcessedData,\n  };\n}\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(withStyles(styles)(SRDetails));\n"]},"metadata":{},"sourceType":"module"}