{"ast":null,"code":"import _objectSpread from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SystemStatusActionType } from \"../actiontype/b2b-system-status.actiontype\";\nimport { UtilizationActionType } from \"../actiontype/utilization-tab.actiontype\";\nimport SystemStatusCardService from '../services/system-status-card.service';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { openSnackbarRequest } from './snackbar.action';\nimport AnalyticsService from '../services/analytics-service';\nexport var fetchSystemStatusCardData = function fetchSystemStatusCardData() {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (state && state.SystemStatusCardData && state.SystemStatusCardData.SystemStatusCardDataResponse && state.SystemStatusCardData.SystemStatusCardDataResponse.cardContent) {\n      dispatch(SystemStatusApiSuccess(state.SystemStatusCardData.SystemStatusCardDataResponse));\n      return;\n    }\n\n    var customerInfo = state.customerInfo.customerLSINumber;\n    var snackbarMessage = {};\n    dispatch(SystemStatusApiLoading());\n    dispatch(showCardLoader());\n    var systemStatusCardApiCallStartTime = new Date().getTime();\n    SystemStatusCardService.getSystemStatusDetails(customerInfo).then(function (response) {\n      var systemStatusCardApiCallEndTime = new Date().getTime();\n      dispatch(hideCardLoader());\n      dispatch(disableRefreshIconLoading());\n\n      if (response && response.data && response.data.result) {\n        var analyticsData = {};\n        analyticsData['eVar6'] = systemStatusCardApiCallEndTime - systemStatusCardApiCallStartTime;\n        analyticsData['prop24'] = response.data.result['LSI_STATUS'];\n        analyticsData['prop25'] = response.data.result['OUTAGE'];\n        analyticsData['prop27'] = response.data.result['MEDIA'];\n        analyticsData['prop34'] = response.data.result['ALARM_CHECK'];\n        dispatch(pushHomepageLoadAnalyticsEvent(analyticsData));\n        dispatch(SystemStatusApiSuccess(response.data.result));\n      } else {\n        snackbarMessage = SnackbarMessages.USAGE_DETAILS_NO_DATA;\n        dispatch(openSnackbarRequest(null, snackbarMessage));\n      }\n    }, function (error) {\n      dispatch(disableRefreshIconLoading());\n      dispatch(hideCardLoader());\n      dispatch(SystemStatusApiFailure(error));\n    });\n  };\n};\nexport var pushHomepageLoadAnalyticsEvent = function pushHomepageLoadAnalyticsEvent(analyticsData) {\n  return function (dispatch, getState) {\n    var state = getState();\n    var currentLsiNumber = state.customerInfo.customerLSINumber;\n    var lsiDetails = state.customerInfo.lsiDetails;\n    var analyticsProductDetails = {};\n    var accountNumber = state.customerInfo.accountNumber;\n    analyticsData['prop22'] = accountNumber;\n\n    if (lsiDetails) {\n      var currentLsiProductDetails = null;\n      lsiDetails.map(function (productDetails) {\n        if (productDetails.lsiNumber == currentLsiNumber) {\n          currentLsiProductDetails = productDetails;\n        }\n      });\n\n      if (currentLsiProductDetails) {\n        analyticsProductDetails['prop26'] = currentLsiProductDetails['productName'];\n        analyticsProductDetails['prop28'] = currentLsiProductDetails['productDescription'];\n        analyticsProductDetails['prop29'] = currentLsiProductDetails['bandwidth'];\n        analyticsProductDetails['prop30'] = currentLsiProductDetails.addressA ? currentLsiProductDetails.addressA.addressLine1 ? currentLsiProductDetails.addressA.addressLine1 : '' : '';\n        analyticsProductDetails['prop31'] = currentLsiProductDetails.addressB ? currentLsiProductDetails.addressB.addressLine1 ? currentLsiProductDetails.addressB.addressLine1 : '' : '';\n        analyticsProductDetails['prop32'] = currentLsiProductDetails['activationDate'];\n      }\n    }\n\n    console.log(analyticsProductDetails);\n    AnalyticsService.trackEvent(_objectSpread({\n      eVar0: \"b2b|dt|homepage|updated\"\n    }, analyticsData, analyticsProductDetails));\n  };\n};\nexport var fetchDataTrafficUtilization = function fetchDataTrafficUtilization() {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (state && state.SystemStatusCardData && state.SystemStatusCardData.SystemStatusCardDataResponse && state.SystemStatusCardData.SystemStatusCardDataResponse.cardContent) {\n      dispatch(SystemStatusApiSuccess(state.SystemStatusCardData.SystemStatusCardDataResponse));\n      return;\n    }\n\n    var customerInfo = state.customerInfo.customerLSINumber;\n    var snackbarMessage = {};\n    dispatch(SystemStatusApiLoading());\n    dispatch(showCardLoader());\n    SystemStatusCardService.getSystemStatusDetails(customerInfo).then(function (response) {\n      dispatch(hideCardLoader());\n      dispatch(disableRefreshIconLoading());\n\n      if (response && response.data && response.data.result) {\n        dispatch(SystemStatusApiSuccess(response.data.result));\n      } else {\n        snackbarMessage = SnackbarMessages.USAGE_DETAILS_NO_DATA;\n        dispatch(openSnackbarRequest(null, snackbarMessage));\n      }\n    }, function (error) {\n      dispatch(disableRefreshIconLoading());\n      dispatch(hideCardLoader());\n      dispatch(SystemStatusApiFailure(error));\n    });\n  };\n};\nexport var setECRMStatus = function setECRMStatus(status) {\n  return {\n    type: SystemStatusActionType.SET_ECRM_STATUS,\n    payload: status\n  };\n};\nexport var refreshSystemStatus = function refreshSystemStatus() {\n  return function (dispatch) {\n    dispatch(enableRefreshIconLoading());\n    dispatch(fetchSystemStatusCardData());\n  };\n};\n\nfunction enableRefreshIconLoading() {\n  return {\n    type: SystemStatusActionType.REFRESH_STATE_LOADING\n  };\n}\n\nfunction disableRefreshIconLoading() {\n  return {\n    type: SystemStatusActionType.REFRESH_STATE_LOADING_COMPLETE\n  };\n}\n\nfunction SystemStatusApiLoading() {\n  return {\n    type: SystemStatusActionType.SYSTEM_STATUS_CARD_REQUEST\n  };\n}\n\nfunction SystemStatusApiSuccess(response) {\n  return {\n    type: SystemStatusActionType.SYSTEM_STATUS_CARD_SUCCESS,\n    payload: response\n  };\n}\n\nfunction SystemStatusApiFailure(error) {\n  return {\n    type: SystemStatusActionType.SYSTEM_STATUS_CARD_FAILURE,\n    payload: error\n  };\n}\n\nfunction showCardLoader() {\n  return {\n    type: SystemStatusActionType.SHOW_LOADER\n  };\n}\n\nfunction hideCardLoader() {\n  return {\n    type: SystemStatusActionType.HIDE_LOADER\n  };\n}\n\nfunction showUtilizationLoader() {\n  return {\n    type: UtilizationActionType.SHOW_LOADER\n  };\n}\n\nfunction hideUtilizationLoader() {\n  return {\n    type: UtilizationActionType.HIDE_LOADER\n  };\n}","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/actions/b2b-system-status.action.js"],"names":["SystemStatusActionType","UtilizationActionType","SystemStatusCardService","SnackbarMessages","openSnackbarRequest","AnalyticsService","fetchSystemStatusCardData","dispatch","getState","state","SystemStatusCardData","SystemStatusCardDataResponse","cardContent","SystemStatusApiSuccess","customerInfo","customerLSINumber","snackbarMessage","SystemStatusApiLoading","showCardLoader","systemStatusCardApiCallStartTime","Date","getTime","getSystemStatusDetails","then","response","systemStatusCardApiCallEndTime","hideCardLoader","disableRefreshIconLoading","data","result","analyticsData","pushHomepageLoadAnalyticsEvent","USAGE_DETAILS_NO_DATA","error","SystemStatusApiFailure","currentLsiNumber","lsiDetails","analyticsProductDetails","accountNumber","currentLsiProductDetails","map","productDetails","lsiNumber","addressA","addressLine1","addressB","console","log","trackEvent","eVar0","fetchDataTrafficUtilization","setECRMStatus","status","type","SET_ECRM_STATUS","payload","refreshSystemStatus","enableRefreshIconLoading","REFRESH_STATE_LOADING","REFRESH_STATE_LOADING_COMPLETE","SYSTEM_STATUS_CARD_REQUEST","SYSTEM_STATUS_CARD_SUCCESS","SYSTEM_STATUS_CARD_FAILURE","SHOW_LOADER","HIDE_LOADER","showUtilizationLoader","hideUtilizationLoader"],"mappings":"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","sourcesContent":["import { SystemStatusActionType } from \"../actiontype/b2b-system-status.actiontype\";\nimport { UtilizationActionType } from \"../actiontype/utilization-tab.actiontype\";\nimport SystemStatusCardService from '../services/system-status-card.service';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { openSnackbarRequest } from './snackbar.action';\nimport AnalyticsService from '../services/analytics-service';\n\nexport const fetchSystemStatusCardData = () => (dispatch, getState) => {\n    const state = getState();\n    if (state && state.SystemStatusCardData && state.SystemStatusCardData.SystemStatusCardDataResponse && state.SystemStatusCardData.SystemStatusCardDataResponse.cardContent) {\n        dispatch(SystemStatusApiSuccess(state.SystemStatusCardData.SystemStatusCardDataResponse));\n        return;\n    }\n\n    let customerInfo = state.customerInfo.customerLSINumber\n\n    let snackbarMessage = {}\n    dispatch(SystemStatusApiLoading());\n    dispatch(showCardLoader());\n    let systemStatusCardApiCallStartTime = new Date().getTime();\n    SystemStatusCardService.getSystemStatusDetails(customerInfo).then(\n        response => {\n            let systemStatusCardApiCallEndTime = new Date().getTime();\n            dispatch(hideCardLoader());\n            dispatch(disableRefreshIconLoading());\n\n            if (response && response.data && response.data.result) {\n                const analyticsData = {}\n                analyticsData['eVar6'] = (systemStatusCardApiCallEndTime - systemStatusCardApiCallStartTime)\n                analyticsData['prop24'] = response.data.result['LSI_STATUS']\n                analyticsData['prop25'] = response.data.result['OUTAGE']\n                analyticsData['prop27'] = response.data.result['MEDIA']\n                analyticsData['prop34'] = response.data.result['ALARM_CHECK']\n                dispatch(pushHomepageLoadAnalyticsEvent(analyticsData))\n                dispatch(SystemStatusApiSuccess(response.data.result));\n            }\n            else {\n                snackbarMessage = SnackbarMessages.USAGE_DETAILS_NO_DATA;\n                dispatch(openSnackbarRequest(null, snackbarMessage));\n            }\n        },\n        error => {\n            dispatch(disableRefreshIconLoading());\n            dispatch(hideCardLoader());\n            dispatch(SystemStatusApiFailure(error));\n        }\n    );\n}\n\nexport const pushHomepageLoadAnalyticsEvent = (analyticsData) => (dispatch, getState) => {\n\n    const state = getState();\n    const currentLsiNumber = state.customerInfo.customerLSINumber;\n    const lsiDetails = state.customerInfo.lsiDetails;\n    const analyticsProductDetails = {}\n    const accountNumber = state.customerInfo.accountNumber\n\n    analyticsData['prop22'] = accountNumber\n    if(lsiDetails) {\n        let currentLsiProductDetails = null;\n        lsiDetails.map( productDetails => {\n            if(productDetails.lsiNumber == currentLsiNumber) {\n                currentLsiProductDetails = productDetails\n            }\n        })\n        if(currentLsiProductDetails) {\n            analyticsProductDetails['prop26'] = currentLsiProductDetails['productName']\n            analyticsProductDetails['prop28'] = currentLsiProductDetails['productDescription']\n            analyticsProductDetails['prop29'] = currentLsiProductDetails['bandwidth']\n            analyticsProductDetails['prop30'] = (currentLsiProductDetails.addressA) ? ((currentLsiProductDetails.addressA.addressLine1) ? currentLsiProductDetails.addressA.addressLine1  : '') : ''\n            analyticsProductDetails['prop31'] = (currentLsiProductDetails.addressB) ? ((currentLsiProductDetails.addressB.addressLine1) ? currentLsiProductDetails.addressB.addressLine1  : '') : ''\n            analyticsProductDetails['prop32'] = currentLsiProductDetails['activationDate']\n        }\n    }\n    console.log(analyticsProductDetails)\n\n    AnalyticsService.trackEvent({\n        eVar0: \"b2b|dt|homepage|updated\",\n        ...analyticsData,\n        ...analyticsProductDetails\n    })\n}\n\nexport const fetchDataTrafficUtilization = () => (dispatch, getState) => {\n    const state = getState();\n    if (state && state.SystemStatusCardData && state.SystemStatusCardData.SystemStatusCardDataResponse && state.SystemStatusCardData.SystemStatusCardDataResponse.cardContent) {\n        dispatch(SystemStatusApiSuccess(state.SystemStatusCardData.SystemStatusCardDataResponse));\n        return;\n    }\n\n    let customerInfo = state.customerInfo.customerLSINumber;\n    let snackbarMessage = {}\n    dispatch(SystemStatusApiLoading());\n    dispatch(showCardLoader());\n    SystemStatusCardService.getSystemStatusDetails(customerInfo).then(\n        response => {\n            dispatch(hideCardLoader());\n            dispatch(disableRefreshIconLoading());\n            if (response && response.data && response.data.result) {\n                dispatch(SystemStatusApiSuccess(response.data.result));\n            }\n            else {\n                snackbarMessage = SnackbarMessages.USAGE_DETAILS_NO_DATA;\n                dispatch(openSnackbarRequest(null, snackbarMessage));\n            }\n        },\n        error => {\n            dispatch(disableRefreshIconLoading());\n            dispatch(hideCardLoader());\n            dispatch(SystemStatusApiFailure(error));\n        }\n    );\n}\n\nexport const setECRMStatus = status => {\n    return {\n        type: SystemStatusActionType.SET_ECRM_STATUS,\n        payload: status\n    }\n}\n\nexport const refreshSystemStatus = () => (dispatch) => {\n    dispatch(enableRefreshIconLoading());\n    dispatch(fetchSystemStatusCardData());\n}\n\nfunction enableRefreshIconLoading() {\n    return {\n        type: SystemStatusActionType.REFRESH_STATE_LOADING\n    }\n}\n\nfunction disableRefreshIconLoading() {\n    return {\n        type: SystemStatusActionType.REFRESH_STATE_LOADING_COMPLETE\n    }\n}\n\nfunction SystemStatusApiLoading() {\n    return {\n        type: SystemStatusActionType.SYSTEM_STATUS_CARD_REQUEST\n    }\n}\nfunction SystemStatusApiSuccess(response) {\n    return {\n        type: SystemStatusActionType.SYSTEM_STATUS_CARD_SUCCESS,\n        payload: response\n    }\n}\nfunction SystemStatusApiFailure(error) {\n    return {\n        type: SystemStatusActionType.SYSTEM_STATUS_CARD_FAILURE,\n        payload: error\n    }\n}\n\nfunction showCardLoader() {\n    return {\n        type: SystemStatusActionType.SHOW_LOADER\n    }\n}\n\nfunction hideCardLoader() {\n    return {\n        type: SystemStatusActionType.HIDE_LOADER\n    }\n}\n\nfunction showUtilizationLoader() {\n    return {\n        type: UtilizationActionType.SHOW_LOADER\n    }\n}\n\nfunction hideUtilizationLoader() {\n    return {\n        type: UtilizationActionType.HIDE_LOADER\n    }\n}"]},"metadata":{},"sourceType":"module"}