{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/sub-header/sub-header.smart.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ExternalIcon from \"../../../assets/images/external.svg\";\nimport EBillBlackIcon from \"../../../assets/images/e-bill-black.svg\";\nimport PaperBillRedIcon from \"../../../assets/images/paper_bill_red.svg\";\nimport EBillGreenIcon from \"../../../assets/images/e-bill.svg\";\nimport AppBlackIcon from \"../../../assets/images/my-airtel-app-black.svg\";\nimport AppGreenIcon from \"../../../assets/images/my-airtel-app.svg\";\nimport AppBlueIcon from \"../../../assets/images/my-airtel-app-blue.svg\";\nimport AppOrangeIcon from \"../../../assets/images/my-airtel-app-orange.svg\"; // import Toolbar from '@material-ui/core/Toolbar';\n\nimport styles from './sub-header.style';\nimport { connect } from 'react-redux';\nimport Tooltips from '../tooltip/tooltip.dumb';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { planNameEditHandler as _planNameEditHandler, getPlanInfoCardLink as _getPlanInfoCardLink, editStatusHandler as _editStatusHandler, myAirtelAppIconClickHandler as _myAirtelAppIconClickHandler } from '../../../actions/sub-header.action';\nimport { displayDNDCategoriesRequest as _displayDNDCategoriesRequest } from '../../../actions/app-dialog.action';\nimport { CardLinkConstant } from '../../../constants/card-link.constant';\nimport MultipleTaggingDialog from '../../shared/dialogs/multiple-tagging/multiple-tagging.smart';\n\nvar SubHeader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SubHeader, _Component);\n\n  function SubHeader() {\n    var _this;\n\n    _classCallCheck(this, SubHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubHeader).call(this));\n    _this.custPlanInfo = {};\n    _this.tooltipPosition = \"bottom-start\";\n    _this.onClickEditPlanName = _this.onClickEditPlanName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickEditStatus = _this.onClickEditStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickMyAirtelAppIcon = _this.onClickMyAirtelAppIcon.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SubHeader, [{\n    key: \"custInfoHandler\",\n    value: function custInfoHandler(customerInfo) {\n      if (customerInfo) {\n        this.custPlanInfo['name'] = customerInfo[\"company_name\"];\n        this.custPlanInfo['address'] = customerInfo[\"party_address_1\"];\n        this.custPlanInfo['address'] += customerInfo[\"party_address_2\"] ? customerInfo[\"party_address_2\"] : \"\";\n        this.custPlanInfo['address'] += customerInfo[\"party_address_3\"] ? customerInfo[\"party_address_3\"] : \"\";\n      } else {\n        this.custPlanInfo = {};\n      }\n    }\n  }, {\n    key: \"getColorCode\",\n    value: function getColorCode(data, key) {\n      if (data && data[key] === 'blue') {\n        return ' color-blue cursor-pointer ';\n      } else if (data && data[key] === 'green') {\n        return ' color-green ';\n      } else if (data && data[key] === 'red') {\n        return ' color-red ';\n      } else if (data && data[key] === 'orange') {\n        return ' color-orange cursor-pointer ';\n      }\n\n      return ' color-light-black ';\n    }\n  }, {\n    key: \"onClickEditPlanName\",\n    value: function onClickEditPlanName() {\n      this.props.planNameEditHandler();\n    }\n  }, {\n    key: \"onClickEditStatus\",\n    value: function onClickEditStatus() {\n      this.props.editStatusHandler();\n    }\n  }, {\n    key: \"crmCodingHandler\",\n    value: function crmCodingHandler(key) {\n      this.props.getPlanInfoCardLink(key, CardLinkConstant.CRM_CODE_TYPE);\n    }\n  }, {\n    key: \"onDNDClickHandler\",\n    value: function onDNDClickHandler(value) {\n      if (value && (value.toLowerCase() === 'partial' || value.toLowerCase() === 'inactive')) {\n        this.props.displayDNDCategoriesRequest();\n      }\n    }\n  }, {\n    key: \"onClickMyAirtelAppIcon\",\n    value: function onClickMyAirtelAppIcon() {\n      this.props.myAirtelAppIconClickHandler();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          customerInfo = _this$props.customerInfo;\n      this.custInfoHandler(customerInfo); // console.log(customerAccountDetails);\n\n      return React.createElement(AppBar, {\n        position: \"static\",\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.infoBlock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline-block width-24\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"p\", {\n        className: \"mt-5 color-light-black position-relative fs-14\" + (this.custPlanInfo['name'] ? '' : ' hidden '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.custPlanInfo['name'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"field-value\",\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.custPlanInfo['name'])))), React.createElement(\"p\", {\n        className: \"mt-5 color-light-black fs-13\" + (!this.custPlanInfo['name'] ? '' : ' hidden '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"xxxx\")), React.createElement(\"div\", {\n        className: \"inline-block width-40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Billing Address\"), React.createElement(\"p\", {\n        className: \"mt-5 color-light-black fs-14\" + (this.custPlanInfo['address'] ? '' : ' hidden '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.custPlanInfo['address'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"field-value\",\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.custPlanInfo['address'])))), React.createElement(\"p\", {\n        className: \"mt-5 color-light-black fs-14\" + (!this.custPlanInfo['address'] ? '' : ' hidden '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"xxxx\"))), React.createElement(MultipleTaggingDialog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SubHeader;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    customerMobile: state.customerInfo.customerMobile,\n    customerInfo: state.customerInfo.accountDetails\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    planNameEditHandler: function planNameEditHandler() {\n      return dispatch(_planNameEditHandler());\n    },\n    getPlanInfoCardLink: function getPlanInfoCardLink(key, type) {\n      return dispatch(_getPlanInfoCardLink(key, type));\n    },\n    displayDNDCategoriesRequest: function displayDNDCategoriesRequest() {\n      return dispatch(_displayDNDCategoriesRequest());\n    },\n    editStatusHandler: function editStatusHandler() {\n      return dispatch(_editStatusHandler());\n    },\n    myAirtelAppIconClickHandler: function myAirtelAppIconClickHandler() {\n      return dispatch(_myAirtelAppIconClickHandler());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, {\n  withTheme: true\n})(SubHeader));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/sub-header/sub-header.smart.js"],"names":["React","Component","withStyles","AppBar","styles","connect","Tooltips","Typography","EditIcon","planNameEditHandler","getPlanInfoCardLink","editStatusHandler","myAirtelAppIconClickHandler","displayDNDCategoriesRequest","CardLinkConstant","MultipleTaggingDialog","SubHeader","custPlanInfo","tooltipPosition","onClickEditPlanName","bind","onClickEditStatus","onClickMyAirtelAppIcon","customerInfo","data","key","props","CRM_CODE_TYPE","value","toLowerCase","classes","custInfoHandler","appBar","infoBlock","mapStateToProps","state","customerMobile","accountDetails","mapDispatchToProps","dispatch","type","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ExternalIcon from '../../../assets/images/external.svg';\nimport EBillBlackIcon from '../../../assets/images/e-bill-black.svg';\nimport PaperBillRedIcon from '../../../assets/images/paper_bill_red.svg';\nimport EBillGreenIcon from '../../../assets/images/e-bill.svg';\nimport AppBlackIcon from '../../../assets/images/my-airtel-app-black.svg';\nimport AppGreenIcon from '../../../assets/images/my-airtel-app.svg';\nimport AppBlueIcon from '../../../assets/images/my-airtel-app-blue.svg';\nimport AppOrangeIcon from '../../../assets/images/my-airtel-app-orange.svg';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport styles from './sub-header.style';\nimport { connect } from 'react-redux';\nimport Tooltips from '../tooltip/tooltip.dumb';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { planNameEditHandler, getPlanInfoCardLink, editStatusHandler, myAirtelAppIconClickHandler } from '../../../actions/sub-header.action';\nimport { displayDNDCategoriesRequest } from '../../../actions/app-dialog.action';\nimport { CardLinkConstant } from '../../../constants/card-link.constant';\nimport MultipleTaggingDialog from '../../shared/dialogs/multiple-tagging/multiple-tagging.smart';\nclass SubHeader extends Component {\n\n    custPlanInfo = {};\n    tooltipPosition = \"bottom-start\";\n\n    constructor() {\n        super();\n        this.onClickEditPlanName = this.onClickEditPlanName.bind(this);\n        this.onClickEditStatus = this.onClickEditStatus.bind(this);\n        this.onClickMyAirtelAppIcon = this.onClickMyAirtelAppIcon.bind(this);\n    }\n\n    custInfoHandler(customerInfo) {\n        if (customerInfo) {\n            this.custPlanInfo['name'] = customerInfo[\"company_name\"];    \n            this.custPlanInfo['address'] = customerInfo[\"party_address_1\"];\n            this.custPlanInfo['address'] +=  customerInfo[\"party_address_2\"]? customerInfo[\"party_address_2\"]:\"\";\n            this.custPlanInfo['address'] +=  customerInfo[\"party_address_3\"]? customerInfo[\"party_address_3\"]:\"\";\n\n        } else {\n            this.custPlanInfo = {};\n        }\n    }\n\n    getColorCode(data, key) {\n        if (data && data[key] === 'blue') {\n            return ' color-blue cursor-pointer ';\n        } else if (data && data[key] === 'green') {\n            return ' color-green ';\n        } else if (data && data[key] === 'red') {\n            return ' color-red ';\n        } else if (data && data[key] === 'orange') {\n            return ' color-orange cursor-pointer ';\n        }\n        return ' color-light-black ';\n    }\n\n    onClickEditPlanName() {\n        this.props.planNameEditHandler();\n    }\n\n    onClickEditStatus() {\n        this.props.editStatusHandler();\n    }\n\n\n\n    crmCodingHandler(key) {\n        this.props.getPlanInfoCardLink(key, CardLinkConstant.CRM_CODE_TYPE);\n    }\n\n    onDNDClickHandler(value) {\n        if (value && (value.toLowerCase() === 'partial' || value.toLowerCase() === 'inactive')) {\n            this.props.displayDNDCategoriesRequest();\n        }\n    }\n\n    onClickMyAirtelAppIcon() {\n        this.props.myAirtelAppIconClickHandler();\n    }\n\n    render() {\n\n        const { classes, customerInfo } = this.props;\n        this.custInfoHandler(customerInfo);\n        // console.log(customerAccountDetails);\n        return (\n            <AppBar position=\"static\" className={classes.appBar}>\n\n            <div className={classes.infoBlock}>\n                    \n                    <div className=\"inline-block width-24\">\n                        <p className=\"color-grey text-uppercase fs-12\">Name</p>\n                        <p className={\"mt-5 color-light-black position-relative fs-14\" + (this.custPlanInfo['name'] ? '' : ' hidden ')}>\n                            <span className=\"inline-block mr-10 max-w-200\">\n                                <Tooltips tooltipText={this.custPlanInfo['name']} position={this.tooltipPosition}>\n                                    <Typography className=\"field-value\" variant=\"inherit\" noWrap>\n                                        {this.custPlanInfo['name']}\n                                    </Typography>\n                                </Tooltips>\n                            </span>\n                        </p>\n                        <p className={\"mt-5 color-light-black fs-13\" + (!this.custPlanInfo['name'] ? '' : ' hidden ')}>xxxx</p>\n                    </div>\n\n                    {/* <div className=\"inline-block width-20\">\n                        <p className=\"color-grey text-uppercase fs-12\">Email ID</p>\n                        <p className={\"mt-5 color-light-black position-relative fs-14\" + (this.custPlanInfo['email'] ? '' : ' hidden ')}>\n                        <span className=\"inline-block mr-10 max-w-150\">\n                            <Tooltips tooltipText={this.custPlanInfo['email']} position={this.tooltipPosition}>\n                                <Typography className=\"field-value\" variant=\"inherit\" noWrap>\n                                {this.custPlanInfo['email']}\n                                </Typography>\n                            </Tooltips>\n                        </span>\n                        </p>\n                        <p className={\"mt-5 color-light-black fs-13\" + (!this.custPlanInfo['email'] ? '' : ' hidden ')}>xxxx</p>\n                    </div> */}\n\n                    <div className=\"inline-block width-40\">\n                        <p className=\"color-grey text-uppercase fs-12\">Billing Address</p>\n                        <p className={\"mt-5 color-light-black fs-14\" + (this.custPlanInfo['address'] ? '' : ' hidden ')}>\n                            <span className=\"inline-block mr-10 max-w-400\">\n                                <Tooltips tooltipText={this.custPlanInfo['address']} position={this.tooltipPosition}>\n                                    <Typography className=\"field-value\" variant=\"inherit\" noWrap>\n                                    {this.custPlanInfo['address']}\n                                    </Typography>\n                                </Tooltips>\n                            </span>\n                        </p>\n                        <p className={\"mt-5 color-light-black fs-14\" + (!this.custPlanInfo['address'] ? '' : ' hidden ')}>xxxx</p>\n                    </div>\n                </div>\n                <MultipleTaggingDialog />\n            </AppBar>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        customerMobile: state.customerInfo.customerMobile,\n        customerInfo: state.customerInfo.accountDetails\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    planNameEditHandler: () => dispatch(planNameEditHandler()),\n    getPlanInfoCardLink: (key, type) => dispatch(getPlanInfoCardLink(key, type)),\n    displayDNDCategoriesRequest: () => dispatch(displayDNDCategoriesRequest()),\n    editStatusHandler: () => dispatch(editStatusHandler()),\n    myAirtelAppIconClickHandler: () => dispatch(myAirtelAppIconClickHandler())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(SubHeader));"]},"metadata":{},"sourceType":"module"}