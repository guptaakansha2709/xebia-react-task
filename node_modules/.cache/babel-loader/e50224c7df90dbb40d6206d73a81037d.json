{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/previous-interactions/previous-interactions-sr.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport styles from './previous-interactions.style';\nimport SrHistoryRowDetail from './sr-history-row-detail.dumb';\nimport Tab from '@material-ui/core/Tab';\nimport SRDetails from '../../home/sr-details/sr-details.smart';\nimport { setRowClickExpansionIndex as _setRowClickExpansionIndex, closePanelExpansion as _closePanelExpansion, showSRDetail as _showSRDetail, srNotesDetailsDialogHandler as _srNotesDetailsDialogHandler, reOpenResolvedSr as _reOpenResolvedSr } from '../../../actions/sr-details-tab.action';\nimport { srTaskUpdateCaseSelectorHandler as _srTaskUpdateCaseSelectorHandler } from '../../../actions/task-update.action';\nimport AppLoader from '../AppLoader';\nimport Tooltips from '../tooltip/tooltip.dumb';\nimport Typography from '@material-ui/core/Typography';\nvar labelList = [{\n  title: 'SR NUMBER',\n  key: 'problem_problemId'\n}, {\n  title: 'CREATED DATE',\n  key: 'problem_createdDate'\n}, {\n  title: 'STATUS',\n  key: 'problem_activityStatus'\n}, {\n  title: 'SUB TYPE',\n  key: 'problem_subType'\n}, {\n  title: 'CASE TYPE',\n  key: 'problem_caseType'\n}, {\n  title: 'CLOSURE DATE',\n  key: 'problem_resolutionTime'\n}];\n\nvar PreviousSRHistoryTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PreviousSRHistoryTab, _Component);\n\n  function PreviousSRHistoryTab(props) {\n    var _this;\n\n    _classCallCheck(this, PreviousSRHistoryTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PreviousSRHistoryTab).call(this, props));\n\n    _this.sortTableData = function (sortOrder, sortedOn) {\n      var tableData = _this.state.tableData;\n      var sortedOnParameter = labelList[sortedOn][\"key\"];\n\n      if (tableData != null) {\n        tableData.sort(function (a, b) {\n          var parameterA = a[sortedOnParameter] ? a[sortedOnParameter].toString() : \"\";\n          var parameterB = b[sortedOnParameter] ? b[sortedOnParameter].toString() : \"\";\n          if (sortOrder == \"asc\") return parameterA >= parameterB ? -1 : 1;else return parameterA >= parameterB ? 1 : -1;\n        });\n      }\n\n      _this.setState({\n        tableData: tableData\n      });\n    };\n\n    _this.createSortHandler = function (index) {\n      var sortOrder = _this.state.sortOrder;\n      var sortedOn = index;\n\n      if (index == _this.state.sortedOn) {\n        sortOrder = _this.state.sortOrder == \"desc\" ? \"asc\" : \"desc\";\n\n        _this.setState({\n          sortOrder: sortOrder\n        });\n      } else {\n        var _sortedOn = index;\n\n        _this.setState({\n          sortedOn: _sortedOn\n        });\n      }\n\n      _this.sortTableData(sortOrder, sortedOn);\n    };\n\n    _this.getTabs = function () {\n      var srDetailsCategorySpecificData = _this.props.srDetailsCategorySpecificData;\n      var tabArr = [];\n\n      if (srDetailsCategorySpecificData && srDetailsCategorySpecificData['srData'] && srDetailsCategorySpecificData['srData'].length > 0) {\n        tabArr.push('SR');\n      }\n\n      if (srDetailsCategorySpecificData && srDetailsCategorySpecificData['ftrData'] && srDetailsCategorySpecificData['ftrData'].length > 0) {\n        tabArr.push('FTR');\n      }\n\n      return tabArr;\n    };\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        selectedType: value\n      });\n    };\n\n    _this.handleCloseExpansionPanel = function (panelIndex) {\n      _this.props.closePanelExpansion(panelIndex);\n    };\n\n    _this.handleRowClick = function (index) {\n      _this.props.setRowClickExpansionIndex(index);\n    };\n\n    _this.getTableData = function () {\n      if (_this.props.srDetailsCategorySpecificData && _this.props.srDetailsCategorySpecificData['srData'] != _this.state.tableData) {\n        _this.setState({\n          tableData: _this.props.srDetailsCategorySpecificData['srData']\n        });\n      }\n    };\n\n    _this.openSRNotesDialog = function (srNo) {\n      _this.props.srNotesDetailsDialogHandler(srNo);\n    };\n\n    _this.reOpenSr = function (srNumber) {\n      _this.props.reOpenResolvedSr(srNumber);\n    };\n\n    _this.openSrTaskUpdateCaseSelectorDialog = function (srNumber) {\n      _this.props.srTaskUpdateCaseSelectorHandler(srNumber);\n    };\n\n    _this.state = {\n      tableData: [],\n      sortedOn: -1,\n      sortOrder: \"desc\",\n      expanded: 'panel1',\n      selectedType: _this.getTabs().includes(props.activeTab) ? _this.props.activeTab : _this.getTabs()[0]\n    };\n    return _this;\n  }\n\n  _createClass(PreviousSRHistoryTab, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          showSRHistory = _this$props.showSRHistory,\n          expandedRowIndex = _this$props.expandedRowIndex,\n          showSRTable = _this$props.showSRTable,\n          srDetailsTabApiResponse = _this$props.srDetailsTabApiResponse,\n          srDetailsCategorySpecificData = _this$props.srDetailsCategorySpecificData;\n      this.getTableData();\n      var tableData = this.state.tableData;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.props.showSRHistory && tableData && tableData.length > 0 && React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, tableData.map(function (row, rowIndex) {\n        if (expandedRowIndex !== rowIndex) {\n          return React.createElement(TableRow, {\n            className: \"bg-hover clickable\",\n            key: rowIndex,\n            onClick: function onClick() {\n              _this2.handleRowClick(rowIndex);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, labelList.map(function (cols, index) {\n            return React.createElement(TableCell, {\n              className: \"int-history-cell\",\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              className: \"fs-12 color-707070 mb-5\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }, \" \", cols.title, \" \"), React.createElement(Tooltips, {\n              tooltipText: row[cols.key],\n              position: _this2.tooltipPosition,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            }, React.createElement(Typography, {\n              className: \"field-value\",\n              variant: \"inherit\",\n              noWrap: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            }, row[cols.key])));\n          }));\n        } else {\n          return React.createElement(TableRow, {\n            key: rowIndex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, React.createElement(TableCell, {\n            colSpan: labelList.length,\n            className: \"p-0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(SrHistoryRowDetail, {\n            data: row,\n            closingExpansionPanel: function closingExpansionPanel() {\n              _this2.handleCloseExpansionPanel('-1');\n            },\n            openSRNotesDialog: _this2.openSRNotesDialog,\n            reOpenSr: _this2.reOpenSr,\n            openSrTaskUpdateCaseSelectorDialog: _this2.openSrTaskUpdateCaseSelectorDialog,\n            srDetailsProcessedData: _this2.props.srDetailsProcessedData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          })));\n        }\n      }))), !this.props.showSRHistory && React.createElement(SRDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), this.props.srDetailsTabLoadingStatus ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(AppLoader, {\n        cardLoader: this.props.srDetailsTabLoadingStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })) : null);\n    }\n  }]);\n\n  return PreviousSRHistoryTab;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setRowClickExpansionIndex: function setRowClickExpansionIndex(data) {\n      return dispatch(_setRowClickExpansionIndex(data));\n    },\n    closePanelExpansion: function closePanelExpansion(data) {\n      return dispatch(_closePanelExpansion(data));\n    },\n    showSRDetail: function showSRDetail(data) {\n      return dispatch(_showSRDetail(data));\n    },\n    srNotesDetailsDialogHandler: function srNotesDetailsDialogHandler(srNo) {\n      return dispatch(_srNotesDetailsDialogHandler(srNo));\n    },\n    reOpenResolvedSr: function reOpenResolvedSr(srNumber) {\n      return dispatch(_reOpenResolvedSr(srNumber));\n    },\n    srTaskUpdateCaseSelectorHandler: function srTaskUpdateCaseSelectorHandler(srNumber) {\n      return dispatch(_srTaskUpdateCaseSelectorHandler(srNumber));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    srDetailsTabApiResponse: state.SRDetailsTabApiInfo.srDetailsTabApiResponse,\n    srDetailsCategorySpecificData: state.SRDetailsTabApiInfo.srDetailsCategorySpecificData,\n    expandedRowIndex: state.SRDetailsTabApiInfo.expandedRowIndex,\n    showSRHistory: state.SRDetailsTabApiInfo.showSRHistory,\n    srDetailsProcessedData: state.SRDetailsTabApiInfo.srDetailsProcessedData,\n    srDetailsTabLoadingStatus: state.SRDetailsTabApiInfo.SRDetailsTabStatus === 'loading'\n  };\n};\n\nPreviousSRHistoryTab.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PreviousSRHistoryTab));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/previous-interactions/previous-interactions-sr.smart.js"],"names":["React","Component","connect","PropTypes","withStyles","Table","TableBody","TableCell","TableRow","styles","SrHistoryRowDetail","Tab","SRDetails","setRowClickExpansionIndex","closePanelExpansion","showSRDetail","srNotesDetailsDialogHandler","reOpenResolvedSr","srTaskUpdateCaseSelectorHandler","AppLoader","Tooltips","Typography","labelList","title","key","PreviousSRHistoryTab","props","sortTableData","sortOrder","sortedOn","tableData","state","sortedOnParameter","sort","a","b","parameterA","toString","parameterB","setState","createSortHandler","index","getTabs","srDetailsCategorySpecificData","tabArr","length","push","handleChange","event","value","selectedType","handleCloseExpansionPanel","panelIndex","handleRowClick","getTableData","openSRNotesDialog","srNo","reOpenSr","srNumber","openSrTaskUpdateCaseSelectorDialog","expanded","includes","activeTab","classes","showSRHistory","expandedRowIndex","showSRTable","srDetailsTabApiResponse","table","map","row","rowIndex","cols","tooltipPosition","srDetailsProcessedData","srDetailsTabLoadingStatus","mapDispatchToProps","dispatch","data","mapStateToProps","SRDetailsTabApiInfo","SRDetailsTabStatus","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;AACA,SAASC,yBAAyB,IAAzBA,0BAAT,EAAoCC,mBAAmB,IAAnBA,oBAApC,EAAyDC,YAAY,IAAZA,aAAzD,EAAuEC,2BAA2B,IAA3BA,4BAAvE,EAAoGC,gBAAgB,IAAhBA,iBAApG,QAA4H,wCAA5H;AACA,SAASC,+BAA+B,IAA/BA,gCAAT,QAA+C,qCAA/C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAGA,IAAMC,SAAS,GAAG,CACd;AACIC,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,GAAG,EAAE;AAFT,CADc,EAKd;AACID,EAAAA,KAAK,EAAE,cADX;AAEIC,EAAAA,GAAG,EAAE;AAFT,CALc,EASd;AACID,EAAAA,KAAK,EAAE,QADX;AAEIC,EAAAA,GAAG,EAAE;AAFT,CATc,EAad;AACID,EAAAA,KAAK,EAAE,UADX;AAEIC,EAAAA,GAAG,EAAE;AAFT,CAbc,EAiBd;AACID,EAAAA,KAAK,EAAE,WADX;AAEIC,EAAAA,GAAG,EAAE;AAFT,CAjBc,EAqBd;AACID,EAAAA,KAAK,EAAE,cADX;AAEIC,EAAAA,GAAG,EAAE;AAFT,CArBc,CAAlB;;IA4BMC,oB;;;;;AACF,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8FAAMA,KAAN;;AADe,UAWnBC,aAXmB,GAWH,UAACC,SAAD,EAAYC,QAAZ,EAAyB;AACrC,UAAIC,SAAS,GAAG,MAAKC,KAAL,CAAWD,SAA3B;AACA,UAAIE,iBAAiB,GAAGV,SAAS,CAACO,QAAD,CAAT,CAAoB,KAApB,CAAxB;;AACA,UAAIC,SAAS,IAAI,IAAjB,EAAuB;AACnBA,QAAAA,SAAS,CAACG,IAAV,CAAe,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC3B,cAAIC,UAAU,GAAGF,CAAC,CAACF,iBAAD,CAAD,GAAuBE,CAAC,CAACF,iBAAD,CAAD,CAAqBK,QAArB,EAAvB,GAAyD,EAA1E;AACA,cAAIC,UAAU,GAAGH,CAAC,CAACH,iBAAD,CAAD,GAAuBG,CAAC,CAACH,iBAAD,CAAD,CAAqBK,QAArB,EAAvB,GAAyD,EAA1E;AACA,cAAIT,SAAS,IAAI,KAAjB,EACI,OAAOQ,UAAU,IAAIE,UAAd,GAA2B,CAAC,CAA5B,GAAgC,CAAvC,CADJ,KAGI,OAAOF,UAAU,IAAIE,UAAd,GAA2B,CAA3B,GAA+B,CAAC,CAAvC;AACP,SAPD;AAQH;;AACD,YAAKC,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAEA;AAAb,OAAd;AACH,KAzBkB;;AAAA,UA2BnBU,iBA3BmB,GA2BC,UAACC,KAAD,EAAW;AAC3B,UAAIb,SAAS,GAAG,MAAKG,KAAL,CAAWH,SAA3B;AACA,UAAIC,QAAQ,GAAGY,KAAf;;AACA,UAAIA,KAAK,IAAI,MAAKV,KAAL,CAAWF,QAAxB,EAAkC;AAC9BD,QAAAA,SAAS,GAAG,MAAKG,KAAL,CAAWH,SAAX,IAAwB,MAAxB,GAAiC,KAAjC,GAAyC,MAArD;;AACA,cAAKW,QAAL,CAAc;AAAEX,UAAAA,SAAS,EAAEA;AAAb,SAAd;AACH,OAHD,MAGO;AACH,YAAIC,SAAQ,GAAGY,KAAf;;AACA,cAAKF,QAAL,CAAc;AAAEV,UAAAA,QAAQ,EAAEA;AAAZ,SAAd;AACH;;AACD,YAAKF,aAAL,CAAmBC,SAAnB,EAA8BC,QAA9B;AACH,KAtCkB;;AAAA,UAyCnBa,OAzCmB,GAyCT,YAAM;AAAA,UACJC,6BADI,GAC8B,MAAKjB,KADnC,CACJiB,6BADI;AAEZ,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAID,6BAA6B,IAAIA,6BAA6B,CAAC,QAAD,CAA9D,IAA4EA,6BAA6B,CAAC,QAAD,CAA7B,CAAwCE,MAAxC,GAAiD,CAAjI,EAAoI;AAChID,QAAAA,MAAM,CAACE,IAAP,CAAY,IAAZ;AACH;;AACD,UAAIH,6BAA6B,IAAIA,6BAA6B,CAAC,SAAD,CAA9D,IAA6EA,6BAA6B,CAAC,SAAD,CAA7B,CAAyCE,MAAzC,GAAkD,CAAnI,EAAsI;AAClID,QAAAA,MAAM,CAACE,IAAP,CAAY,KAAZ;AACH;;AACD,aAAOF,MAAP;AAEH,KApDkB;;AAAA,UAuDnBG,YAvDmB,GAuDJ,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC7B,YAAKV,QAAL,CAAc;AACVW,QAAAA,YAAY,EAAED;AADJ,OAAd;AAGH,KA3DkB;;AAAA,UA6DnBE,yBA7DmB,GA6DS,UAAAC,UAAU,EAAI;AACtC,YAAK1B,KAAL,CAAWZ,mBAAX,CAA+BsC,UAA/B;AACH,KA/DkB;;AAAA,UAiEnBC,cAjEmB,GAiEF,UAAAZ,KAAK,EAAI;AACtB,YAAKf,KAAL,CAAWb,yBAAX,CAAqC4B,KAArC;AACH,KAnEkB;;AAAA,UAqEnBa,YArEmB,GAqEJ,YAAM;AACjB,UAAI,MAAK5B,KAAL,CAAWiB,6BAAX,IAA4C,MAAKjB,KAAL,CAAWiB,6BAAX,CAAyC,QAAzC,KAAsD,MAAKZ,KAAL,CAAWD,SAAjH,EAA4H;AACxH,cAAKS,QAAL,CAAc;AAAET,UAAAA,SAAS,EAAE,MAAKJ,KAAL,CAAWiB,6BAAX,CAAyC,QAAzC;AAAb,SAAd;AACH;AACJ,KAzEkB;;AAAA,UA2EnBY,iBA3EmB,GA2EC,UAACC,IAAD,EAAU;AAC1B,YAAK9B,KAAL,CAAWV,2BAAX,CAAuCwC,IAAvC;AACH,KA7EkB;;AAAA,UA+EnBC,QA/EmB,GA+ER,UAACC,QAAD,EAAc;AACrB,YAAKhC,KAAL,CAAWT,gBAAX,CAA4ByC,QAA5B;AACH,KAjFkB;;AAAA,UAmFnBC,kCAnFmB,GAmFkB,UAACD,QAAD,EAAc;AAC/C,YAAKhC,KAAL,CAAWR,+BAAX,CAA2CwC,QAA3C;AACH,KArFkB;;AAEf,UAAK3B,KAAL,GAAa;AACTD,MAAAA,SAAS,EAAE,EADF;AAETD,MAAAA,QAAQ,EAAE,CAAC,CAFF;AAGTD,MAAAA,SAAS,EAAE,MAHF;AAITgC,MAAAA,QAAQ,EAAE,QAJD;AAKTV,MAAAA,YAAY,EAAG,MAAKR,OAAL,GAAemB,QAAf,CAAwBnC,KAAK,CAACoC,SAA9B,CAAD,GAA6C,MAAKpC,KAAL,CAAWoC,SAAxD,GAAoE,MAAKpB,OAAL,GAAe,CAAf;AALzE,KAAb;AAFe;AASlB;;;;6BA8EQ;AAAA;;AAAA,wBACqH,KAAKhB,KAD1H;AAAA,UACGqC,OADH,eACGA,OADH;AAAA,UACYC,aADZ,eACYA,aADZ;AAAA,UAC2BC,gBAD3B,eAC2BA,gBAD3B;AAAA,UAC6CC,WAD7C,eAC6CA,WAD7C;AAAA,UAC0DC,uBAD1D,eAC0DA,uBAD1D;AAAA,UACmFxB,6BADnF,eACmFA,6BADnF;AAEL,WAAKW,YAAL;AACA,UAAMxB,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA7B;AAGA,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKJ,KAAL,CAAWsC,aAAX,IAA4BlC,SAA5B,IAAyCA,SAAS,CAACe,MAAV,GAAmB,CAA5D,IACG,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEkB,OAAO,CAACK,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKtC,SAAS,CAACuC,GAAV,CAAc,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC9B,YAAIN,gBAAgB,KAAKM,QAAzB,EAAmC;AAC/B,iBACI,oBAAC,QAAD;AAAU,YAAA,SAAS,EAAC,oBAApB;AAAyC,YAAA,GAAG,EAAEA,QAA9C;AAAwD,YAAA,OAAO,EAAE,mBAAM;AAAE,cAAA,MAAI,CAAClB,cAAL,CAAoBkB,QAApB;AAA+B,aAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKjD,SAAS,CAAC+C,GAAV,CAAc,UAACG,IAAD,EAAO/B,KAAP,EAAiB;AAC5B,mBACI,oBAAC,SAAD;AAAW,cAAA,SAAS,EAAC,kBAArB;AAAwC,cAAA,GAAG,EAAEA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAG,cAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyC+B,IAAI,CAACjD,KAA9C,MADJ,EAEI,oBAAC,QAAD;AAAU,cAAA,WAAW,EAAE+C,GAAG,CAACE,IAAI,CAAChD,GAAN,CAA1B;AAAsC,cAAA,QAAQ,EAAE,MAAI,CAACiD,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,UAAD;AAAY,cAAA,SAAS,EAAC,aAAtB;AAAoC,cAAA,OAAO,EAAC,SAA5C;AAAsD,cAAA,MAAM,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACKH,GAAG,CAACE,IAAI,CAAChD,GAAN,CADR,CADJ,CAFJ,CADJ;AAUH,WAXA,CADL,CADJ;AAgBH,SAjBD,MAkBK;AACD,iBACI,oBAAC,QAAD;AAAU,YAAA,GAAG,EAAE+C,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,SAAD;AAAW,YAAA,OAAO,EAAEjD,SAAS,CAACuB,MAA9B;AAAsC,YAAA,SAAS,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,kBAAD;AAAoB,YAAA,IAAI,EAAEyB,GAA1B;AAA+B,YAAA,qBAAqB,EAAE,iCAAM;AAAE,cAAA,MAAI,CAACnB,yBAAL,CAA+B,IAA/B;AAAsC,aAApG;AACC,YAAA,iBAAiB,EAAE,MAAI,CAACI,iBADzB;AAC4C,YAAA,QAAQ,EAAE,MAAI,CAACE,QAD3D;AACqE,YAAA,kCAAkC,EAAE,MAAI,CAACE,kCAD9G;AACkJ,YAAA,sBAAsB,EAAI,MAAI,CAACjC,KAAL,CAAWgD,sBADvL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CADJ;AAQH;AACJ,OA7BA,CADL,CADJ,CAHR,EAsCK,CAAC,KAAKhD,KAAL,CAAWsC,aAAZ,IAA6B,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtClC,EAuCK,KAAKtC,KAAL,CAAWiD,yBAAX,GAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAE,KAAKjD,KAAL,CAAWiD,yBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CAAvC,GAAoH,IAvCzH,CADJ;AA6CH;;;;EA3I8B1E,S;;AA6InC,IAAM2E,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpChE,IAAAA,yBAAyB,EAAE,mCAAAiE,IAAI;AAAA,aAAID,QAAQ,CAAChE,0BAAyB,CAACiE,IAAD,CAA1B,CAAZ;AAAA,KADK;AAEpChE,IAAAA,mBAAmB,EAAE,6BAAAgE,IAAI;AAAA,aAAID,QAAQ,CAAC/D,oBAAmB,CAACgE,IAAD,CAApB,CAAZ;AAAA,KAFW;AAGpC/D,IAAAA,YAAY,EAAE,sBAAA+D,IAAI;AAAA,aAAID,QAAQ,CAAC9D,aAAY,CAAC+D,IAAD,CAAb,CAAZ;AAAA,KAHkB;AAIpC9D,IAAAA,2BAA2B,EAAE,qCAACwC,IAAD;AAAA,aAAUqB,QAAQ,CAAC7D,4BAA2B,CAACwC,IAAD,CAA5B,CAAlB;AAAA,KAJO;AAKpCvC,IAAAA,gBAAgB,EAAE,0BAACyC,QAAD;AAAA,aAAcmB,QAAQ,CAAC5D,iBAAgB,CAACyC,QAAD,CAAjB,CAAtB;AAAA,KALkB;AAMpCxC,IAAAA,+BAA+B,EAAE,yCAACwC,QAAD;AAAA,aAAcmB,QAAQ,CAAC3D,gCAA+B,CAACwC,QAAD,CAAhC,CAAtB;AAAA;AANG,GAAL;AAAA,CAAnC;;AAUA,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAAAhD,KAAK,EAAI;AAC7B,SAAO;AACHoC,IAAAA,uBAAuB,EAAEpC,KAAK,CAACiD,mBAAN,CAA0Bb,uBADhD;AAEHxB,IAAAA,6BAA6B,EAAEZ,KAAK,CAACiD,mBAAN,CAA0BrC,6BAFtD;AAGHsB,IAAAA,gBAAgB,EAAElC,KAAK,CAACiD,mBAAN,CAA0Bf,gBAHzC;AAIHD,IAAAA,aAAa,EAAEjC,KAAK,CAACiD,mBAAN,CAA0BhB,aAJtC;AAKHU,IAAAA,sBAAsB,EAAE3C,KAAK,CAACiD,mBAAN,CAA0BN,sBAL/C;AAMHC,IAAAA,yBAAyB,EAAE5C,KAAK,CAACiD,mBAAN,CAA0BC,kBAA1B,KAAiD;AANzE,GAAP;AAQH,CATD;;AAWAxD,oBAAoB,CAACyD,SAArB,GAAiC;AAC7BnB,EAAAA,OAAO,EAAE5D,SAAS,CAACgF,MAAV,CAAiBC;AADG,CAAjC;AAIA,eAAelF,OAAO,CAClB6E,eADkB,EACDH,kBADC,CAAP,CAEbxE,UAAU,CAACK,MAAD,CAAV,CAAmBgB,oBAAnB,CAFa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport styles from './previous-interactions.style';\nimport SrHistoryRowDetail from './sr-history-row-detail.dumb';\nimport Tab from '@material-ui/core/Tab';\nimport SRDetails from '../../home/sr-details/sr-details.smart';\nimport { setRowClickExpansionIndex, closePanelExpansion, showSRDetail, srNotesDetailsDialogHandler, reOpenResolvedSr } from '../../../actions/sr-details-tab.action'\nimport { srTaskUpdateCaseSelectorHandler} from '../../../actions/task-update.action';\nimport AppLoader from '../AppLoader';\nimport Tooltips from '../tooltip/tooltip.dumb';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst labelList = [\n    {\n        title: 'SR NUMBER',\n        key: 'problem_problemId'\n    },\n    {\n        title: 'CREATED DATE',\n        key: 'problem_createdDate'\n    },\n    {\n        title: 'STATUS',\n        key: 'problem_activityStatus'\n    },\n    {\n        title: 'SUB TYPE',\n        key: 'problem_subType'\n    },\n    {\n        title: 'CASE TYPE',\n        key: 'problem_caseType'\n    },\n    {\n        title: 'CLOSURE DATE',\n        key: 'problem_resolutionTime'\n    }\n]\n\n\nclass PreviousSRHistoryTab extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tableData: [],\n            sortedOn: -1,\n            sortOrder: \"desc\",\n            expanded: 'panel1',\n            selectedType: (this.getTabs().includes(props.activeTab)) ? this.props.activeTab : this.getTabs()[0]\n        };\n    }\n\n    sortTableData = (sortOrder, sortedOn) => {\n        let tableData = this.state.tableData;\n        let sortedOnParameter = labelList[sortedOn][\"key\"];\n        if (tableData != null) {\n            tableData.sort(function (a, b) {\n                let parameterA = a[sortedOnParameter] ? a[sortedOnParameter].toString() : \"\";\n                let parameterB = b[sortedOnParameter] ? b[sortedOnParameter].toString() : \"\";\n                if (sortOrder == \"asc\")\n                    return parameterA >= parameterB ? -1 : 1\n                else\n                    return parameterA >= parameterB ? 1 : -1\n            });\n        }\n        this.setState({ tableData: tableData });\n    }\n\n    createSortHandler = (index) => {\n        let sortOrder = this.state.sortOrder;\n        let sortedOn = index;\n        if (index == this.state.sortedOn) {\n            sortOrder = this.state.sortOrder == \"desc\" ? \"asc\" : \"desc\";\n            this.setState({ sortOrder: sortOrder });\n        } else {\n            let sortedOn = index;\n            this.setState({ sortedOn: sortedOn });\n        }\n        this.sortTableData(sortOrder, sortedOn);\n    }\n\n\n    getTabs = () => {\n        const { srDetailsCategorySpecificData } = this.props;\n        let tabArr = []\n        if (srDetailsCategorySpecificData && srDetailsCategorySpecificData['srData'] && srDetailsCategorySpecificData['srData'].length > 0) {\n            tabArr.push('SR')\n        }\n        if (srDetailsCategorySpecificData && srDetailsCategorySpecificData['ftrData'] && srDetailsCategorySpecificData['ftrData'].length > 0) {\n            tabArr.push('FTR')\n        }\n        return tabArr\n\n    }\n\n\n    handleChange = (event, value) => {\n        this.setState({\n            selectedType: value,\n        });\n    };\n\n    handleCloseExpansionPanel = panelIndex => {\n        this.props.closePanelExpansion(panelIndex);\n    }\n\n    handleRowClick = index => {\n        this.props.setRowClickExpansionIndex(index);\n    }\n\n    getTableData = () => {\n        if (this.props.srDetailsCategorySpecificData && this.props.srDetailsCategorySpecificData['srData'] != this.state.tableData) {\n            this.setState({ tableData: this.props.srDetailsCategorySpecificData['srData'] });\n        }\n    }\n\n    openSRNotesDialog = (srNo) => {\n        this.props.srNotesDetailsDialogHandler(srNo);\n    }\n\n    reOpenSr = (srNumber) => {\n        this.props.reOpenResolvedSr(srNumber);\n    }\n\n    openSrTaskUpdateCaseSelectorDialog = (srNumber) => {\n        this.props.srTaskUpdateCaseSelectorHandler(srNumber)\n    }\n\n    render() {\n        const { classes, showSRHistory, expandedRowIndex, showSRTable, srDetailsTabApiResponse, srDetailsCategorySpecificData } = this.props;\n        this.getTableData();\n        const tableData = this.state.tableData;\n\n\n        return (\n            <React.Fragment>\n\n                {this.props.showSRHistory && tableData && tableData.length > 0 &&\n                    <Table className={classes.table}>\n                        <TableBody>\n                            {tableData.map((row, rowIndex) => {\n                                if (expandedRowIndex !== rowIndex) {\n                                    return (\n                                        <TableRow className=\"bg-hover clickable\" key={rowIndex} onClick={() => { this.handleRowClick(rowIndex) }}>\n                                            {labelList.map((cols, index) => {\n                                                return (\n                                                    <TableCell className=\"int-history-cell\" key={index}>\n                                                        <p className=\"fs-12 color-707070 mb-5\"> {cols.title} </p>\n                                                        <Tooltips tooltipText={row[cols.key]} position={this.tooltipPosition}>\n                                                            <Typography className=\"field-value\" variant=\"inherit\" noWrap>\n                                                                {row[cols.key]}\n                                                            </Typography>\n                                                        </Tooltips>\n                                                    </TableCell>\n                                                )\n                                            })}\n                                        </TableRow>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <TableRow key={rowIndex}>\n                                            <TableCell colSpan={labelList.length} className=\"p-0\">\n                                                <SrHistoryRowDetail data={row} closingExpansionPanel={() => { this.handleCloseExpansionPanel('-1') }}\n                                                 openSRNotesDialog={this.openSRNotesDialog} reOpenSr={this.reOpenSr} openSrTaskUpdateCaseSelectorDialog={this.openSrTaskUpdateCaseSelectorDialog} srDetailsProcessedData = {this.props.srDetailsProcessedData}/>\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                }\n                            })}\n                        </TableBody>\n                    </Table>}\n\n                {!this.props.showSRHistory && <SRDetails></SRDetails>}\n                {this.props.srDetailsTabLoadingStatus ? <div><AppLoader cardLoader={this.props.srDetailsTabLoadingStatus} /></div> : null}\n\n            </React.Fragment>\n\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    setRowClickExpansionIndex: data => dispatch(setRowClickExpansionIndex(data)),\n    closePanelExpansion: data => dispatch(closePanelExpansion(data)),\n    showSRDetail: data => dispatch(showSRDetail(data)),\n    srNotesDetailsDialogHandler: (srNo) => dispatch(srNotesDetailsDialogHandler(srNo)),\n    reOpenResolvedSr: (srNumber) => dispatch(reOpenResolvedSr(srNumber)),\n    srTaskUpdateCaseSelectorHandler: (srNumber) => dispatch(srTaskUpdateCaseSelectorHandler(srNumber))\n});\n\n\nconst mapStateToProps = state => {\n    return {\n        srDetailsTabApiResponse: state.SRDetailsTabApiInfo.srDetailsTabApiResponse,\n        srDetailsCategorySpecificData: state.SRDetailsTabApiInfo.srDetailsCategorySpecificData,\n        expandedRowIndex: state.SRDetailsTabApiInfo.expandedRowIndex,\n        showSRHistory: state.SRDetailsTabApiInfo.showSRHistory,\n        srDetailsProcessedData: state.SRDetailsTabApiInfo.srDetailsProcessedData,\n        srDetailsTabLoadingStatus: state.SRDetailsTabApiInfo.SRDetailsTabStatus === 'loading'\n    };\n}\n\nPreviousSRHistoryTab.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(withStyles(styles)(PreviousSRHistoryTab));"]},"metadata":{},"sourceType":"module"}