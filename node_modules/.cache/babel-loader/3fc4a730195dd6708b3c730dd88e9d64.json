{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport LocalConfig from './config.local';\nimport StagingConfig from './config.staging';\nimport ProdConfig from './config.prod';\n\nvar Config =\n/*#__PURE__*/\nfunction () {\n  function Config() {\n    _classCallCheck(this, Config);\n  }\n\n  _createClass(Config, null, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      switch (process.env.REACT_APP_NODE_ENV) {\n        case 'staging':\n          return StagingConfig;\n\n        case 'prod':\n          return ProdConfig;\n\n        case 'local':\n          return LocalConfig;\n\n        default:\n          return LocalConfig;\n      }\n    }\n  }]);\n\n  return Config;\n}();\n\nConfig.GLOBAL_CONFIG = Config.getConfig();\nexport default Config.GLOBAL_CONFIG;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/tasks/src/config/config.js"],"names":["LocalConfig","StagingConfig","ProdConfig","Config","process","env","REACT_APP_NODE_ENV","GLOBAL_CONFIG","getConfig"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,eAAvB;;IAEMC,M;;;;;;;;;gCAEiB;AAEf,cAAQC,OAAO,CAACC,GAAR,CAAYC,kBAApB;AACI,aAAK,SAAL;AACI,iBAAOL,aAAP;;AACJ,aAAK,MAAL;AACI,iBAAOC,UAAP;;AACJ,aAAK,OAAL;AACI,iBAAOF,WAAP;;AACJ;AACI,iBAAOA,WAAP;AARR;AAUH;;;;;;AAILG,MAAM,CAACI,aAAP,GAAuBJ,MAAM,CAACK,SAAP,EAAvB;AAGA,eAAeL,MAAM,CAACI,aAAtB","sourcesContent":["import LocalConfig from './config.local';\nimport StagingConfig from './config.staging';\nimport ProdConfig from './config.prod';\n\nclass Config {\n\n    static getConfig() {\n        \n        switch (process.env.REACT_APP_NODE_ENV) {\n            case 'staging':\n                return StagingConfig;\n            case 'prod':\n                return ProdConfig;\n            case 'local':\n                return LocalConfig;\n            default:\n                return LocalConfig;\n        }\n    }\n\n    \n}\nConfig.GLOBAL_CONFIG = Config.getConfig();\n\n\nexport default Config.GLOBAL_CONFIG;"]},"metadata":{},"sourceType":"module"}