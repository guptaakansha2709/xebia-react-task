{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk';\nimport loginReducer from '../reducers/login.reducer';\nimport appReducer from \"../reducers/app.reducer\";\nimport snackbarReducer from \"../reducers/snackbar.reducer\";\nimport appDialogReducer from \"../reducers/app-dialog.reducer\";\nimport GLOBAL_CONFIG from '../config/config';\nvar middleware = [thunk];\nvar rootReducer = combineReducers({\n  //this is for loginInfo Object - contain - (LoginApiResponse and LoginStatus)\n  loginInfo: loginReducer,\n  app: appReducer,\n  snackbar: snackbarReducer,\n  //this is for SR Details Tab Get Response - contain - (SRDetailsTabStatus and srDetailsTabApiResponse)\n  appDialog: appDialogReducer //handset details card\n\n});\n\nvar createDevStore = function createDevStore() {\n  return createStore(rootReducer, compose(applyMiddleware.apply(void 0, middleware) // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ));\n};\n\nvar createStagingStore = function createStagingStore() {\n  return createProdStore();\n};\n\nvar createProdStore = function createProdStore() {\n  return createStore(rootReducer, compose(applyMiddleware.apply(void 0, middleware) //  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ));\n};\n\nvar store = GLOBAL_CONFIG.env === 'prod' ? createProdStore() : GLOBAL_CONFIG.env === 'staging' ? createStagingStore() : createDevStore();\nexport default store;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/store/redux-store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","loginReducer","appReducer","snackbarReducer","appDialogReducer","GLOBAL_CONFIG","middleware","rootReducer","loginInfo","app","snackbar","appDialog","createDevStore","createStagingStore","createProdStore","store","env"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAIA,IAAMC,UAAU,GAAG,CAACN,KAAD,CAAnB;AACA,IAAMO,WAAW,GAAGV,eAAe,CAAC;AAEhC;AACAW,EAAAA,SAAS,EAAEP,YAHqB;AAIhCQ,EAAAA,GAAG,EAAEP,UAJ2B;AAKhCQ,EAAAA,QAAQ,EAAEP,eALsB;AAMhC;AAEAQ,EAAAA,SAAS,EAAEP,gBARqB,CAWhC;;AAXgC,CAAD,CAAnC;;AAeA,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,SAAOhB,WAAW,CACdW,WADc,EAEdR,OAAO,CACHD,eAAe,MAAf,SAAmBQ,UAAnB,CADG,CAEH;AAFG,GAFO,CAAlB;AAOH,CARD;;AAUA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7B,SAAOC,eAAe,EAAtB;AACH,CAFD;;AAIA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,SAAOlB,WAAW,CACdW,WADc,EAEdR,OAAO,CACHD,eAAe,MAAf,SAAmBQ,UAAnB,CADG,CAEH;AAFG,GAFO,CAAlB;AAOH,CARD;;AAUA,IAAMS,KAAK,GAAGV,aAAa,CAACW,GAAd,KAAsB,MAAtB,GAA+BF,eAAe,EAA9C,GAAmDT,aAAa,CAACW,GAAd,KAAsB,SAAtB,GAAkCH,kBAAkB,EAApD,GAAyDD,cAAc,EAAxI;AAIA,eAAeG,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk';\nimport loginReducer from '../reducers/login.reducer';\nimport appReducer from \"../reducers/app.reducer\";\nimport snackbarReducer from \"../reducers/snackbar.reducer\";\n\nimport appDialogReducer from \"../reducers/app-dialog.reducer\";\n\nimport GLOBAL_CONFIG from '../config/config';\n\n\n\nconst middleware = [thunk];\nconst rootReducer = combineReducers({\n\n    //this is for loginInfo Object - contain - (LoginApiResponse and LoginStatus)\n    loginInfo: loginReducer,\n    app: appReducer,\n    snackbar: snackbarReducer,\n    //this is for SR Details Tab Get Response - contain - (SRDetailsTabStatus and srDetailsTabApiResponse)\n\n    appDialog: appDialogReducer,\n\n\n    //handset details card\n\n})\n\nconst createDevStore = () => {\n    return createStore(\n        rootReducer,\n        compose(\n            applyMiddleware(...middleware),\n            // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n    );\n}\n\nconst createStagingStore = () => {\n    return createProdStore();\n}\n\nconst createProdStore = () => {\n    return createStore(\n        rootReducer,\n        compose(\n            applyMiddleware(...middleware)\n            //  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n    );\n}\n\nconst store = GLOBAL_CONFIG.env === 'prod' ? createProdStore() : GLOBAL_CONFIG.env === 'staging' ? createStagingStore() : createDevStore();\n\n\n\nexport default store; "]},"metadata":{},"sourceType":"module"}