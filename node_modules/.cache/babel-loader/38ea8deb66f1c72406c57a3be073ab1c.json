{"ast":null,"code":"var _jsxFileName = \"/Users/A1HP71DP/Documents/personal/tasks/src/components/App.js\";\nimport React, { useEffect } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { closeSnackbarRequest as _closeSnackbarRequest } from '../actions/snackbar.action';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nvar theme = createMuiTheme({\n  overrides: {\n    palette: {\n      primary: \"#0082E4\"\n    },\n    MuiFormLabel: {\n      root: {\n        // color: \"#03a9f4\",\n        \"&$focused\": {\n          color: \"#03a9f4\"\n        }\n      }\n    },\n    MuiInput: {\n      underline: {\n        '&:after': {\n          borderBottom: \"2px solid #03a9f4\"\n        }\n      }\n    },\n    MuiCheckbox: {\n      colorPrimary: {\n        color: \"#03a9f4\"\n      }\n    },\n    MuiRadio: {\n      colorPrimary: {\n        color: \"#03a9f4\",\n        '&$checked': {\n          color: \"#03a9f4\"\n        }\n      } // '&$checked': {\n      //   color: \"#03a9f4\"\n      // }\n\n    },\n    MuiTabs: {\n      scrollable: {\n        overflowX: 'hidden'\n      }\n    },\n    MuiTab: {\n      labelIcon: {\n        minHeight: 50,\n        paddingTop: 0\n      }\n    },\n    MuiExpansionPanelSummary: {\n      content: {\n        margin: '0px !important'\n      },\n      expanded: {\n        margin: '0px !important'\n      }\n    },\n    MuiButton: {\n      outlinedPrimary: {\n        color: \"#03a9f4\",\n        border: '1px solid #03a9f4',\n        '&:hover': {\n          border: '1px solid #03a9f4'\n        }\n      },\n      containedPrimary: {\n        backgroundColor: \"#03a9f4\",\n        '&:hover': {\n          backgroundColor: \"#03a9f4\"\n        }\n      }\n    }\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nvar App = function App(props) {\n  useEffect(function () {}, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(ProductListPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Snackbar, {\n    open: props.snackbar.open,\n    message: props.snackbar.message,\n    autoHideDuration: props.snackbar.autoHideDuration,\n    onClose: props.closeSnackbarRequest,\n    onExited: props.closeSnackbarRequest,\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: props.closeSnackbarRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.app.displayLoader || state.userAuthorized === 'LOADING',\n    snackbar: state.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    closeSnackbarRequest: function closeSnackbarRequest() {\n      return dispatch(_closeSnackbarRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/tasks/src/components/App.js"],"names":["React","useEffect","CssBaseline","connect","Snackbar","closeSnackbarRequest","IconButton","CloseIcon","MuiThemeProvider","createMuiTheme","theme","overrides","palette","primary","MuiFormLabel","root","color","MuiInput","underline","borderBottom","MuiCheckbox","colorPrimary","MuiRadio","MuiTabs","scrollable","overflowX","MuiTab","labelIcon","minHeight","paddingTop","MuiExpansionPanelSummary","content","margin","expanded","MuiButton","outlinedPrimary","border","containedPrimary","backgroundColor","typography","useNextVariants","App","props","snackbar","open","message","autoHideDuration","mapStateToProps","state","loading","app","displayLoader","userAuthorized","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { connect } from 'react-redux';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { closeSnackbarRequest } from '../actions/snackbar.action';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  overrides: {\n    palette: {\n      primary: \"#0082E4\"\n    },\n    MuiFormLabel: {\n      root: {\n        // color: \"#03a9f4\",\n        \"&$focused\": {\n          color: \"#03a9f4\"\n        }\n      }\n    },\n    MuiInput: {\n      underline: {\n        '&:after': {\n          borderBottom: \"2px solid #03a9f4\"\n        },\n      }\n    },\n    MuiCheckbox: {\n      colorPrimary: {\n        color: \"#03a9f4\"\n      }\n    },\n    MuiRadio: {\n      colorPrimary: {\n        color: \"#03a9f4\",\n        '&$checked': {\n          color: \"#03a9f4\"\n        }\n      },\n      // '&$checked': {\n      //   color: \"#03a9f4\"\n      // }\n    },\n    MuiTabs: {\n      scrollable: {\n        overflowX: 'hidden'\n      }\n    },\n    MuiTab: {\n      labelIcon: {\n        minHeight: 50,\n        paddingTop: 0\n      }\n    },\n    MuiExpansionPanelSummary: {\n      content: {\n        margin: '0px !important'\n      },\n      expanded: {\n        margin: '0px !important'\n      }\n    },\n    MuiButton: {\n      outlinedPrimary: {\n        color: \"#03a9f4\",\n        border: '1px solid #03a9f4',\n        '&:hover': {\n          border: '1px solid #03a9f4'\n        }\n      },\n      containedPrimary: {\n        backgroundColor: \"#03a9f4\",\n        '&:hover': {\n          backgroundColor: \"#03a9f4\",\n        }\n      }\n    }\n  },\n  typography: { useNextVariants: true },\n});\n\nconst App = (props) => {\n  useEffect(() => {\n\n  }, []);\n  return (\n    <React.Fragment>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <ProductListPage />\n        <Snackbar\n          open={props.snackbar.open}\n          message={props.snackbar.message}\n          autoHideDuration={props.snackbar.autoHideDuration}\n          onClose={props.closeSnackbarRequest}\n          onExited={props.closeSnackbarRequest}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={props.closeSnackbarRequest}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n\n      </MuiThemeProvider>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.app.displayLoader || state.userAuthorized === 'LOADING',\n    snackbar: state.snackbar\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  closeSnackbarRequest: () => dispatch(closeSnackbarRequest())\n});\n\nexport default\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App);\n"]},"metadata":{},"sourceType":"module"}