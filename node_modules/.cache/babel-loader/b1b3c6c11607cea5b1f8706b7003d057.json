{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\n\nvar SmsDialogService =\n/*#__PURE__*/\nfunction () {\n  function SmsDialogService() {\n    _classCallCheck(this, SmsDialogService);\n  }\n\n  _createClass(SmsDialogService, null, [{\n    key: \"fetchLocationApi\",\n    value: function fetchLocationApi(searchedString) {\n      var config = {\n        headers: {}\n      };\n      var authDetails = CookieManagerService.getAuthDetails();\n      var agentId = authDetails && authDetails['agentId'] ? authDetails['agentId'] : '';\n      var url = Config.contextPath + \"user/rest/v1.0/stores/aor?searchString=\" + searchedString + \"&agentId=\" + agentId + \"&transactionId=\";\n      return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"submitSmsDialogApi\",\n    value: function submitSmsDialogApi(smsDialogObj, scenarioName) {\n      var data = smsDialogObj;\n      var config = {\n        headers: {}\n      };\n      scenarioName = scenarioName ? scenarioName : null;\n      var transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID) || \"\";\n      var url = Config.contextPath + \"user/rest/v1.0/stores/aor/message?scenarioName=\" + scenarioName + \"&transactionId=\" + transactionId;\n      return CustomHttpService.post(url, data, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"fetchSelfCareMessagesApi\",\n    value: function fetchSelfCareMessagesApi(scenarioName) {\n      var config = {\n        headers: {}\n      };\n      scenarioName = scenarioName ? scenarioName : null;\n      var authDetails = CookieManagerService.getAuthDetails();\n      var agentId = authDetails && authDetails['agentId'] ? authDetails['agentId'] : null;\n      var transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID) || \"\";\n      var url = Config.contextPath + \"user/rest/v1.0/selfCare/messages?scenarioName=\" + scenarioName + \"&agentId=\" + agentId + \"&transactionId=\" + transactionId;\n      return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"submitSmsSelfCareMsgsApi\",\n    value: function submitSmsSelfCareMsgsApi(smsSelfCareTemplateName, scenarioName) {\n      var data = smsSelfCareTemplateName;\n      var config = {\n        headers: {}\n      };\n      scenarioName = scenarioName ? scenarioName : null;\n      var transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID) || \"\";\n      var url = Config.contextPath + \"user/rest/v1.0/selfCare/message?scenarioName=\" + scenarioName + \"&transactionId=\" + transactionId;\n      return CustomHttpService.post(url, data, config, EncodeDecodeType.DEFAULT);\n    } // static getSelectedLocations(selectedLocationsMap, searchLocationApiresponse) {\n    //     let selectedLocations = [];\n    //     if (selectedLocationsMap && searchLocationApiresponse && searchLocationApiresponse.result) {\n    //         selectedLocations = Object.keys(selectedLocationsMap).forEach((locationIndex) => {\n    //             if (selectedLocationsMap[locationIndex] === true) {\n    //                 if (searchLocationApiresponse.result[locationIndex]) {\n    //                     selectedLocations.push(searchLocationApiresponse.result[locationIndex].address);\n    //                 }\n    //             }\n    //         })\n    //     }\n    //     return selectedLocations;\n    // }\n\n  }]);\n\n  return SmsDialogService;\n}();\n\nexport default SmsDialogService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/sms-dialog.service.js"],"names":["CustomHttpService","Config","CookieManagerService","AppConstant","EncodeDecodeType","SmsDialogService","searchedString","config","headers","authDetails","getAuthDetails","agentId","url","contextPath","get","DEFAULT","smsDialogObj","scenarioName","data","transactionId","getItem","CORRELATION_ID","post","smsSelfCareTemplateName"],"mappings":"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","sourcesContent":["import CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\n\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\n\n\nclass SmsDialogService {\n    static fetchLocationApi(searchedString) {\n        const config = {\n            headers: {\n            }\n        };\n        const authDetails = CookieManagerService.getAuthDetails();\n        const agentId = authDetails && authDetails['agentId'] ? authDetails['agentId'] : '';\n        var url = Config.contextPath + \"user/rest/v1.0/stores/aor?searchString=\" + searchedString + \"&agentId=\" + agentId + \"&transactionId=\";\n\n        return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n    static submitSmsDialogApi(smsDialogObj, scenarioName) {\n        const data = smsDialogObj;\n        const config = {\n            headers: {\n            }\n        };\n        scenarioName = scenarioName ? scenarioName : null;\n        const transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID) || \"\";\n        var url = Config.contextPath + \"user/rest/v1.0/stores/aor/message?scenarioName=\" + scenarioName + \"&transactionId=\" + transactionId;\n        return CustomHttpService.post(url, data, config, EncodeDecodeType.DEFAULT);\n    }\n    static fetchSelfCareMessagesApi(scenarioName) {\n        const config = {\n            headers: {\n            }\n        };\n        scenarioName = scenarioName ? scenarioName : null;\n        const authDetails = CookieManagerService.getAuthDetails();\n        const agentId = authDetails && authDetails['agentId'] ? authDetails['agentId'] : null;\n        const transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID) || \"\";\n        var url = Config.contextPath + \"user/rest/v1.0/selfCare/messages?scenarioName=\" + scenarioName + \"&agentId=\" + agentId + \"&transactionId=\" + transactionId;\n        return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n\n    static submitSmsSelfCareMsgsApi(smsSelfCareTemplateName, scenarioName) {\n        const data = smsSelfCareTemplateName;\n        const config = {\n            headers: {\n            }\n        };\n        scenarioName = scenarioName ? scenarioName : null;\n        const transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID) || \"\";\n        var url = Config.contextPath + \"user/rest/v1.0/selfCare/message?scenarioName=\" + scenarioName + \"&transactionId=\" + transactionId;\n        return CustomHttpService.post(url, data, config, EncodeDecodeType.DEFAULT);\n    }\n\n    // static getSelectedLocations(selectedLocationsMap, searchLocationApiresponse) {\n    //     let selectedLocations = [];\n    //     if (selectedLocationsMap && searchLocationApiresponse && searchLocationApiresponse.result) {\n    //         selectedLocations = Object.keys(selectedLocationsMap).forEach((locationIndex) => {\n    //             if (selectedLocationsMap[locationIndex] === true) {\n    //                 if (searchLocationApiresponse.result[locationIndex]) {\n    //                     selectedLocations.push(searchLocationApiresponse.result[locationIndex].address);\n    //                 }\n    //             }\n    //         })\n    //     }\n    //     return selectedLocations;\n    // }\n\n}\n\nexport default SmsDialogService;\n"]},"metadata":{},"sourceType":"module"}