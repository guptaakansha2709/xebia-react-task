{"ast":null,"code":"import _toConsumableArray from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { SRDetailActionType } from \"../actiontype/sr-details-tab.actiontype.js\";\nimport { TaskUpdateActionType } from \"../actiontype/task-update.actiontype\";\nimport SRDetailsTabService from '../services/sr-details-tab.service';\nimport SrTaskUpdateService from '../services/task-update.service';\nimport { showLoader, hideLoader } from '../actions/app.action';\nimport { switchHomeTab, hideSRDetailsTab, dispayCreateSRNoteTab, hideCreateSRNoteTab, switchSRNotesTab } from \"./tabs.action.js\";\nimport { TabConstant } from \"../constants/tabs.constant.js\";\nimport { setECRMStatus } from \"../actions/b2b-system-status.action\";\nimport { openSRNotesDetailsDialog } from \"./app-dialog.action.js\";\nimport UtilService from \"../services/util.service.js\";\nimport { openSnackbarRequest } from \"./snackbar.action.js\";\nimport CookieManagerService from \"../services/cookie.service.js\";\nimport { AppConstant } from \"../constants/app.constant.js\";\nimport { updateSrTaskUpdateCases, updateSrTaskUpdateSrNumber, updateSelectedSrTaskDetails } from './task-update.action';\nimport { AppDialogActionType } from \"../actiontype/app-dialog.actiontype.js\";\nexport var fetchSRDetailsTabData = function fetchSRDetailsTabData(srDetailsObj) {\n  return function (dispatch, getState) {\n    var state = getState(); // dispatch(resetSRDetailsTabData());\n\n    dispatch(fetchSRDetailsApiLoading());\n\n    if (state && state.SRDetailsTabApiInfo && state.SRDetailsTabApiInfo.srDetailsTabApiResponse && state.SRDetailsTabApiInfo.srDetailsTabApiResponse[0]) {\n      dispatch(SRDetailsTabApiSuccess(state.SRDetailsTabApiInfo.srDetailsTabApiResponse));\n      return;\n    }\n\n    SRDetailsTabService.fetchSRDetailsTabApi().then(function (response) {\n      if (response && response.data && response.data.result) {\n        var srTypeRequestData = response.data.result.serviceRequestDetails ? response.data.result.serviceRequestDetails : [];\n        var ftrTypeRequestData = [];\n        var data = {\n          srData: _toConsumableArray(srTypeRequestData),\n          ftrData: [].concat(ftrTypeRequestData)\n        };\n        var srDetails = response.data.result.serviceRequestDetails;\n        var typeSubtypeOpenSrExists = {}; // Checking whether there is already an SR exists with type and subtype\n\n        if (srDetails) {\n          srDetails.map(function (item) {\n            var key = \"\".concat(item['problem_type'], \"-\").concat(item['problem_subType'], \"-\").concat(item['problem_subSubType']);\n            var openSrExists = false;\n\n            if (item['problem_activityStatus'] && item['problem_activityStatus'].toLowerCase() === 'open') {\n              openSrExists = true;\n              typeSubtypeOpenSrExists[key] = openSrExists;\n            }\n          });\n        }\n\n        dispatch(SRDetailsTabApiSuccess(response.data.result));\n        dispatch(UpdateSRDetailsTabApiProcessedData(typeSubtypeOpenSrExists));\n        dispatch(setCategorySpecificSrFtrData(data));\n\n        if (checkForAnyOpenRequest(srTypeRequestData)) {\n          dispatch(switchHomeTab(TabConstant.HOME_SR_DETAILS_TAB));\n        } else if (data['srData'] && data['srData'].length === 0) {}\n      }\n    }, function (error) {\n      dispatch(hideLoader());\n      dispatch(SRDetailsTabApiFailure(error));\n    });\n  };\n};\nexport var fetchSRNoteDetailsData = function fetchSRNoteDetailsData(noteId) {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (state && state.SRDetailsTabApiInfo && state.SRDetailsTabApiInfo.srNotesContents && state.SRDetailsTabApiInfo.srNotesContents[noteId]) {\n      dispatch(SRNoteDetailsApiSuccess(noteId, state.SRDetailsTabApiInfo.srNotesContents[noteId]));\n      return;\n    }\n\n    SRDetailsTabService.fetchSRNoteDetailsApi(noteId).then(function (response) {\n      if (response && response.data && response.data.result) {\n        dispatch(SRNoteDetailsApiSuccess(noteId, response.data.result));\n      }\n    }, function (error) {\n      dispatch(hideLoader());\n      dispatch(SRDetailsTabApiFailure(error));\n    });\n  };\n};\nexport var resetSRDetailsTabData = function resetSRDetailsTabData() {\n  return {\n    type: SRDetailActionType.SR_DETAILS_RESET_REQUEST\n  };\n};\n\nfunction checkForAnyOpenRequest(data) {\n  if (data && data.length > 0) {\n    // for (let i = 0; i < data.length; i++) {\n    //     if (data[i] && data[i][\"status\"] && data[i][\"status\"].toLowerCase() === \"open\") {\n    //         return true\n    //     }\n    // }\n    if (data[0] && data[0][\"status\"] && data[0][\"status\"].toLowerCase() === \"open\") {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction fetchSRDetailsApiLoading() {\n  return {\n    type: SRDetailActionType.SR_DETAILS_TAB_REQUEST\n  };\n}\n\nfunction SRDetailsTabApiSuccess(response) {\n  return {\n    type: SRDetailActionType.SR_DETAILS_TAB_SUCCESS,\n    payload: response\n  };\n}\n\nfunction UpdateSRDetailsTabApiProcessedData(response) {\n  return {\n    type: SRDetailActionType.UPDATE_SR_DETAILS_PROCESSED_DATA,\n    payload: response\n  };\n}\n\nfunction SRNoteDetailsApiSuccess(noteId, noteDetails) {\n  return {\n    type: SRDetailActionType.UPDATE_SR_NOTES_CONTENTS,\n    payload: {\n      noteId: noteId,\n      noteDetails: noteDetails\n    }\n  };\n}\n\nfunction setCategorySpecificSrFtrData(data) {\n  return {\n    type: SRDetailActionType.SET_CATEGORY_SPECIFIC_SR_FTR_DATA,\n    payload: data\n  };\n}\n\nfunction SRDetailsTabApiFailure(error) {\n  return {\n    type: SRDetailActionType.SR_DETAILS_TAB_FAILURE,\n    payload: error\n  };\n}\n\nexport var setRowClickExpansionIndex = function setRowClickExpansionIndex(response) {\n  return function (dispatch) {\n    dispatch(setRowIndex(response));\n  };\n};\n\nfunction setRowIndex(payload) {\n  return {\n    type: SRDetailActionType.SET_EXPNSION_PANEL_ROW_INDEX,\n    payload: payload\n  };\n} //closing the expanded panel expansion\n\n\nexport var closePanelExpansion = function closePanelExpansion(response) {\n  return function (dispatch) {\n    dispatch(setDefaultRowIndex(response));\n  };\n};\n\nfunction setDefaultRowIndex(payload) {\n  return {\n    type: SRDetailActionType.SET_DEFAULT_EXPNSION_ROW_INDEX,\n    payload: payload\n  };\n}\n\nexport var showSRDetail = function showSRDetail(response) {\n  return function (dispatch) {\n    dispatch(showSRAdditionalDetails(response));\n  };\n};\n\nfunction showSRAdditionalDetails(payload) {\n  return {\n    type: SRDetailActionType.SHOW_SR_ADDITIONAL_DETAILS,\n    payload: payload\n  };\n}\n\nexport var showSRHistoryTab = function showSRHistoryTab() {\n  return function (dispatch) {\n    dispatch(showSRHistoryDetailsTab());\n  };\n};\n\nfunction showSRHistoryDetailsTab() {\n  return {\n    type: SRDetailActionType.SHOW_SR_HISTORY_TAB\n  };\n}\n\nexport var updateSRNotesDetails = function updateSRNotesDetails(payload) {\n  return {\n    type: SRDetailActionType.UPDATE_SR_NOTES_DETAILS,\n    payload: payload\n  };\n};\nexport var SRNotesDetailsApiResponse = function SRNotesDetailsApiResponse(payload) {\n  return {\n    type: SRDetailActionType.UPDATE_SR_NOTES_API_RESPONSE,\n    payload: payload\n  };\n};\nexport var updateCreateNoteFormValues = function updateCreateNoteFormValues(payload) {\n  return {\n    type: SRDetailActionType.UPDATE_CREATE_NOTE_FORM_VALUES,\n    payload: payload\n  };\n};\nexport var updateCurrentViewSRNoteID = function updateCurrentViewSRNoteID(value) {\n  return {\n    type: SRDetailActionType.UPDATE_CURRENT_VIEW_SR_NOTES_ID,\n    payload: value\n  };\n};\nexport var resetCreateNoteForm = function resetCreateNoteForm() {\n  return {\n    type: SRDetailActionType.RESET_CREATE_NOTE_FORM_VALUES\n  };\n};\nexport var srNotesDetailsDialogHandler = function srNotesDetailsDialogHandler(srDetails) {\n  return function (dispatch, getState) {\n    var srNo = srDetails && srDetails['problem_problemId'] ? srDetails['problem_problemId'] : '';\n    var status = srDetails && srDetails['problem_activityStatus'] ? srDetails['problem_activityStatus'] : '';\n    dispatch(switchSRNotesTab(TabConstant.SR_NOTES_DETAILS));\n\n    if (srNo) {\n      if (status && ['open', 'resolved', 're-open'].indexOf(status.toLowerCase()) !== -1) {\n        dispatch(dispayCreateSRNoteTab());\n      } else {\n        dispatch(hideCreateSRNoteTab());\n      }\n\n      dispatch(updateCurrentViewSRNoteID(srNo));\n      dispatch(fetchSRNotesDetails(srNo));\n      dispatch(openSRNotesDetailsDialog());\n    }\n  };\n};\nexport var fetchSRNotesDetails = function fetchSRNotesDetails(srNo) {\n  return function (dispatch, getState) {\n    dispatch(updateSRNotesDetails([]));\n    dispatch(showLoader());\n    SRDetailsTabService.onSRNotesDetailsRequest(srNo).then(function (response) {\n      dispatch(hideLoader());\n\n      if (response && response.data && response.data.result) {\n        var result = response.data.result;\n\n        if (result.serviceRequestDetails && result.serviceRequestDetails.length) {\n          var serviceRequestDetails = result.serviceRequestDetails[0];\n\n          if (serviceRequestDetails && serviceRequestDetails.serviceproblem && serviceRequestDetails.serviceproblem.problem) {\n            var notes = serviceRequestDetails.serviceproblem.problem.notes;\n            dispatch(updateSRNotesDetails(sortByCreateTime(notes) || []));\n          }\n        }\n\n        dispatch(SRNotesDetailsApiResponse(response.data.result));\n      } else {\n        dispatch(SRNotesDetailsApiResponse(response));\n        dispatch(updateSRNotesDetails([]));\n      }\n    }, function (error) {\n      dispatch(hideLoader());\n      dispatch(SRNotesDetailsApiResponse(error));\n      dispatch(updateSRNotesDetails([]));\n    });\n  };\n};\n\nfunction sortByCreateTime(srNotesDetails) {\n  if (srNotesDetails) {\n    return srNotesDetails.sort(function (item1, item2) {\n      if (item1['createdDate'] && item2['createdDate']) {\n        var date1 = new Date(item1['createdDate']);\n        var date2 = new Date(item2['createdDate']);\n        return date2.getTime() - date1.getTime();\n      }\n    });\n  }\n\n  return [];\n}\n\nexport var createNewNote = function createNewNote() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var createNoteForm = state.SRDetailsTabApiInfo.createNoteForm;\n    var currentViewSrNoteId = state.SRDetailsTabApiInfo.currentViewSrNoteId;\n    dispatch(showLoader());\n    SRDetailsTabService.onCreateNewSRNoteRequest(createNoteForm, currentViewSrNoteId).then(function (response) {\n      dispatch(hideLoader());\n\n      if (response && response.data && response.data.result && response.data.result.message === \"Request processed successfully.\") {\n        dispatch(openSnackbarRequest(null, \"Note created successfully.\"));\n        dispatch(resetCreateNoteForm());\n        dispatch(switchSRNotesTab(TabConstant.SR_NOTES_DETAILS));\n        dispatch(fetchSRNotesDetails(currentViewSrNoteId));\n      } else {\n        dispatch(openSnackbarRequest(null));\n      }\n    }, function (error) {\n      dispatch(hideLoader());\n\n      if (error && error.response && error.response.data && error.response.data.result && error.response.data.result.faultDescription) {\n        dispatch(openSnackbarRequest(null, error.response.data.result.faultDescription));\n      } else {\n        dispatch(openSnackbarRequest(error, null));\n      }\n    });\n  };\n};\nexport var reOpenResolvedSr = function reOpenResolvedSr(srNumber) {\n  return function (dispatch, getState) {\n    var state = getState();\n    dispatch(showLoader());\n    SRDetailsTabService.reOpenResolvedSr(srNumber).then(function (response) {\n      dispatch(hideLoader());\n\n      if (response && response.data && response.data.result) {\n        dispatch(openSnackbarRequest(null, \"SR Reopened successfully\"));\n      } else {\n        dispatch(openSnackbarRequest(null));\n      }\n    }, function (error) {\n      dispatch(hideLoader());\n\n      if (error && error.response && error.response.data && error.response.data.result) {\n        dispatch(openSnackbarRequest(null, error.response.data.result));\n      } else {\n        dispatch(openSnackbarRequest(error, null));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/actions/sr-details-tab.action.js"],"names":["SRDetailActionType","TaskUpdateActionType","SRDetailsTabService","SrTaskUpdateService","showLoader","hideLoader","switchHomeTab","hideSRDetailsTab","dispayCreateSRNoteTab","hideCreateSRNoteTab","switchSRNotesTab","TabConstant","setECRMStatus","openSRNotesDetailsDialog","UtilService","openSnackbarRequest","CookieManagerService","AppConstant","updateSrTaskUpdateCases","updateSrTaskUpdateSrNumber","updateSelectedSrTaskDetails","AppDialogActionType","fetchSRDetailsTabData","srDetailsObj","dispatch","getState","state","fetchSRDetailsApiLoading","SRDetailsTabApiInfo","srDetailsTabApiResponse","SRDetailsTabApiSuccess","fetchSRDetailsTabApi","then","response","data","result","srTypeRequestData","serviceRequestDetails","ftrTypeRequestData","srData","ftrData","srDetails","typeSubtypeOpenSrExists","map","item","key","openSrExists","toLowerCase","UpdateSRDetailsTabApiProcessedData","setCategorySpecificSrFtrData","checkForAnyOpenRequest","HOME_SR_DETAILS_TAB","length","error","SRDetailsTabApiFailure","fetchSRNoteDetailsData","noteId","srNotesContents","SRNoteDetailsApiSuccess","fetchSRNoteDetailsApi","resetSRDetailsTabData","type","SR_DETAILS_RESET_REQUEST","SR_DETAILS_TAB_REQUEST","SR_DETAILS_TAB_SUCCESS","payload","UPDATE_SR_DETAILS_PROCESSED_DATA","noteDetails","UPDATE_SR_NOTES_CONTENTS","SET_CATEGORY_SPECIFIC_SR_FTR_DATA","SR_DETAILS_TAB_FAILURE","setRowClickExpansionIndex","setRowIndex","SET_EXPNSION_PANEL_ROW_INDEX","closePanelExpansion","setDefaultRowIndex","SET_DEFAULT_EXPNSION_ROW_INDEX","showSRDetail","showSRAdditionalDetails","SHOW_SR_ADDITIONAL_DETAILS","showSRHistoryTab","showSRHistoryDetailsTab","SHOW_SR_HISTORY_TAB","updateSRNotesDetails","UPDATE_SR_NOTES_DETAILS","SRNotesDetailsApiResponse","UPDATE_SR_NOTES_API_RESPONSE","updateCreateNoteFormValues","UPDATE_CREATE_NOTE_FORM_VALUES","updateCurrentViewSRNoteID","value","UPDATE_CURRENT_VIEW_SR_NOTES_ID","resetCreateNoteForm","RESET_CREATE_NOTE_FORM_VALUES","srNotesDetailsDialogHandler","srNo","status","SR_NOTES_DETAILS","indexOf","fetchSRNotesDetails","onSRNotesDetailsRequest","serviceproblem","problem","notes","sortByCreateTime","srNotesDetails","sort","item1","item2","date1","Date","date2","getTime","createNewNote","createNoteForm","currentViewSrNoteId","onCreateNewSRNoteRequest","message","faultDescription","reOpenResolvedSr","srNumber"],"mappings":";AAAA,SAASA,kBAAT,QAAmC,4CAAnC;AACA,SAASC,oBAAT,QAAqC,sCAArC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,uBAAvC;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,qBAA1C,EAAiEC,mBAAjE,EAAsFC,gBAAtF,QAA8G,kBAA9G;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,wBAAT,QAAyC,wBAAzC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAAQC,uBAAR,EAAiCC,0BAAjC,EAA6DC,2BAA7D,QAA+F,sBAA/F;AACA,SAASC,mBAAT,QAAoC,wCAApC;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,YAAY;AAAA,SAAI,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACzE,QAAMC,KAAK,GAAGD,QAAQ,EAAtB,CADyE,CAEzE;;AACAD,IAAAA,QAAQ,CAACG,wBAAwB,EAAzB,CAAR;;AACA,QAAID,KAAK,IAAIA,KAAK,CAACE,mBAAf,IAAsCF,KAAK,CAACE,mBAAN,CAA0BC,uBAAhE,IAA2FH,KAAK,CAACE,mBAAN,CAA0BC,uBAA1B,CAAkD,CAAlD,CAA/F,EAAqJ;AACjJL,MAAAA,QAAQ,CAACM,sBAAsB,CAACJ,KAAK,CAACE,mBAAN,CAA0BC,uBAA3B,CAAvB,CAAR;AACA;AACH;;AACD3B,IAAAA,mBAAmB,CAAC6B,oBAApB,GAA2CC,IAA3C,CACI,UAAAC,QAAQ,EAAI;AACR,UAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAArB,IAA6BD,QAAQ,CAACC,IAAT,CAAcC,MAA/C,EAAuD;AAEnD,YAAIC,iBAAiB,GAAGH,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBE,qBAArB,GAA6CJ,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBE,qBAAlE,GAA0F,EAAlH;AACA,YAAIC,kBAAkB,GAAG,EAAzB;AACA,YAAIJ,IAAI,GAAG;AACPK,UAAAA,MAAM,qBAAMH,iBAAN,CADC;AAEPI,UAAAA,OAAO,YAAMF,kBAAN;AAFA,SAAX;AAKA,YAAIG,SAAS,GAAGR,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBE,qBAArC;AACA,YAAIK,uBAAuB,GAAG,EAA9B,CAVmD,CAYnD;;AACA,YAAID,SAAJ,EAAe;AACXA,UAAAA,SAAS,CAACE,GAAV,CAAc,UAACC,IAAD,EAAU;AACpB,gBAAIC,GAAG,aAAMD,IAAI,CAAC,cAAD,CAAV,cAA8BA,IAAI,CAAC,iBAAD,CAAlC,cAAyDA,IAAI,CAAC,oBAAD,CAA7D,CAAP;AACA,gBAAIE,YAAY,GAAG,KAAnB;;AACA,gBAAIF,IAAI,CAAC,wBAAD,CAAJ,IAAkCA,IAAI,CAAC,wBAAD,CAAJ,CAA+BG,WAA/B,OAAiD,MAAvF,EAA+F;AAC3FD,cAAAA,YAAY,GAAG,IAAf;AACAJ,cAAAA,uBAAuB,CAACG,GAAD,CAAvB,GAA+BC,YAA/B;AACH;AACJ,WAPD;AAQH;;AAEDtB,QAAAA,QAAQ,CAACM,sBAAsB,CAACG,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAvB,CAAR;AACAX,QAAAA,QAAQ,CAACwB,kCAAkC,CAACN,uBAAD,CAAnC,CAAR;AACAlB,QAAAA,QAAQ,CAACyB,4BAA4B,CAACf,IAAD,CAA7B,CAAR;;AACA,YAAIgB,sBAAsB,CAACd,iBAAD,CAA1B,EAA+C;AAC3CZ,UAAAA,QAAQ,CAAClB,aAAa,CAACK,WAAW,CAACwC,mBAAb,CAAd,CAAR;AACH,SAFD,MAGK,IAAIjB,IAAI,CAAC,QAAD,CAAJ,IAAkBA,IAAI,CAAC,QAAD,CAAJ,CAAekB,MAAf,KAA0B,CAAhD,EAAmD,CAEvD;AACJ;AAEJ,KArCL,EAsCI,UAAAC,KAAK,EAAI;AACL7B,MAAAA,QAAQ,CAACnB,UAAU,EAAX,CAAR;AACAmB,MAAAA,QAAQ,CAAC8B,sBAAsB,CAACD,KAAD,CAAvB,CAAR;AACH,KAzCL;AA2CH,GAnDgD;AAAA,CAA1C;AAqDP,OAAO,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,MAAM;AAAA,SAAI,UAAChC,QAAD,EAAWC,QAAX,EAAwB;AACpE,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;;AAEA,QAAIC,KAAK,IAAIA,KAAK,CAACE,mBAAf,IAAsCF,KAAK,CAACE,mBAAN,CAA0B6B,eAAhE,IAAmF/B,KAAK,CAACE,mBAAN,CAA0B6B,eAA1B,CAA0CD,MAA1C,CAAvF,EAA0I;AACtIhC,MAAAA,QAAQ,CAACkC,uBAAuB,CAACF,MAAD,EAAS9B,KAAK,CAACE,mBAAN,CAA0B6B,eAA1B,CAA0CD,MAA1C,CAAT,CAAxB,CAAR;AACA;AACH;;AACDtD,IAAAA,mBAAmB,CAACyD,qBAApB,CAA0CH,MAA1C,EAAkDxB,IAAlD,CACI,UAAAC,QAAQ,EAAI;AACR,UAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAArB,IAA6BD,QAAQ,CAACC,IAAT,CAAcC,MAA/C,EAAuD;AACnDX,QAAAA,QAAQ,CAACkC,uBAAuB,CAACF,MAAD,EAASvB,QAAQ,CAACC,IAAT,CAAcC,MAAvB,CAAxB,CAAR;AACH;AACJ,KALL,EAMI,UAAAkB,KAAK,EAAI;AACL7B,MAAAA,QAAQ,CAACnB,UAAU,EAAX,CAAR;AACAmB,MAAAA,QAAQ,CAAC8B,sBAAsB,CAACD,KAAD,CAAvB,CAAR;AACH,KATL;AAWH,GAlB2C;AAAA,CAArC;AAoBP,OAAO,IAAMO,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAE7D,kBAAkB,CAAC8D;AADtB,GAAP;AAGH,CAJM;;AAMP,SAASZ,sBAAT,CAAgChB,IAAhC,EAAsC;AAClC,MAAIA,IAAI,IAAIA,IAAI,CAACkB,MAAL,GAAc,CAA1B,EAA6B;AACzB;AACA;AACA;AACA;AACA;AACA,QAAIlB,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAX,IAAgCA,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,EAAkBa,WAAlB,OAAoC,MAAxE,EAAgF;AAC5E,aAAO,IAAP;AACH;AACJ;;AACD,SAAO,KAAP;AACH;;AAED,SAASpB,wBAAT,GAAoC;AAChC,SAAO;AACHkC,IAAAA,IAAI,EAAE7D,kBAAkB,CAAC+D;AADtB,GAAP;AAGH;;AAED,SAASjC,sBAAT,CAAgCG,QAAhC,EAA0C;AACtC,SAAO;AACH4B,IAAAA,IAAI,EAAE7D,kBAAkB,CAACgE,sBADtB;AAEHC,IAAAA,OAAO,EAAEhC;AAFN,GAAP;AAIH;;AAED,SAASe,kCAAT,CAA4Cf,QAA5C,EAAsD;AAClD,SAAO;AACH4B,IAAAA,IAAI,EAAE7D,kBAAkB,CAACkE,gCADtB;AAEHD,IAAAA,OAAO,EAAEhC;AAFN,GAAP;AAIH;;AAED,SAASyB,uBAAT,CAAiCF,MAAjC,EAAyCW,WAAzC,EAAsD;AAClD,SAAO;AACHN,IAAAA,IAAI,EAAE7D,kBAAkB,CAACoE,wBADtB;AAEHH,IAAAA,OAAO,EAAE;AAAET,MAAAA,MAAM,EAANA,MAAF;AAAUW,MAAAA,WAAW,EAAXA;AAAV;AAFN,GAAP;AAIH;;AAED,SAASlB,4BAAT,CAAsCf,IAAtC,EAA4C;AACxC,SAAO;AACH2B,IAAAA,IAAI,EAAE7D,kBAAkB,CAACqE,iCADtB;AAEHJ,IAAAA,OAAO,EAAE/B;AAFN,GAAP;AAIH;;AACD,SAASoB,sBAAT,CAAgCD,KAAhC,EAAuC;AACnC,SAAO;AACHQ,IAAAA,IAAI,EAAE7D,kBAAkB,CAACsE,sBADtB;AAEHL,IAAAA,OAAO,EAAEZ;AAFN,GAAP;AAIH;;AACD,OAAO,IAAMkB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAtC,QAAQ;AAAA,SAAI,UAAAT,QAAQ,EAAI;AAC7DA,IAAAA,QAAQ,CAACgD,WAAW,CAACvC,QAAD,CAAZ,CAAR;AACH,GAFgD;AAAA,CAA1C;;AAGP,SAASuC,WAAT,CAAqBP,OAArB,EAA8B;AAC1B,SAAO;AACHJ,IAAAA,IAAI,EAAE7D,kBAAkB,CAACyE,4BADtB;AAEHR,IAAAA,OAAO,EAAPA;AAFG,GAAP;AAIH,C,CACD;;;AACA,OAAO,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAzC,QAAQ;AAAA,SAAI,UAAAT,QAAQ,EAAI;AACvDA,IAAAA,QAAQ,CAACmD,kBAAkB,CAAC1C,QAAD,CAAnB,CAAR;AACH,GAF0C;AAAA,CAApC;;AAGP,SAAS0C,kBAAT,CAA4BV,OAA5B,EAAqC;AACjC,SAAO;AACHJ,IAAAA,IAAI,EAAE7D,kBAAkB,CAAC4E,8BADtB;AAEHX,IAAAA,OAAO,EAAPA;AAFG,GAAP;AAIH;;AAED,OAAO,IAAMY,YAAY,GAAG,SAAfA,YAAe,CAAA5C,QAAQ;AAAA,SAAI,UAAAT,QAAQ,EAAI;AAChDA,IAAAA,QAAQ,CAACsD,uBAAuB,CAAC7C,QAAD,CAAxB,CAAR;AACH,GAFmC;AAAA,CAA7B;;AAIP,SAAS6C,uBAAT,CAAiCb,OAAjC,EAA0C;AACtC,SAAO;AACHJ,IAAAA,IAAI,EAAE7D,kBAAkB,CAAC+E,0BADtB;AAEHd,IAAAA,OAAO,EAAPA;AAFG,GAAP;AAIH;;AAED,OAAO,IAAMe,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAM,UAAAxD,QAAQ,EAAI;AAC9CA,IAAAA,QAAQ,CAACyD,uBAAuB,EAAxB,CAAR;AACH,GAF+B;AAAA,CAAzB;;AAIP,SAASA,uBAAT,GAAmC;AAC/B,SAAO;AACHpB,IAAAA,IAAI,EAAE7D,kBAAkB,CAACkF;AADtB,GAAP;AAGH;;AAED,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAClB,OAAD,EAAa;AAC7C,SAAO;AACHJ,IAAAA,IAAI,EAAE7D,kBAAkB,CAACoF,uBADtB;AAEHnB,IAAAA,OAAO,EAAPA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAMoB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACpB,OAAD,EAAa;AAClD,SAAO;AACHJ,IAAAA,IAAI,EAAE7D,kBAAkB,CAACsF,4BADtB;AAEHrB,IAAAA,OAAO,EAAPA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAMsB,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACtB,OAAD,EAAa;AACnD,SAAO;AACHJ,IAAAA,IAAI,EAAE7D,kBAAkB,CAACwF,8BADtB;AAEHvB,IAAAA,OAAO,EAAPA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAMwB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,KAAD,EAAW;AAChD,SAAO;AACH7B,IAAAA,IAAI,EAAE7D,kBAAkB,CAAC2F,+BADtB;AAEH1B,IAAAA,OAAO,EAAEyB;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACrC,SAAO;AACH/B,IAAAA,IAAI,EAAE7D,kBAAkB,CAAC6F;AADtB,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACrD,SAAD;AAAA,SAAe,UAACjB,QAAD,EAAWC,QAAX,EAAwB;AAC9E,QAAMsE,IAAI,GAAGtD,SAAS,IAAIA,SAAS,CAAC,mBAAD,CAAtB,GAA8CA,SAAS,CAAC,mBAAD,CAAvD,GAA+E,EAA5F;AACA,QAAMuD,MAAM,GAAGvD,SAAS,IAAIA,SAAS,CAAC,wBAAD,CAAtB,GAAmDA,SAAS,CAAC,wBAAD,CAA5D,GAAyF,EAAxG;AACAjB,IAAAA,QAAQ,CAACd,gBAAgB,CAACC,WAAW,CAACsF,gBAAb,CAAjB,CAAR;;AACA,QAAIF,IAAJ,EAAU;AACN,UAAIC,MAAM,IAAI,CAAC,MAAD,EAAS,UAAT,EAAqB,SAArB,EAAgCE,OAAhC,CAAwCF,MAAM,CAACjD,WAAP,EAAxC,MAAkE,CAAC,CAAjF,EAAoF;AAChFvB,QAAAA,QAAQ,CAAChB,qBAAqB,EAAtB,CAAR;AACH,OAFD,MAEO;AACHgB,QAAAA,QAAQ,CAACf,mBAAmB,EAApB,CAAR;AACH;;AACDe,MAAAA,QAAQ,CAACiE,yBAAyB,CAACM,IAAD,CAA1B,CAAR;AACAvE,MAAAA,QAAQ,CAAC2E,mBAAmB,CAACJ,IAAD,CAApB,CAAR;AACAvE,MAAAA,QAAQ,CAACX,wBAAwB,EAAzB,CAAR;AACH;AACJ,GAd0C;AAAA,CAApC;AAgBP,OAAO,IAAMsF,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,IAAD;AAAA,SAAU,UAACvE,QAAD,EAAWC,QAAX,EAAwB;AACjED,IAAAA,QAAQ,CAAC2D,oBAAoB,CAAC,EAAD,CAArB,CAAR;AACA3D,IAAAA,QAAQ,CAACpB,UAAU,EAAX,CAAR;AACAF,IAAAA,mBAAmB,CAACkG,uBAApB,CAA4CL,IAA5C,EAAkD/D,IAAlD,CACI,UAAAC,QAAQ,EAAI;AACRT,MAAAA,QAAQ,CAACnB,UAAU,EAAX,CAAR;;AACA,UAAI4B,QAAQ,IAAIA,QAAQ,CAACC,IAArB,IAA6BD,QAAQ,CAACC,IAAT,CAAcC,MAA/C,EAAuD;AACnD,YAAMA,MAAM,GAAGF,QAAQ,CAACC,IAAT,CAAcC,MAA7B;;AACA,YAAIA,MAAM,CAACE,qBAAP,IAAgCF,MAAM,CAACE,qBAAP,CAA6Be,MAAjE,EAAyE;AACrE,cAAMf,qBAAqB,GAAGF,MAAM,CAACE,qBAAP,CAA6B,CAA7B,CAA9B;;AACA,cAAIA,qBAAqB,IAAIA,qBAAqB,CAACgE,cAA/C,IAAiEhE,qBAAqB,CAACgE,cAAtB,CAAqCC,OAA1G,EAAmH;AAAA,gBACvGC,KADuG,GAC7FlE,qBAAqB,CAACgE,cAAtB,CAAqCC,OADwD,CACvGC,KADuG;AAE/G/E,YAAAA,QAAQ,CAAC2D,oBAAoB,CAACqB,gBAAgB,CAACD,KAAD,CAAhB,IAA2B,EAA5B,CAArB,CAAR;AACH;AACJ;;AACD/E,QAAAA,QAAQ,CAAC6D,yBAAyB,CAACpD,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAA1B,CAAR;AACH,OAVD,MAUO;AACHX,QAAAA,QAAQ,CAAC6D,yBAAyB,CAACpD,QAAD,CAA1B,CAAR;AACAT,QAAAA,QAAQ,CAAC2D,oBAAoB,CAAC,EAAD,CAArB,CAAR;AACH;AACJ,KAjBL,EAkBI,UAAA9B,KAAK,EAAI;AACL7B,MAAAA,QAAQ,CAACnB,UAAU,EAAX,CAAR;AACAmB,MAAAA,QAAQ,CAAC6D,yBAAyB,CAAChC,KAAD,CAA1B,CAAR;AACA7B,MAAAA,QAAQ,CAAC2D,oBAAoB,CAAC,EAAD,CAArB,CAAR;AACH,KAtBL;AAwBH,GA3BkC;AAAA,CAA5B;;AA6BP,SAASqB,gBAAT,CAA0BC,cAA1B,EAA0C;AACtC,MAAIA,cAAJ,EAAoB;AAChB,WAAOA,cAAc,CAACC,IAAf,CAAoB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACzC,UAAID,KAAK,CAAC,aAAD,CAAL,IAAwBC,KAAK,CAAC,aAAD,CAAjC,EAAkD;AAC9C,YAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASH,KAAK,CAAC,aAAD,CAAd,CAAd;AACA,YAAMI,KAAK,GAAG,IAAID,IAAJ,CAASF,KAAK,CAAC,aAAD,CAAd,CAAd;AACA,eAAOG,KAAK,CAACC,OAAN,KAAkBH,KAAK,CAACG,OAAN,EAAzB;AACH;AACJ,KANM,CAAP;AAOH;;AACD,SAAO,EAAP;AACH;;AAED,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACzF,QAAD,EAAWC,QAAX,EAAwB;AACvD,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,QAAMyF,cAAc,GAAGxF,KAAK,CAACE,mBAAN,CAA0BsF,cAAjD;AACA,QAAMC,mBAAmB,GAAGzF,KAAK,CAACE,mBAAN,CAA0BuF,mBAAtD;AACA3F,IAAAA,QAAQ,CAACpB,UAAU,EAAX,CAAR;AACAF,IAAAA,mBAAmB,CAACkH,wBAApB,CAA6CF,cAA7C,EAA6DC,mBAA7D,EAAkFnF,IAAlF,CACI,UAAAC,QAAQ,EAAI;AACRT,MAAAA,QAAQ,CAACnB,UAAU,EAAX,CAAR;;AACA,UAAI4B,QAAQ,IAAIA,QAAQ,CAACC,IAArB,IAA6BD,QAAQ,CAACC,IAAT,CAAcC,MAA3C,IAAqDF,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBkF,OAArB,KAAiC,iCAA1F,EAA6H;AACzH7F,QAAAA,QAAQ,CAACT,mBAAmB,CAAC,IAAD,EAAO,4BAAP,CAApB,CAAR;AACAS,QAAAA,QAAQ,CAACoE,mBAAmB,EAApB,CAAR;AACApE,QAAAA,QAAQ,CAACd,gBAAgB,CAACC,WAAW,CAACsF,gBAAb,CAAjB,CAAR;AACAzE,QAAAA,QAAQ,CAAC2E,mBAAmB,CAACgB,mBAAD,CAApB,CAAR;AACH,OALD,MAKO;AACH3F,QAAAA,QAAQ,CAACT,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACH;AACJ,KAXL,EAYI,UAAAsC,KAAK,EAAI;AACL7B,MAAAA,QAAQ,CAACnB,UAAU,EAAX,CAAR;;AACA,UAAIgD,KAAK,IAAIA,KAAK,CAACpB,QAAf,IAA2BoB,KAAK,CAACpB,QAAN,CAAeC,IAA1C,IAAkDmB,KAAK,CAACpB,QAAN,CAAeC,IAAf,CAAoBC,MAAtE,IAAgFkB,KAAK,CAACpB,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA2BmF,gBAA/G,EAAiI;AAC7H9F,QAAAA,QAAQ,CAACT,mBAAmB,CAAC,IAAD,EAAOsC,KAAK,CAACpB,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA2BmF,gBAAlC,CAApB,CAAR;AACH,OAFD,MAEO;AACH9F,QAAAA,QAAQ,CAACT,mBAAmB,CAACsC,KAAD,EAAQ,IAAR,CAApB,CAAR;AACH;AACJ,KAnBL;AAqBH,GA1B4B;AAAA,CAAtB;AA4BP,OAAO,IAAMkE,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAc,UAAChG,QAAD,EAAWC,QAAX,EAAwB;AAClE,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;AAEAD,IAAAA,QAAQ,CAACpB,UAAU,EAAX,CAAR;AAEAF,IAAAA,mBAAmB,CAACqH,gBAApB,CAAqCC,QAArC,EAA+CxF,IAA/C,CACI,UAAAC,QAAQ,EAAI;AACRT,MAAAA,QAAQ,CAACnB,UAAU,EAAX,CAAR;;AACA,UAAI4B,QAAQ,IAAIA,QAAQ,CAACC,IAArB,IAA6BD,QAAQ,CAACC,IAAT,CAAcC,MAA/C,EAAuD;AACnDX,QAAAA,QAAQ,CAACT,mBAAmB,CAAC,IAAD,EAAO,0BAAP,CAApB,CAAR;AACH,OAFD,MAEO;AACHS,QAAAA,QAAQ,CAACT,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACH;AACJ,KARL,EASI,UAAAsC,KAAK,EAAI;AACL7B,MAAAA,QAAQ,CAACnB,UAAU,EAAX,CAAR;;AACA,UAAIgD,KAAK,IAAIA,KAAK,CAACpB,QAAf,IAA2BoB,KAAK,CAACpB,QAAN,CAAeC,IAA1C,IAAkDmB,KAAK,CAACpB,QAAN,CAAeC,IAAf,CAAoBC,MAA1E,EAAkF;AAC9EX,QAAAA,QAAQ,CAACT,mBAAmB,CAAC,IAAD,EAAOsC,KAAK,CAACpB,QAAN,CAAeC,IAAf,CAAoBC,MAA3B,CAApB,CAAR;AACH,OAFD,MAEO;AACHX,QAAAA,QAAQ,CAACT,mBAAmB,CAACsC,KAAD,EAAQ,IAAR,CAApB,CAAR;AACH;AACJ,KAhBL;AAkBH,GAvB+B;AAAA,CAAzB","sourcesContent":["import { SRDetailActionType } from \"../actiontype/sr-details-tab.actiontype.js\";\nimport { TaskUpdateActionType } from \"../actiontype/task-update.actiontype\";\nimport SRDetailsTabService from '../services/sr-details-tab.service';\nimport SrTaskUpdateService from '../services/task-update.service';\nimport { showLoader, hideLoader } from '../actions/app.action';\nimport { switchHomeTab, hideSRDetailsTab, dispayCreateSRNoteTab, hideCreateSRNoteTab, switchSRNotesTab } from \"./tabs.action.js\";\nimport { TabConstant } from \"../constants/tabs.constant.js\";\nimport { setECRMStatus } from \"../actions/b2b-system-status.action\";\nimport { openSRNotesDetailsDialog } from \"./app-dialog.action.js\";\nimport UtilService from \"../services/util.service.js\";\nimport { openSnackbarRequest } from \"./snackbar.action.js\";\nimport CookieManagerService from \"../services/cookie.service.js\";\nimport { AppConstant } from \"../constants/app.constant.js\";\nimport {updateSrTaskUpdateCases, updateSrTaskUpdateSrNumber, updateSelectedSrTaskDetails} from './task-update.action';\nimport { AppDialogActionType } from \"../actiontype/app-dialog.actiontype.js\";\n\nexport const fetchSRDetailsTabData = srDetailsObj => (dispatch, getState) => {\n    const state = getState();\n    // dispatch(resetSRDetailsTabData());\n    dispatch(fetchSRDetailsApiLoading());\n    if (state && state.SRDetailsTabApiInfo && state.SRDetailsTabApiInfo.srDetailsTabApiResponse && state.SRDetailsTabApiInfo.srDetailsTabApiResponse[0]) {\n        dispatch(SRDetailsTabApiSuccess(state.SRDetailsTabApiInfo.srDetailsTabApiResponse));\n        return;\n    }\n    SRDetailsTabService.fetchSRDetailsTabApi().then(\n        response => {\n            if (response && response.data && response.data.result) {\n\n                let srTypeRequestData = response.data.result.serviceRequestDetails ? response.data.result.serviceRequestDetails : []\n                let ftrTypeRequestData = []\n                let data = {\n                    srData: [...srTypeRequestData],\n                    ftrData: [...ftrTypeRequestData]\n                }\n\n                let srDetails = response.data.result.serviceRequestDetails\n                let typeSubtypeOpenSrExists = {}\n\n                // Checking whether there is already an SR exists with type and subtype\n                if (srDetails) {\n                    srDetails.map((item) => {\n                        let key = `${item['problem_type']}-${item['problem_subType']}-${item['problem_subSubType']}`\n                        let openSrExists = false\n                        if (item['problem_activityStatus'] && item['problem_activityStatus'].toLowerCase() === 'open') {\n                            openSrExists = true\n                            typeSubtypeOpenSrExists[key] = openSrExists\n                        }\n                    })\n                }\n\n                dispatch(SRDetailsTabApiSuccess(response.data.result));\n                dispatch(UpdateSRDetailsTabApiProcessedData(typeSubtypeOpenSrExists));\n                dispatch(setCategorySpecificSrFtrData(data))\n                if (checkForAnyOpenRequest(srTypeRequestData)) {\n                    dispatch(switchHomeTab(TabConstant.HOME_SR_DETAILS_TAB));\n                }\n                else if (data['srData'] && data['srData'].length === 0) {\n\n                }\n            }\n\n        },\n        error => {\n            dispatch(hideLoader());\n            dispatch(SRDetailsTabApiFailure(error));\n        }\n    );\n}\n\nexport const fetchSRNoteDetailsData = noteId => (dispatch, getState) => {\n    const state = getState();\n\n    if (state && state.SRDetailsTabApiInfo && state.SRDetailsTabApiInfo.srNotesContents && state.SRDetailsTabApiInfo.srNotesContents[noteId]) {\n        dispatch(SRNoteDetailsApiSuccess(noteId, state.SRDetailsTabApiInfo.srNotesContents[noteId]));\n        return;\n    }\n    SRDetailsTabService.fetchSRNoteDetailsApi(noteId).then(\n        response => {\n            if (response && response.data && response.data.result) {\n                dispatch(SRNoteDetailsApiSuccess(noteId, response.data.result));\n            }\n        },\n        error => {\n            dispatch(hideLoader());\n            dispatch(SRDetailsTabApiFailure(error));\n        }\n    );\n}\n\nexport const resetSRDetailsTabData = () => {\n    return {\n        type: SRDetailActionType.SR_DETAILS_RESET_REQUEST\n    }\n}\n\nfunction checkForAnyOpenRequest(data) {\n    if (data && data.length > 0) {\n        // for (let i = 0; i < data.length; i++) {\n        //     if (data[i] && data[i][\"status\"] && data[i][\"status\"].toLowerCase() === \"open\") {\n        //         return true\n        //     }\n        // }\n        if (data[0] && data[0][\"status\"] && data[0][\"status\"].toLowerCase() === \"open\") {\n            return true\n        }\n    }\n    return false\n}\n\nfunction fetchSRDetailsApiLoading() {\n    return {\n        type: SRDetailActionType.SR_DETAILS_TAB_REQUEST\n    }\n}\n\nfunction SRDetailsTabApiSuccess(response) {\n    return {\n        type: SRDetailActionType.SR_DETAILS_TAB_SUCCESS,\n        payload: response\n    }\n}\n\nfunction UpdateSRDetailsTabApiProcessedData(response) {\n    return {\n        type: SRDetailActionType.UPDATE_SR_DETAILS_PROCESSED_DATA,\n        payload: response\n    }\n}\n\nfunction SRNoteDetailsApiSuccess(noteId, noteDetails) {\n    return {\n        type: SRDetailActionType.UPDATE_SR_NOTES_CONTENTS,\n        payload: { noteId, noteDetails }\n    }\n}\n\nfunction setCategorySpecificSrFtrData(data) {\n    return {\n        type: SRDetailActionType.SET_CATEGORY_SPECIFIC_SR_FTR_DATA,\n        payload: data\n    }\n}\nfunction SRDetailsTabApiFailure(error) {\n    return {\n        type: SRDetailActionType.SR_DETAILS_TAB_FAILURE,\n        payload: error\n    }\n}\nexport const setRowClickExpansionIndex = response => dispatch => {\n    dispatch(setRowIndex(response));\n}\nfunction setRowIndex(payload) {\n    return {\n        type: SRDetailActionType.SET_EXPNSION_PANEL_ROW_INDEX,\n        payload\n    }\n}\n//closing the expanded panel expansion\nexport const closePanelExpansion = response => dispatch => {\n    dispatch(setDefaultRowIndex(response))\n}\nfunction setDefaultRowIndex(payload) {\n    return {\n        type: SRDetailActionType.SET_DEFAULT_EXPNSION_ROW_INDEX,\n        payload\n    }\n}\n\nexport const showSRDetail = response => dispatch => {\n    dispatch(showSRAdditionalDetails(response))\n}\n\nfunction showSRAdditionalDetails(payload) {\n    return {\n        type: SRDetailActionType.SHOW_SR_ADDITIONAL_DETAILS,\n        payload\n    }\n}\n\nexport const showSRHistoryTab = () => dispatch => {\n    dispatch(showSRHistoryDetailsTab());\n}\n\nfunction showSRHistoryDetailsTab() {\n    return {\n        type: SRDetailActionType.SHOW_SR_HISTORY_TAB\n    }\n}\n\nexport const updateSRNotesDetails = (payload) => {\n    return {\n        type: SRDetailActionType.UPDATE_SR_NOTES_DETAILS,\n        payload\n    }\n}\n\nexport const SRNotesDetailsApiResponse = (payload) => {\n    return {\n        type: SRDetailActionType.UPDATE_SR_NOTES_API_RESPONSE,\n        payload\n    }\n}\n\nexport const updateCreateNoteFormValues = (payload) => {\n    return {\n        type: SRDetailActionType.UPDATE_CREATE_NOTE_FORM_VALUES,\n        payload\n    }\n}\n\nexport const updateCurrentViewSRNoteID = (value) => {\n    return {\n        type: SRDetailActionType.UPDATE_CURRENT_VIEW_SR_NOTES_ID,\n        payload: value\n    }\n}\n\nexport const resetCreateNoteForm = () => {\n    return {\n        type: SRDetailActionType.RESET_CREATE_NOTE_FORM_VALUES\n    }\n}\n\nexport const srNotesDetailsDialogHandler = (srDetails) => (dispatch, getState) => {\n    const srNo = srDetails && srDetails['problem_problemId'] ? srDetails['problem_problemId'] : '';\n    const status = srDetails && srDetails['problem_activityStatus'] ? srDetails['problem_activityStatus'] : '';\n    dispatch(switchSRNotesTab(TabConstant.SR_NOTES_DETAILS));\n    if (srNo) {\n        if (status && ['open', 'resolved', 're-open'].indexOf(status.toLowerCase()) !== -1) {\n            dispatch(dispayCreateSRNoteTab());\n        } else {\n            dispatch(hideCreateSRNoteTab());\n        }\n        dispatch(updateCurrentViewSRNoteID(srNo));\n        dispatch(fetchSRNotesDetails(srNo));\n        dispatch(openSRNotesDetailsDialog());\n    }\n}\n\nexport const fetchSRNotesDetails = (srNo) => (dispatch, getState) => {\n    dispatch(updateSRNotesDetails([]));\n    dispatch(showLoader());\n    SRDetailsTabService.onSRNotesDetailsRequest(srNo).then(\n        response => {\n            dispatch(hideLoader());\n            if (response && response.data && response.data.result) {\n                const result = response.data.result;\n                if (result.serviceRequestDetails && result.serviceRequestDetails.length) {\n                    const serviceRequestDetails = result.serviceRequestDetails[0];\n                    if (serviceRequestDetails && serviceRequestDetails.serviceproblem && serviceRequestDetails.serviceproblem.problem) {\n                        const { notes } = serviceRequestDetails.serviceproblem.problem;\n                        dispatch(updateSRNotesDetails(sortByCreateTime(notes) || []));\n                    }\n                }\n                dispatch(SRNotesDetailsApiResponse(response.data.result));\n            } else {\n                dispatch(SRNotesDetailsApiResponse(response));\n                dispatch(updateSRNotesDetails([]));\n            }\n        },\n        error => {\n            dispatch(hideLoader());\n            dispatch(SRNotesDetailsApiResponse(error));\n            dispatch(updateSRNotesDetails([]));\n        }\n    );\n}\n\nfunction sortByCreateTime(srNotesDetails) {\n    if (srNotesDetails) {\n        return srNotesDetails.sort((item1, item2) => {\n            if (item1['createdDate'] && item2['createdDate']) {\n                const date1 = new Date(item1['createdDate']);\n                const date2 = new Date(item2['createdDate']);\n                return date2.getTime() - date1.getTime();\n            }\n        })\n    }\n    return [];\n}\n\nexport const createNewNote = () => (dispatch, getState) => {\n    const state = getState();\n    const createNoteForm = state.SRDetailsTabApiInfo.createNoteForm;\n    const currentViewSrNoteId = state.SRDetailsTabApiInfo.currentViewSrNoteId;\n    dispatch(showLoader());\n    SRDetailsTabService.onCreateNewSRNoteRequest(createNoteForm, currentViewSrNoteId).then(\n        response => {\n            dispatch(hideLoader());\n            if (response && response.data && response.data.result && response.data.result.message === \"Request processed successfully.\") {\n                dispatch(openSnackbarRequest(null, \"Note created successfully.\"));\n                dispatch(resetCreateNoteForm());\n                dispatch(switchSRNotesTab(TabConstant.SR_NOTES_DETAILS));\n                dispatch(fetchSRNotesDetails(currentViewSrNoteId));\n            } else {\n                dispatch(openSnackbarRequest(null));\n            }\n        },\n        error => {\n            dispatch(hideLoader());\n            if (error && error.response && error.response.data && error.response.data.result && error.response.data.result.faultDescription) {\n                dispatch(openSnackbarRequest(null, error.response.data.result.faultDescription));\n            } else {\n                dispatch(openSnackbarRequest(error, null));\n            }\n        }\n    );\n}\n\nexport const reOpenResolvedSr = (srNumber) => (dispatch, getState) => {\n    const state = getState();\n\n    dispatch(showLoader());\n\n    SRDetailsTabService.reOpenResolvedSr(srNumber).then(\n        response => {\n            dispatch(hideLoader());\n            if (response && response.data && response.data.result) {\n                dispatch(openSnackbarRequest(null, \"SR Reopened successfully\"));\n            } else {\n                dispatch(openSnackbarRequest(null));\n            }\n        },\n        error => {\n            dispatch(hideLoader());\n            if (error && error.response && error.response.data && error.response.data.result) {\n                dispatch(openSnackbarRequest(null, error.response.data.result));\n            } else {\n                dispatch(openSnackbarRequest(error, null));\n            }\n        }\n    )\n}\n"]},"metadata":{},"sourceType":"module"}