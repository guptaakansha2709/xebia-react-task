{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport SystemTypeService from './system-type.service';\n\nvar ScenarioService =\n/*#__PURE__*/\nfunction () {\n  function ScenarioService() {\n    _classCallCheck(this, ScenarioService);\n  }\n\n  _createClass(ScenarioService, null, [{\n    key: \"encodeForGet\",\n    value: function encodeForGet(str) {\n      if (str) {\n        return encodeURIComponent(str);\n      }\n\n      return \"\";\n    }\n  }, {\n    key: \"scenarioSearchRequest\",\n    value: function scenarioSearchRequest(reqData) {\n      var config = {\n        headers: {\n          'Content-Type': \"application/x-www-form-urlencoded\"\n        }\n      };\n      var authDetails = CookieManagerService.getAuthDetails();\n      var url = Config.contextPath + \"user/rest/v1.0/scenario/search?searchString=\" + this.encodeForGet(reqData[\"searchText\"]) + \"&channel=\" + this.encodeForGet(authDetails[\"channel\"]) + \"&lob=\" + this.encodeForGet(authDetails[\"lob\"]) + \"&locale=english\";\n      return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"fetchScenarioRequest\",\n    value: function fetchScenarioRequest(reqData) {\n      var config = {\n        headers: {\n          'Content-Type': \"application/x-www-form-urlencoded\"\n        }\n      };\n      var authDetails = CookieManagerService.getAuthDetails();\n      var lsiNumber = CookieManagerService.getItem(AppConstant.LSI_NUMBER);\n      var url = Config.contextPath + \"user/rest/v1.0/scenario/\".concat(reqData[\"scenarioId\"], \"?channel=\").concat(this.encodeForGet(authDetails[\"channel\"]), \"&lsiNumber=\").concat(lsiNumber, \"&source=search&sourceScenario=\");\n      return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"getAuthMatrix\",\n    value: function getAuthMatrix() {\n      var url = Config.contextPath + \"user/rest/v1.0/authmatrix/siebel/params?transactionId=\" + (CookieManagerService.getItem(AppConstant.CORRELATION_ID) || \"\");\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"authenticationFailed\",\n    value: function authenticationFailed() {\n      var msisdn = CookieManagerService.getItem(AppConstant.MSISDN);\n      var reqData = {\n        notes: \"\",\n        customerMsisdn: msisdn,\n        scenarioName: \"Customer authentication\",\n        tagging: \"Customer authentication>Request>FTR>Customer authentication>Customer authentication>Authentication matrix followed>Authentication failed\"\n      };\n      var authDetails = CookieManagerService.getAuthDetails();\n      var data = {\n        channel: authDetails.channel,\n        lob: authDetails.lob,\n        source: authDetails.source\n      };\n      var transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n      var reqDataObj = Object.assign({}, data, reqData);\n      reqDataObj['transactionId'] = reqDataObj['transactionId'] || transactionId;\n      var url = Config.contextPath + \"user/rest/v1.0/tag/postpaid/siebel/authenticationFailed\";\n      return CustomHttpService.post(url, reqDataObj, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"systemCheckAndInfoRequest\",\n    value: function systemCheckAndInfoRequest(reqData) {\n      var config = {\n        headers: {}\n      };\n      var p_map = {};\n      var p_oldMap = {\n        lsiNumber: reqData['lsiNumber'],\n        isAuthDone: \"false\",\n        START_DATE: reqData[\"START_DATE\"] || null,\n        END_DATE: reqData[\"END_DATE\"] || null\n      };\n\n      for (var _attrname in reqData[\"ruleParams\"]) {\n        p_map[_attrname] = reqData[\"ruleParams\"][_attrname];\n      }\n\n      var authDetails = CookieManagerService.getAuthDetails();\n\n      for (var attrname in p_oldMap) {\n        p_map[attrname] = p_oldMap[attrname];\n      }\n\n      var provParam = this.getProvParamForSystemCheckPayload(reqData);\n\n      if (provParam) {\n        p_map[provParam] = reqData[provParam];\n      }\n\n      var url = Config.contextPath + \"user/rest/v1.0/scenario/systemCheck?nextStepId=\" + reqData[\"nextStepId\"] + \"&transactionId=\" + reqData[\"transactionId\"] + \"&agentId=\" + authDetails[\"agentId\"] + \"&notes=\" + reqData[\"notes\"];\n      return CustomHttpService.post(url, p_map, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"checkIfBookmarkForChannels\",\n    value: function checkIfBookmarkForChannels(bookMark) {\n      if (bookMark && bookMark['forChannels'] && Array.isArray(bookMark['forChannels'])) {\n        var advisorChannel = CookieManagerService.getAuthDetails()['channel'];\n        var enableBookmark = bookMark['forChannels'].find(function (bookMarkChannel) {\n          return bookMarkChannel.toLowerCase() === advisorChannel.toLowerCase();\n        });\n\n        if (enableBookmark !== undefined) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getProvParamForSystemCheckPayload\",\n    value: function getProvParamForSystemCheckPayload(systemCheckPayloadData) {\n      var systemCheckPayloadDataKeys = Object.keys(systemCheckPayloadData);\n      var provParam = systemCheckPayloadDataKeys.find(function (item) {\n        return item.indexOf('INPUT_PARAM-PROVISIONING-APPROVED-FOR-') > -1;\n      });\n\n      if (provParam !== undefined) {\n        return provParam;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getChoiceColor\",\n    value: function getChoiceColor(data) {\n      var choiceColor = \"\";\n\n      if (data[\"markedChoiceColor\"] && data[\"markedChoiceColor\"].toLowerCase()) {\n        choiceColor = data[\"markedChoiceColor\"].toLowerCase();\n      }\n\n      return choiceColor;\n    }\n  }, {\n    key: \"isChoiceBookmark\",\n    value: function isChoiceBookmark(choiceData) {\n      if (choiceData && choiceData[\"bookMark\"] && this.checkIfBookmarkForChannels(choiceData[\"bookMark\"])) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isChoiceBookmarkWithCRMCode\",\n    value: function isChoiceBookmarkWithCRMCode(choiceData) {\n      if (choiceData && choiceData[\"bookMark\"] && this.checkIfBookmarkForChannels(choiceData[\"bookMark\"]) && choiceData[\"bookMark\"][\"bookmarkOnCrmTaggingPushEnabled\"] === true) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getScenarioBookmarkStepId\",\n    value: function getScenarioBookmarkStepId(scenarioData, bookmarkName) {\n      var bookmarkKeys = scenarioData[\"bookMarkKeys\"];\n      var scenarioTree = scenarioData[\"decisionTree\"];\n\n      for (var i = 0; i < bookmarkKeys.length; i++) {\n        if (bookmarkName === scenarioTree[bookmarkKeys[i]].bookMarkName) {\n          return parseInt(bookmarkKeys[i], 10);\n        }\n      }\n\n      return this.getScenarioStartingStepId(scenarioTree);\n    }\n  }, {\n    key: \"getScenarioStartingStepId\",\n    value: function getScenarioStartingStepId(scenarioTree) {\n      var stepId = null;\n      var indexArr = Object.keys(scenarioTree);\n      indexArr = indexArr.sort(function (a, b) {\n        return a - b;\n      });\n\n      if (scenarioTree[indexArr[0]] && scenarioTree[indexArr[0]].stepId) {\n        stepId = scenarioTree[indexArr[0]].stepId;\n      }\n\n      return stepId;\n    }\n  }, {\n    key: \"getSubtype\",\n    value: function getSubtype(crmCode) {\n      var crmCodeArr = crmCode ? crmCode.split('>') : [];\n\n      if (crmCodeArr.length > 4) {\n        return crmCodeArr[4];\n      }\n\n      return \"\";\n    }\n  }, {\n    key: \"getType\",\n    value: function getType(crmCode) {\n      var crmCodeArr = crmCode ? crmCode.split('>') : [];\n\n      if (crmCodeArr.length > 3) {\n        return crmCodeArr[3];\n      }\n\n      return \"\";\n    }\n  }, {\n    key: \"checkForCrmCodeValidation\",\n    value: function checkForCrmCodeValidation(crmCode, length) {\n      var crmCodeArr = crmCode ? crmCode.split('>') : [];\n\n      if (crmCodeArr.length === length) {\n        for (var i = 0; i < crmCodeArr.length; i++) {\n          if (crmCodeArr[i] && crmCodeArr[i].trim() === \"\") {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"checkForCrmCodeValidationForSR\",\n    value: function checkForCrmCodeValidationForSR(crmCode, customerInfo) {\n      if (SystemTypeService.isSiebelSystem(customerInfo)) {\n        return ScenarioService.checkForCrmCodeValidation(crmCode, 5);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkForCrmCodeValidationForFTR\",\n    value: function checkForCrmCodeValidationForFTR(crmCode, customerInfo) {\n      if (SystemTypeService.isSiebelSystem(customerInfo)) {\n        return ScenarioService.checkForCrmCodeValidation(crmCode, 7);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getValidTrimmedCrmCode\",\n    value: function getValidTrimmedCrmCode(crmCode) {\n      if (crmCode) {\n        var crmCodeArr = crmCode ? crmCode.split('>') : [];\n        crmCodeArr.map(function (code) {\n          return code.trim();\n        });\n        return crmCodeArr.join('>');\n      }\n\n      return \"\";\n    }\n  }, {\n    key: \"getNotesAsPerCharacterConstraint\",\n    value: function getNotesAsPerCharacterConstraint(notes) {\n      if (notes && notes.length > 300) {\n        notes = notes.slice(notes.length - 300, notes.length);\n        notes = notes.slice(notes.indexOf('>') + 1);\n      }\n\n      return notes;\n    }\n  }, {\n    key: \"isAutoScenarioStepFlow\",\n    value: function isAutoScenarioStepFlow(stepData, isProspectNumber) {\n      if (stepData) {\n        var stepType = \"\";\n\n        if (stepData && stepData.instruction) {\n          stepType = stepData.instruction.toLowerCase();\n        }\n\n        var tagRule = stepData && stepData.tagRule != null && stepData.tagRule !== \"null\" && stepData.tagRule && stepData.tagRule !== \"\" ? stepData.tagRule.toLowerCase() : null;\n\n        if ((stepType === \"system check\" || stepType === \"system information\" || stepType === \"system check & information\") && !isProspectNumber) {\n          if (tagRule !== \"select a tagrule\" && tagRule !== \"tagrule not found\" && tagRule != null) {\n            // DO AUTO FLOW\n            return true;\n          } else if (stepType === \"system information\") {\n            // DO AUTO FLOW\n            // Special Case as system Information does not has tag rule by design.\n            return true;\n          } else {\n            // DO MANUAL FLOW\n            return false;\n          }\n        } else {\n          // DO MANUAL FLOW\n          return false;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getScenarioIdFromScenarioDescLink\",\n    value: function getScenarioIdFromScenarioDescLink(linkHref) {\n      var linkPartsArr = linkHref.split('/scenario/');\n\n      if (linkPartsArr.length > 1) {\n        return linkHref.split('/scenario/')[1].split('?')[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getFeatureNameFromScenarioDescription\",\n    value: function getFeatureNameFromScenarioDescription(linkHref) {\n      var linkPartsArr = linkHref.split('/feature/');\n\n      if (linkPartsArr.length > 1) {\n        var featurePart = linkHref.split('/feature/')[1].split('?')[0];\n        featurePart = decodeURIComponent(featurePart);\n\n        if (featurePart.indexOf('|') !== -1) {\n          return featurePart.split('|')[0];\n        } else {\n          return linkHref.split('/feature/')[1].split('?')[0];\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getProvConfirmParamName\",\n    value: function getProvConfirmParamName(nextStepData) {\n      return \"INPUT_PARAM-PROVISIONING-APPROVED-FOR-\".concat(nextStepData.tagRule);\n    }\n  }, {\n    key: \"isProvisioningConfirmation\",\n    value: function isProvisioningConfirmation(choiceData, nextStepData) {\n      var instructions = ['System Check & Information', 'System Check'];\n\n      if (choiceData && choiceData['promptRequired'] && choiceData['promptText'] && choiceData['promptText'].trim() !== \"\") {\n        if (nextStepData && nextStepData.instruction && instructions.includes(nextStepData.instruction) && nextStepData.tagRule) {\n          return true;\n        }\n\n        return false;\n      }\n\n      return false;\n    }\n  }]);\n\n  return ScenarioService;\n}();\n\nexport default ScenarioService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/scenario.service.js"],"names":["CustomHttpService","Config","EncodeDecodeType","CookieManagerService","AppConstant","SystemTypeService","ScenarioService","str","encodeURIComponent","reqData","config","headers","authDetails","getAuthDetails","url","contextPath","encodeForGet","get","DEFAULT","lsiNumber","getItem","LSI_NUMBER","CORRELATION_ID","msisdn","MSISDN","notes","customerMsisdn","scenarioName","tagging","data","channel","lob","source","transactionId","reqDataObj","Object","assign","post","p_map","p_oldMap","isAuthDone","START_DATE","END_DATE","attrname","provParam","getProvParamForSystemCheckPayload","bookMark","Array","isArray","advisorChannel","enableBookmark","find","bookMarkChannel","toLowerCase","undefined","systemCheckPayloadData","systemCheckPayloadDataKeys","keys","item","indexOf","choiceColor","choiceData","checkIfBookmarkForChannels","scenarioData","bookmarkName","bookmarkKeys","scenarioTree","i","length","bookMarkName","parseInt","getScenarioStartingStepId","stepId","indexArr","sort","a","b","crmCode","crmCodeArr","split","trim","customerInfo","isSiebelSystem","checkForCrmCodeValidation","map","code","join","slice","stepData","isProspectNumber","stepType","instruction","tagRule","linkHref","linkPartsArr","featurePart","decodeURIComponent","nextStepData","instructions","includes"],"mappings":"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","sourcesContent":["import CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport SystemTypeService from './system-type.service';\n\nclass ScenarioService {\n\n    static encodeForGet(str) {\n        if (str) {\n            return encodeURIComponent(str);\n        }\n        return \"\";\n    };\n\n\n    static scenarioSearchRequest(reqData) {\n        const config = {\n            headers: {\n                'Content-Type': \"application/x-www-form-urlencoded\"\n            }\n        };\n        let authDetails = CookieManagerService.getAuthDetails();\n        var url = Config.contextPath + \"user/rest/v1.0/scenario/search?searchString=\" + this.encodeForGet(reqData[\"searchText\"]) + \"&channel=\" + this.encodeForGet(authDetails[\"channel\"]) + \"&lob=\" + this.encodeForGet(authDetails[\"lob\"]) + \"&locale=english\";\n        return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n\n    static fetchScenarioRequest(reqData) {\n        const config = {\n            headers: {\n                'Content-Type': \"application/x-www-form-urlencoded\"\n            }\n        };\n        let authDetails = CookieManagerService.getAuthDetails();\n        const lsiNumber = CookieManagerService.getItem(AppConstant.LSI_NUMBER)\n        var url = Config.contextPath + `user/rest/v1.0/scenario/${reqData[\"scenarioId\"]}?channel=${this.encodeForGet(authDetails[\"channel\"])}&lsiNumber=${lsiNumber}&source=search&sourceScenario=`;\n        return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n\n    static getAuthMatrix() {\n        let url = Config.contextPath + \"user/rest/v1.0/authmatrix/siebel/params?transactionId=\" + (CookieManagerService.getItem(AppConstant.CORRELATION_ID) || \"\");\n        return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static authenticationFailed() {\n        const msisdn = CookieManagerService.getItem(AppConstant.MSISDN);\n        let reqData = {\n            notes: \"\",\n            customerMsisdn: msisdn,\n            scenarioName: \"Customer authentication\",\n            tagging: \"Customer authentication>Request>FTR>Customer authentication>Customer authentication>Authentication matrix followed>Authentication failed\"\n        }\n        let authDetails = CookieManagerService.getAuthDetails();\n        const data = {\n            channel: authDetails.channel,\n            lob: authDetails.lob,\n            source: authDetails.source\n        };\n        const transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n        const reqDataObj = Object.assign({}, data, reqData);\n        reqDataObj['transactionId'] = reqDataObj['transactionId'] || transactionId;\n        let url = Config.contextPath + \"user/rest/v1.0/tag/postpaid/siebel/authenticationFailed\";\n        return CustomHttpService.post(url, reqDataObj, {}, EncodeDecodeType.DEFAULT);\n\n    }\n\n    static systemCheckAndInfoRequest(reqData) {\n        const config = {\n            headers: {\n            }\n        };\n        const p_map = {};\n        var p_oldMap = {\n            lsiNumber: reqData['lsiNumber'],\n            isAuthDone: \"false\",\n            START_DATE: reqData[\"START_DATE\"] || null,\n            END_DATE: reqData[\"END_DATE\"] || null\n        };\n        for (let attrname in reqData[\"ruleParams\"]) {\n            p_map[attrname] = reqData[\"ruleParams\"][attrname];\n        }\n        let authDetails = CookieManagerService.getAuthDetails();\n        for (var attrname in p_oldMap) { p_map[attrname] = p_oldMap[attrname]; }\n        const provParam = this.getProvParamForSystemCheckPayload(reqData);\n        if (provParam) {\n            p_map[provParam] = reqData[provParam];\n        }\n        var url = Config.contextPath + \"user/rest/v1.0/scenario/systemCheck?nextStepId=\" + reqData[\"nextStepId\"] + \"&transactionId=\" + reqData[\"transactionId\"] + \"&agentId=\" + authDetails[\"agentId\"] + \"&notes=\" + reqData[\"notes\"];\n        return CustomHttpService.post(url, p_map, config, EncodeDecodeType.DEFAULT);\n    }\n\n    static checkIfBookmarkForChannels(bookMark) {\n        if (bookMark && bookMark['forChannels'] && Array.isArray(bookMark['forChannels'])) {\n            const advisorChannel = CookieManagerService.getAuthDetails()['channel'];\n            const enableBookmark = bookMark['forChannels'].find((bookMarkChannel) => {\n                return bookMarkChannel.toLowerCase() === advisorChannel.toLowerCase();\n            });\n            if (enableBookmark !== undefined) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    static getProvParamForSystemCheckPayload(systemCheckPayloadData) {\n        const systemCheckPayloadDataKeys = Object.keys(systemCheckPayloadData);\n        const provParam = systemCheckPayloadDataKeys.find((item) => {\n            return item.indexOf('INPUT_PARAM-PROVISIONING-APPROVED-FOR-') > -1;\n        });\n        if (provParam !== undefined) {\n            return provParam;\n        }\n        return null;\n    }\n\n    static getChoiceColor(data) {\n        let choiceColor = \"\";\n        if (data[\"markedChoiceColor\"] && data[\"markedChoiceColor\"].toLowerCase()) {\n            choiceColor = data[\"markedChoiceColor\"].toLowerCase();\n        }\n        return choiceColor;\n    }\n\n    static isChoiceBookmark(choiceData) {\n        if (choiceData && choiceData[\"bookMark\"] && this.checkIfBookmarkForChannels(choiceData[\"bookMark\"])) {\n            return true;\n        }\n        return false;\n    }\n\n    static isChoiceBookmarkWithCRMCode(choiceData) {\n        if (choiceData && choiceData[\"bookMark\"] && this.checkIfBookmarkForChannels(choiceData[\"bookMark\"]) && choiceData[\"bookMark\"][\"bookmarkOnCrmTaggingPushEnabled\"] === true) {\n            return true;\n        }\n        return false;\n    }\n\n    static getScenarioBookmarkStepId(scenarioData, bookmarkName) {\n        const bookmarkKeys = scenarioData[\"bookMarkKeys\"];\n        const scenarioTree = scenarioData[\"decisionTree\"];\n        for (let i = 0; i < bookmarkKeys.length; i++) {\n            if (bookmarkName === scenarioTree[bookmarkKeys[i]].bookMarkName) {\n                return parseInt(bookmarkKeys[i], 10);\n            }\n        }\n        return this.getScenarioStartingStepId(scenarioTree);\n    }\n\n    static getScenarioStartingStepId(scenarioTree) {\n        let stepId = null;\n        let indexArr = Object.keys(scenarioTree);\n        indexArr = indexArr.sort(function (a, b) {\n            return a - b;\n        });\n        if (scenarioTree[indexArr[0]] && scenarioTree[indexArr[0]].stepId) {\n            stepId = scenarioTree[indexArr[0]].stepId;\n        }\n        return stepId;\n    }\n\n    static getSubtype(crmCode) {\n        let crmCodeArr = crmCode ? crmCode.split('>') : [];\n        if (crmCodeArr.length > 4) {\n            return crmCodeArr[4];\n        }\n        return \"\";\n    }\n\n    static getType(crmCode) {\n        let crmCodeArr = crmCode ? crmCode.split('>') : [];\n        if (crmCodeArr.length > 3) {\n            return crmCodeArr[3];\n        }\n        return \"\";\n    }\n\n    static checkForCrmCodeValidation(crmCode, length) {\n        let crmCodeArr = crmCode ? crmCode.split('>') : [];\n        if (crmCodeArr.length === length) {\n            for (let i = 0; i < crmCodeArr.length; i++) {\n                if (crmCodeArr[i] && crmCodeArr[i].trim() === \"\") {\n                    return false\n                }\n            }\n            return true\n        }\n        return false\n    }\n\n\n    static checkForCrmCodeValidationForSR(crmCode, customerInfo) {\n        if (SystemTypeService.isSiebelSystem(customerInfo)) {\n            return ScenarioService.checkForCrmCodeValidation(crmCode, 5)\n        }\n        return true\n    }\n    static checkForCrmCodeValidationForFTR(crmCode, customerInfo) {\n        if (SystemTypeService.isSiebelSystem(customerInfo)) {\n            return ScenarioService.checkForCrmCodeValidation(crmCode, 7)\n        }\n        return true\n    }\n\n    static getValidTrimmedCrmCode(crmCode) {\n        if (crmCode) {\n            let crmCodeArr = crmCode ? crmCode.split('>') : [];\n            crmCodeArr.map(code => code.trim())\n            return crmCodeArr.join('>')\n        }\n        return \"\"\n    }\n\n    static getNotesAsPerCharacterConstraint(notes) {\n\n        if (notes && notes.length > 300) {\n            notes = notes.slice(notes.length - 300, notes.length)\n            notes = notes.slice(notes.indexOf('>') + 1)\n        }\n        return notes\n\n    }\n\n    static isAutoScenarioStepFlow(stepData, isProspectNumber) {\n        if (stepData) {\n            let stepType = \"\";\n            if (\n                stepData &&\n                stepData.instruction\n            ) {\n                stepType = stepData.instruction.toLowerCase();\n            }\n            const tagRule =\n                stepData &&\n                    stepData.tagRule != null &&\n                    stepData.tagRule !== \"null\" &&\n                    stepData.tagRule &&\n                    stepData.tagRule !== \"\"\n                    ? stepData.tagRule.toLowerCase()\n                    : null;\n            if (\n                (stepType === \"system check\" ||\n                    stepType === \"system information\" ||\n                    stepType === \"system check & information\") && !isProspectNumber\n            ) {\n                if (\n                    tagRule !== \"select a tagrule\" &&\n                    tagRule !== \"tagrule not found\" &&\n                    tagRule != null\n                ) {\n                    // DO AUTO FLOW\n                    return true;\n                } else if (stepType === \"system information\") {\n                    // DO AUTO FLOW\n                    // Special Case as system Information does not has tag rule by design.\n                    return true;\n                } else {\n                    // DO MANUAL FLOW\n                    return false;\n                }\n            } else {\n                // DO MANUAL FLOW\n                return false;\n            }\n        }\n        return false;\n    }\n\n    static getScenarioIdFromScenarioDescLink(linkHref) {\n        const linkPartsArr = linkHref.split('/scenario/');\n        if (linkPartsArr.length > 1) {\n            return linkHref.split('/scenario/')[1].split('?')[0];\n        }\n        return null;\n    }\n    static getFeatureNameFromScenarioDescription(linkHref) {\n        const linkPartsArr = linkHref.split('/feature/');\n        if (linkPartsArr.length > 1) {\n            let featurePart = linkHref.split('/feature/')[1].split('?')[0];\n            featurePart = decodeURIComponent(featurePart)\n            if (featurePart.indexOf('|') !== -1) {\n                return featurePart.split('|')[0]\n            }\n            else {\n                return linkHref.split('/feature/')[1].split('?')[0];\n            }\n        }\n        return null;\n    }\n\n    static getProvConfirmParamName(nextStepData) {\n        return `INPUT_PARAM-PROVISIONING-APPROVED-FOR-${nextStepData.tagRule}`;\n    }\n\n    static isProvisioningConfirmation(choiceData, nextStepData) {\n        const instructions = ['System Check & Information', 'System Check']\n        if ((choiceData && choiceData['promptRequired'] && choiceData['promptText'] && choiceData['promptText'].trim() !== \"\")) {\n            if (nextStepData && nextStepData.instruction &&\n                instructions.includes(nextStepData.instruction) &&\n                nextStepData.tagRule) {\n\n                return true\n            }\n            return false\n        }\n        return false\n    }\n}\n\nexport default ScenarioService;\n"]},"metadata":{},"sourceType":"module"}