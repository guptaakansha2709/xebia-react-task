{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/tasks/src/components/home/product-list-page.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { fetchTableListdata as _fetchTableListdata } from '../../actions/product-list.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './product-list.style';\nimport { MenuItem, FilledInput, Select, FormControl, Grid, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\n\nvar ProductListPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductListPage, _Component);\n\n  function ProductListPage(props) {\n    var _this;\n\n    _classCallCheck(this, ProductListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductListPage).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        searchInput: event.target.value\n      }, function () {\n        return _this.globalSearch();\n      });\n    };\n\n    _this.globalSearch = function () {\n      var searchInput = _this.state.searchInput;\n\n      var filteredData = _this.props.productListApiResponse.filter(function (value) {\n        return value.name.toLowerCase().includes(searchInput.toLowerCase()).includes(searchInput.toLowerCase());\n      });\n\n      _this.props.handleSetData(filteredData.length > 0 && filteredData || searchInput ? filteredData : _this.props.data);\n    };\n\n    _this.state = {\n      filteredData: [],\n      searchInput: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ProductListPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchTableListdata();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var keys = ['Name', 'gravity', 'population', 'terrain', 'diameter'];\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          productListApiResponse = _this$props.productListApiResponse;\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Input, {\n        size: \"large\",\n        name: \"searchInput\",\n        value: this.state.searchInput || \"\",\n        onChange: this.handleChange,\n        label: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.tableRoot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, keys.map(function (row) {\n        return React.createElement(TableCell, {\n          className: classes.tableRoot,\n          key: row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, row);\n      }))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, productListApiResponse && productListApiResponse.length > 0 && productListApiResponse.map(function (row, index) {\n        return React.createElement(TableRow, {\n          className: classes.tableRoot,\n          key: index,\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: classes.tableRoot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, row.name), React.createElement(TableCell, {\n          className: classes.tableRoot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, row.gravity), React.createElement(TableCell, {\n          className: classes.tableRoot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, row.population), React.createElement(TableCell, {\n          className: classes.tableRoot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, row.terrain), React.createElement(TableCell, {\n          className: classes.tableRoot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, row.diameter));\n      })))))));\n    }\n  }]);\n\n  return ProductListPage;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchTableListdata: function fetchTableListdata() {\n      return dispatch(_fetchTableListdata());\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    productListApiResponse: state.productListInfo.productListApiResponse\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProductListPage));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/tasks/src/components/home/product-list-page.smart.js"],"names":["React","Component","connect","withRouter","HashRouter","Router","Route","Redirect","fetchTableListdata","withStyles","styles","MenuItem","FilledInput","Select","FormControl","Grid","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Table","TableHead","TableBody","TableRow","TableCell","ProductListPage","props","handleChange","event","setState","searchInput","target","value","globalSearch","state","filteredData","productListApiResponse","filter","name","toLowerCase","includes","handleSetData","length","data","keys","classes","tableRoot","map","row","index","gravity","population","terrain","diameter","mapDispatchToProps","dispatch","mapStateToProps","productListInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router'\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { fetchTableListdata } from '../../actions/product-list.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './product-list.style';\nimport { MenuItem, FilledInput, Select, FormControl, Grid, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\n\nclass ProductListPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filteredData: [],\n            searchInput: \"\"\n        };\n    }\n    componentDidMount() {\n        this.props.fetchTableListdata();\n    }\n    handleChange = event => {\n        this.setState({ searchInput: event.target.value }, () =>\n            this.globalSearch()\n        );\n    };\n    globalSearch = () => {\n        let { searchInput } = this.state;\n        let filteredData = this.props.productListApiResponse.filter(value => {\n            return (\n                value.name.toLowerCase().includes(searchInput.toLowerCase())\n                    .includes(searchInput.toLowerCase())\n            );\n        });\n        this.props.handleSetData(\n            (filteredData.length > 0 && filteredData) || searchInput\n                ? filteredData\n                : this.props.data\n        );\n    };\n\n    render() {\n        const keys = ['Name', 'gravity', 'population', 'terrain', 'diameter'];\n        const { classes, productListApiResponse } = this.props;\n\n        return (\n\n            <Grid container spacing={8}>\n                <Grid item xs={12}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <Input\n                                size=\"large\"\n                                name=\"searchInput\"\n                                value={this.state.searchInput || \"\"}\n                                onChange={this.handleChange}\n                                label=\"Search\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Table className={classes.tableRoot}>\n                                <TableHead>\n                                    <TableRow>\n                                        {keys.map(row => <TableCell className={classes.tableRoot} key={row}>{row}</TableCell>)}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n\n\n                                    {productListApiResponse && productListApiResponse.length > 0 && productListApiResponse.map((row, index) =>\n                                        <TableRow className={classes.tableRoot} key={index} align=\"left\">\n                                            <TableCell className={classes.tableRoot}>\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell className={classes.tableRoot}>\n                                                {row.gravity}\n                                            </TableCell>\n                                            <TableCell className={classes.tableRoot}>\n                                                {row.population}\n                                            </TableCell>\n                                            <TableCell className={classes.tableRoot}>\n                                                {row.terrain}\n                                            </TableCell>\n                                            <TableCell className={classes.tableRoot}>\n                                                {row.diameter}\n                                            </TableCell>\n\n                                        </TableRow>)}\n\n                                </TableBody>\n                            </Table>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n\n    fetchTableListdata: () => dispatch(fetchTableListdata()),\n});\nconst mapStateToProps = state => {\n    return {\n        productListApiResponse: state.productListInfo.productListApiResponse\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProductListPage));"]},"metadata":{},"sourceType":"module"}