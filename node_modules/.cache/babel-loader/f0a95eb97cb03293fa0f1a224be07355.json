{"ast":null,"code":"import { PaymentDetailsActionType } from \"../actiontype/payment-details-card.actiontype\";\nimport PaymentDetailsCardService from '../services/payment-details-card.service';\nimport { hideCardLoader, showCardLoader } from '../actions/app.action';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { openSnackbarRequest } from './snackbar.action';\nimport { showLoader, hideLoader } from '../actions/app.action';\nimport MultipleTaggingService from '../services/multiple-tagging.service';\nimport { tagFTRRequest } from './ftr.action';\nimport DisabledTaggingStatus from '../constants/disabled-tagging.enum';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nvar snackbarMessage = {};\nexport var fetchPaymentDetailsCardData = function fetchPaymentDetailsCardData(paymentDetails) {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (state && state.PaymentDetailsCardData && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent) {\n      dispatch(PaymentDetailsApiSuccess(state.PaymentDetailsCardData.PaymentDetailsCardDataResponse));\n      return;\n    }\n\n    var snackbarMessage = {};\n    dispatch(PaymentDetailsApiLoading()); // dispatch(showCardLoader());\n\n    PaymentDetailsCardService.getPaymentDetails().then(function (response) {\n      // dispatch(hideCardLoader());\n      if (response && response.data && response.data.result) {\n        dispatch(PaymentDetailsApiSuccess(response.data.result));\n        dispatch(setPaymentDetailsCardLinksData(response.data.result.cardLinks));\n      } else {\n        snackbarMessage = SnackbarMessages.PAYMENT_DETAILS_NO_DATA;\n        dispatch(openSnackbarRequest(null, snackbarMessage));\n      }\n    }, function (error) {\n      // dispatch(hideCardLoader());\n      dispatch(PaymentDetailsApiFailure(error));\n    });\n  };\n};\n\nvar setPaymentDetailsCardLinksData = function setPaymentDetailsCardLinksData(data) {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (state && state.PaymentDetailsCardData && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardLinks) {\n      var cardLinksObj = state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardLinks;\n      var scenarioCardLinksObj = MultipleTaggingService.getCardLinksScenarioType(cardLinksObj);\n      dispatch(setHandsetcardLinksDataSuccess(scenarioCardLinksObj));\n    }\n  };\n};\n\nfunction setHandsetcardLinksDataSuccess(response) {\n  return {\n    type: PaymentDetailsActionType.SET_PAYMENT_SCENARIO_CARD_LINKS,\n    payload: response\n  };\n}\n\nfunction PaymentDetailsApiLoading() {\n  return {\n    type: PaymentDetailsActionType.PAYMENT_DETAILS_CARD_REQUEST\n  };\n}\n\nfunction PaymentDetailsApiSuccess(response) {\n  return {\n    type: PaymentDetailsActionType.PAYMENT_DETAILS_CARD_SUCCESS,\n    payload: response\n  };\n}\n\nfunction PaymentDetailsApiFailure(error) {\n  return {\n    type: PaymentDetailsActionType.PAYMENT_DETAILS_CARD_FAILURE,\n    payload: error\n  };\n}\n\nexport var addSelectedPaymentObj = function addSelectedPaymentObj(paymentHistoryObj) {\n  return {\n    type: PaymentDetailsActionType.ADD_PAYMENT_HISTORY_OBJ,\n    payload: paymentHistoryObj\n  };\n};\nexport var removeSelectedPaymentObj = function removeSelectedPaymentObj(paymentHistoryObj) {\n  return {\n    type: PaymentDetailsActionType.REMOVE_PAYMENT_HISTORY_OBJ,\n    payload: paymentHistoryObj\n  };\n};\nexport var submitEmailPaymentHistory = function submitEmailPaymentHistory() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var selectedPaymentHistoryDetailArr = state.PaymentDetailsCardData.selectedPaymentHistoryDetail;\n    var crmCoding = state.PaymentDetailsCardData && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent.silentCrmCoding ? state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent.silentCrmCoding : null;\n    var reqData = {\n      notes: CardLinkConstant.SEND_INVOICE_PAYMENT_DETAILS,\n      tagging: crmCoding\n    };\n    dispatch(submitEmailPaymentHistoryDialogApiLoading());\n    dispatch(showLoader());\n    PaymentDetailsCardService.submitPaymentHistorySmsApi(selectedPaymentHistoryDetailArr).then(function (response) {\n      dispatch(hideLoader());\n\n      if (response && response.data && response.data.result && response.data.result.mail_sent_status) {\n        dispatch(submitEmailPaymentHistoryDialogApiSuccess(response.data.result.mail_sent_status));\n        dispatch(tagFTRRequest(reqData, DisabledTaggingStatus.SEND_INVOICE_FTR_TAGGING));\n      }\n    }, function (error) {\n      dispatch(hideLoader());\n      dispatch(submitEmailPaymentHistoryDialogApiFailure(error));\n      dispatch(tagFTRRequest(reqData, DisabledTaggingStatus.SEND_INVOICE_FTR_TAGGING));\n\n      if (error['response'] && error['response']['data'] && error['response']['data']['error']) {\n        snackbarMessage = error['response']['data']['error'];\n      } else {\n        snackbarMessage = SnackbarMessages.DEFAULT_ERROR_MSG;\n      }\n\n      dispatch(openSnackbarRequest(null, snackbarMessage));\n    });\n  };\n};\n\nfunction submitEmailPaymentHistoryDialogApiLoading() {\n  return {\n    type: PaymentDetailsActionType.SUBMIT_PAYMENT_EMAIL_REQUEST\n  };\n}\n\nfunction submitEmailPaymentHistoryDialogApiSuccess(response) {\n  return {\n    type: PaymentDetailsActionType.SUBMIT_PAYMENT_EMAIL_SUCCESS,\n    payload: response\n  };\n}\n\nfunction submitEmailPaymentHistoryDialogApiFailure(error) {\n  return {\n    type: PaymentDetailsActionType.SUBMIT_SMS_PAYMENT_EMAIL_FAILURE,\n    payload: error\n  };\n}","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/actions/payment-details-card.action.js"],"names":["PaymentDetailsActionType","PaymentDetailsCardService","hideCardLoader","showCardLoader","SnackbarMessages","openSnackbarRequest","showLoader","hideLoader","MultipleTaggingService","tagFTRRequest","DisabledTaggingStatus","CardLinkConstant","snackbarMessage","fetchPaymentDetailsCardData","paymentDetails","dispatch","getState","state","PaymentDetailsCardData","PaymentDetailsCardDataResponse","cardContent","PaymentDetailsApiSuccess","PaymentDetailsApiLoading","getPaymentDetails","then","response","data","result","setPaymentDetailsCardLinksData","cardLinks","PAYMENT_DETAILS_NO_DATA","error","PaymentDetailsApiFailure","cardLinksObj","scenarioCardLinksObj","getCardLinksScenarioType","setHandsetcardLinksDataSuccess","type","SET_PAYMENT_SCENARIO_CARD_LINKS","payload","PAYMENT_DETAILS_CARD_REQUEST","PAYMENT_DETAILS_CARD_SUCCESS","PAYMENT_DETAILS_CARD_FAILURE","addSelectedPaymentObj","paymentHistoryObj","ADD_PAYMENT_HISTORY_OBJ","removeSelectedPaymentObj","REMOVE_PAYMENT_HISTORY_OBJ","submitEmailPaymentHistory","selectedPaymentHistoryDetailArr","selectedPaymentHistoryDetail","crmCoding","silentCrmCoding","reqData","notes","SEND_INVOICE_PAYMENT_DETAILS","tagging","submitEmailPaymentHistoryDialogApiLoading","submitPaymentHistorySmsApi","mail_sent_status","submitEmailPaymentHistoryDialogApiSuccess","SEND_INVOICE_FTR_TAGGING","submitEmailPaymentHistoryDialogApiFailure","DEFAULT_ERROR_MSG","SUBMIT_PAYMENT_EMAIL_REQUEST","SUBMIT_PAYMENT_EMAIL_SUCCESS","SUBMIT_SMS_PAYMENT_EMAIL_FAILURE"],"mappings":"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","sourcesContent":["import { PaymentDetailsActionType } from \"../actiontype/payment-details-card.actiontype\";\nimport PaymentDetailsCardService from '../services/payment-details-card.service';\nimport { hideCardLoader, showCardLoader } from '../actions/app.action';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { openSnackbarRequest } from './snackbar.action';\nimport { showLoader, hideLoader } from '../actions/app.action';\nimport MultipleTaggingService from '../services/multiple-tagging.service';\nimport { tagFTRRequest } from './ftr.action';\nimport DisabledTaggingStatus from '../constants/disabled-tagging.enum';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nlet snackbarMessage = {}\nexport const fetchPaymentDetailsCardData = paymentDetails => (dispatch, getState) => {\n    const state = getState();\n    if (state && state.PaymentDetailsCardData && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent) {\n        dispatch(PaymentDetailsApiSuccess(state.PaymentDetailsCardData.PaymentDetailsCardDataResponse));\n        return;\n    }\n    let snackbarMessage = {}\n    dispatch(PaymentDetailsApiLoading());\n    // dispatch(showCardLoader());\n    PaymentDetailsCardService.getPaymentDetails().then(\n        response => {\n            // dispatch(hideCardLoader());\n            if (response && response.data && response.data.result) {\n                dispatch(PaymentDetailsApiSuccess(response.data.result));\n                dispatch(setPaymentDetailsCardLinksData(response.data.result.cardLinks));\n            }\n            else {\n                snackbarMessage = SnackbarMessages.PAYMENT_DETAILS_NO_DATA;\n                dispatch(openSnackbarRequest(null, snackbarMessage));\n            }\n        },\n        error => {\n            // dispatch(hideCardLoader());\n            dispatch(PaymentDetailsApiFailure(error));\n        }\n    );\n}\nconst setPaymentDetailsCardLinksData = data => (dispatch, getState) => {\n    const state = getState();\n    if (state && state.PaymentDetailsCardData && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardLinks) {\n        const cardLinksObj = state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardLinks;\n        const scenarioCardLinksObj = MultipleTaggingService.getCardLinksScenarioType(cardLinksObj);\n        dispatch(setHandsetcardLinksDataSuccess(scenarioCardLinksObj));\n    }\n\n}\nfunction setHandsetcardLinksDataSuccess(response) {\n    return {\n        type: PaymentDetailsActionType.SET_PAYMENT_SCENARIO_CARD_LINKS,\n        payload: response\n    }\n}\nfunction PaymentDetailsApiLoading() {\n    return {\n        type: PaymentDetailsActionType.PAYMENT_DETAILS_CARD_REQUEST\n    }\n}\nfunction PaymentDetailsApiSuccess(response) {\n    return {\n        type: PaymentDetailsActionType.PAYMENT_DETAILS_CARD_SUCCESS,\n        payload: response\n    }\n}\nfunction PaymentDetailsApiFailure(error) {\n    return {\n        type: PaymentDetailsActionType.PAYMENT_DETAILS_CARD_FAILURE,\n        payload: error\n    }\n}\nexport const addSelectedPaymentObj = paymentHistoryObj => (\n    {\n        type: PaymentDetailsActionType.ADD_PAYMENT_HISTORY_OBJ,\n        payload: paymentHistoryObj\n    }\n)\n\nexport const removeSelectedPaymentObj = paymentHistoryObj => (\n    {\n        type: PaymentDetailsActionType.REMOVE_PAYMENT_HISTORY_OBJ,\n        payload: paymentHistoryObj\n    }\n)\nexport const submitEmailPaymentHistory = () => (dispatch, getState) => {\n    const state = getState();\n\n    const selectedPaymentHistoryDetailArr = state.PaymentDetailsCardData.selectedPaymentHistoryDetail;\n    const crmCoding = state.PaymentDetailsCardData && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent.silentCrmCoding ? state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent.silentCrmCoding : null;\n    const reqData = {\n        notes: CardLinkConstant.SEND_INVOICE_PAYMENT_DETAILS,\n        tagging: crmCoding\n    }\n    dispatch(submitEmailPaymentHistoryDialogApiLoading());\n    dispatch(showLoader());\n    PaymentDetailsCardService.submitPaymentHistorySmsApi(selectedPaymentHistoryDetailArr).then(\n        response => {\n            dispatch(hideLoader());\n            if (response && response.data && response.data.result && response.data.result.mail_sent_status) {\n                dispatch(submitEmailPaymentHistoryDialogApiSuccess(response.data.result.mail_sent_status));\n\n                dispatch(tagFTRRequest(reqData, DisabledTaggingStatus.SEND_INVOICE_FTR_TAGGING));\n            }\n        },\n        error => {\n            dispatch(hideLoader());\n            dispatch(submitEmailPaymentHistoryDialogApiFailure(error));\n            dispatch(tagFTRRequest(reqData, DisabledTaggingStatus.SEND_INVOICE_FTR_TAGGING));\n            if (error['response'] && error['response']['data'] && error['response']['data']['error']) {\n                snackbarMessage = error['response']['data']['error'];\n            }\n            else {\n                snackbarMessage = SnackbarMessages.DEFAULT_ERROR_MSG;\n            }\n            dispatch(openSnackbarRequest(null, snackbarMessage));\n        }\n    );\n}\nfunction submitEmailPaymentHistoryDialogApiLoading() { return { type: PaymentDetailsActionType.SUBMIT_PAYMENT_EMAIL_REQUEST } }\nfunction submitEmailPaymentHistoryDialogApiSuccess(response) { return { type: PaymentDetailsActionType.SUBMIT_PAYMENT_EMAIL_SUCCESS, payload: response } }\nfunction submitEmailPaymentHistoryDialogApiFailure(error) { return { type: PaymentDetailsActionType.SUBMIT_SMS_PAYMENT_EMAIL_FAILURE, payload: error } }"]},"metadata":{},"sourceType":"module"}