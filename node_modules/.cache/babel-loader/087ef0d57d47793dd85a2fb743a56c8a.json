{"ast":null,"code":"import { tagFTRRequest } from './ftr.action';\nimport CookieManagerService from '../services/cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport { fetchDFFRequest } from './dff.action';\nimport { showLoader, hideLoader } from './app.action';\nimport { openSnackbarRequest } from './snackbar.action';\nimport DNDService from '../services/dnd.service';\nimport { cardLinksHandler } from './card-links.action';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nimport ScenarioService from '../services/scenario.service';\nexport var planNameEditHandler = function planNameEditHandler() {\n  return function (dispatch) {\n    dispatch(getPlanInfoCardLink(CardLinkConstant.PLAN_NAME_CARD, CardLinkConstant.SCENARIO_TYPE));\n  };\n};\nexport var editStatusHandler = function editStatusHandler() {\n  return function (dispatch) {\n    dispatch(getPlanInfoCardLink(CardLinkConstant.NUMBER_STAUS_CARD, CardLinkConstant.SCENARIO_TYPE));\n  };\n};\nexport var getPlanInfoCardLink = function getPlanInfoCardLink(key, type) {\n  return function (dispatch, getState) {\n    var state = getState();\n    var customerPlanInfo = state.customerInfo.customerPlanInfo;\n    var cardLinks = customerPlanInfo && customerPlanInfo[key] && customerPlanInfo[key]['cardLinks'] ? customerPlanInfo[key]['cardLinks'] : null;\n    dispatch(cardLinksHandler(cardLinks, type, key));\n  };\n};\nexport var activateDNDRequest = function activateDNDRequest(categories) {\n  return function (dispatch) {\n    var reqData = {\n      categories: categories\n    };\n    dispatch(showLoader());\n    DNDService.activateDNDRequest(reqData).then(function (response) {\n      dispatch(hideLoader());\n\n      if (response && response.data && response.data.result && response.data.result.toLowerCase() === 'success') {\n        dispatch(getPlanInfoCardLink('DND', CardLinkConstant.CRM_CODE_TYPE));\n      } else {\n        dispatch(openSnackbarRequest(null));\n      }\n    }, function (error) {\n      dispatch(hideLoader());\n      dispatch(openSnackbarRequest(error));\n    });\n  };\n};\nexport var tagFTRHandler = function tagFTRHandler(key, crmCode) {\n  return function (dispatch) {\n    var reqData = {\n      notes: key,\n      tagging: crmCode\n    };\n    dispatch(tagFTRRequest(reqData));\n  };\n};\nexport var dffHandler = function dffHandler(key, crmCode) {\n  return function (dispatch) {\n    var reqData = {\n      transactionId: CookieManagerService.getItem(AppConstant.CORRELATION_ID),\n      subType: ''\n    };\n    var notes = '';\n    reqData.subType = ScenarioService.getSubtype(crmCode);\n    dispatch(fetchDFFRequest(reqData, notes));\n  };\n};\nexport var myAirtelAppIconClickHandler = function myAirtelAppIconClickHandler() {\n  return function (dispatch) {\n    dispatch(getPlanInfoCardLink(CardLinkConstant.MYAIRTELAPP_INFO_CARD, CardLinkConstant.SELFCARE_SMS));\n  };\n};","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/actions/sub-header.action.js"],"names":["tagFTRRequest","CookieManagerService","AppConstant","fetchDFFRequest","showLoader","hideLoader","openSnackbarRequest","DNDService","cardLinksHandler","CardLinkConstant","ScenarioService","planNameEditHandler","dispatch","getPlanInfoCardLink","PLAN_NAME_CARD","SCENARIO_TYPE","editStatusHandler","NUMBER_STAUS_CARD","key","type","getState","state","customerPlanInfo","customerInfo","cardLinks","activateDNDRequest","categories","reqData","then","response","data","result","toLowerCase","CRM_CODE_TYPE","error","tagFTRHandler","crmCode","notes","tagging","dffHandler","transactionId","getItem","CORRELATION_ID","subType","getSubtype","myAirtelAppIconClickHandler","MYAIRTELAPP_INFO_CARD","SELFCARE_SMS"],"mappings":"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","sourcesContent":["import { tagFTRRequest } from './ftr.action';\nimport CookieManagerService from '../services/cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport { fetchDFFRequest } from './dff.action';\nimport { showLoader, hideLoader } from './app.action';\nimport { openSnackbarRequest } from './snackbar.action';\nimport DNDService from '../services/dnd.service';\nimport { cardLinksHandler } from './card-links.action';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nimport ScenarioService from '../services/scenario.service';\n\nexport const planNameEditHandler = () => dispatch => {\n    dispatch(getPlanInfoCardLink(CardLinkConstant.PLAN_NAME_CARD, CardLinkConstant.SCENARIO_TYPE));\n}\n\nexport const editStatusHandler = () => dispatch => {\n    dispatch(getPlanInfoCardLink(CardLinkConstant.NUMBER_STAUS_CARD, CardLinkConstant.SCENARIO_TYPE));\n}\n\nexport const getPlanInfoCardLink = (key, type) => (dispatch, getState) => {\n    const state = getState();\n    const customerPlanInfo = state.customerInfo.customerPlanInfo;\n\n    const cardLinks = customerPlanInfo && customerPlanInfo[key] && customerPlanInfo[key]['cardLinks'] ? customerPlanInfo[key]['cardLinks'] : null;\n    dispatch(cardLinksHandler(cardLinks, type, key));\n}\n\nexport const activateDNDRequest = categories => dispatch => {\n    const reqData = {\n        categories\n    }\n    dispatch(showLoader());\n    DNDService.activateDNDRequest(reqData).then(\n        response => {\n            dispatch(hideLoader());\n            if (response && response.data && response.data.result && response.data.result.toLowerCase() === 'success') {\n                dispatch(getPlanInfoCardLink('DND', CardLinkConstant.CRM_CODE_TYPE));\n            } else {\n                dispatch(openSnackbarRequest(null));\n            }\n        },\n        error => {\n            dispatch(hideLoader());\n            dispatch(openSnackbarRequest(error));\n        }\n    );\n};\n\nexport const tagFTRHandler = (key, crmCode) => (dispatch) => {\n    const reqData = {\n        notes: key,\n        tagging: crmCode\n    }\n    dispatch(tagFTRRequest(reqData));\n}\n\n\nexport const dffHandler = (key, crmCode) => (dispatch) => {\n    const reqData = {\n        transactionId: CookieManagerService.getItem(AppConstant.CORRELATION_ID),\n        subType: ''\n    }\n    const notes = '';\n    reqData.subType = ScenarioService.getSubtype(crmCode);\n    dispatch(fetchDFFRequest(reqData, notes));\n}\n\nexport const myAirtelAppIconClickHandler = () => dispatch => {\n    dispatch(getPlanInfoCardLink(CardLinkConstant.MYAIRTELAPP_INFO_CARD, CardLinkConstant.SELFCARE_SMS));\n}"]},"metadata":{},"sourceType":"module"}