{"ast":null,"code":"import PredictionService from \"../services/prediction.service\";\nimport { openSnackbarRequest } from \"./snackbar.action\";\nimport { PredictionActionType } from \"../actiontype/prediction.actiontype\";\nimport CookieManagerService from \"../services/cookie.service\";\nimport { AppConstant } from \"../constants/app.constant\";\nimport DisabledTaggingStatus from \"../constants/disabled-tagging.enum\";\nimport { tagFTRRequest } from \"./ftr.action\";\nimport { fetchDFFRequest } from \"./dff.action\";\nimport { updateCurrentScenarioId } from \"./scenario.action\";\nimport UtilService from \"../services/util.service\";\nexport var predictionFoundFlag = function predictionFoundFlag(payload) {\n  return {\n    type: PredictionActionType.PREDICTION_FOUND_FLAG,\n    payload: payload\n  };\n};\nexport var displayPredictionWindowFlag = function displayPredictionWindowFlag(payload) {\n  return {\n    type: PredictionActionType.DISPLAY_PREDICTION_WINDOW_FLAG,\n    payload: payload\n  };\n};\nexport var updatePredictionStatus = function updatePredictionStatus(payload) {\n  return {\n    type: PredictionActionType.UPDATE_PREDICTION_STATUS,\n    payload: payload\n  };\n};\nexport var displayP1Description = function displayP1Description(payload) {\n  return {\n    type: PredictionActionType.DISPLAY_P1_DESCRIPTION,\n    payload: payload\n  };\n};\nexport var displayP2Description = function displayP2Description(payload) {\n  return {\n    type: PredictionActionType.DISPLAY_P2_DESCRIPTION,\n    payload: payload\n  };\n};\nexport var updateP1Scenario = function updateP1Scenario(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P1_SCENARIO,\n    payload: payload\n  };\n};\nexport var updateP2Scenario = function updateP2Scenario(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P2_SCENARIO,\n    payload: payload\n  };\n};\nexport var updateP3Scenario = function updateP3Scenario(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P3_SCENARIO,\n    payload: payload\n  };\n};\nexport var updateP1CRMCode = function updateP1CRMCode(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P1_CRM_CODE,\n    payload: payload\n  };\n};\nexport var updateP2CRMCode = function updateP2CRMCode(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P2_CRM_CODE,\n    payload: payload\n  };\n};\nexport var updateP1ScenarioDescription = function updateP1ScenarioDescription(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P1_SCENARIO_DESCRIPTION,\n    payload: payload\n  };\n};\nexport var updateP2ScenarioDescription = function updateP2ScenarioDescription(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P2_SCENARIO_DESCRIPTION,\n    payload: payload\n  };\n};\nexport var updateP3ScenarioDescription = function updateP3ScenarioDescription(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P3_SCENARIO_DESCRIPTION,\n    payload: payload\n  };\n};\nexport var updateP1ScenarioChoice = function updateP1ScenarioChoice(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P1_SCENARIO_CHOICE,\n    payload: payload\n  };\n};\nexport var updateP2ScenarioChoice = function updateP2ScenarioChoice(payload) {\n  return {\n    type: PredictionActionType.UPDATE_P2_SCENARIO_CHOICE,\n    payload: payload\n  };\n};\nexport var updateSuggestionChoice = function updateSuggestionChoice(payload) {\n  return {\n    type: PredictionActionType.UPDATE_SUGGESTION_CHOICE,\n    payload: payload\n  };\n};\nexport var updateDisplaySuggestionFlag = function updateDisplaySuggestionFlag(payload) {\n  return {\n    type: PredictionActionType.DISPLAY_SUGGESTION_FLAG,\n    payload: payload\n  };\n};\nexport var updatePredictionFTRResponse = function updatePredictionFTRResponse(payload) {\n  return {\n    type: PredictionActionType.UPDATE_PREDICTION_FTR_RESPONSE,\n    payload: payload\n  };\n};\nexport var updatePredictionSRResponse = function updatePredictionSRResponse(payload) {\n  return {\n    type: PredictionActionType.UPDATE_PREDICTION_SR_RESPONSE,\n    payload: payload\n  };\n};\nexport var updatePredictionDFFResponse = function updatePredictionDFFResponse(payload) {\n  return {\n    type: PredictionActionType.UPDATE_PREDICTION_DFF_RESPONSE,\n    payload: payload\n  };\n};\nexport var updatePredictionSuggestionTitle = function updatePredictionSuggestionTitle(payload) {\n  return {\n    type: PredictionActionType.UPDATE_PREDICTION_SUGGESTION_TITLE,\n    payload: payload\n  };\n};\nexport var updatePredictionTagScenario = function updatePredictionTagScenario(payload) {\n  return {\n    type: PredictionActionType.UPDATE_PREDICTION_TAG_SCENARIO,\n    payload: payload\n  };\n};\nexport var fetchPredictionRequest = function fetchPredictionRequest() {\n  return function (dispatch) {\n    PredictionService.fetchPredictionRequest().then(function (response) {\n      if (response && response.data && response.data.result) {\n        var result = response.data.result;\n        dispatch(setPredictionData(response.data.result));\n        var predictionStatus = result && result[\"statusCd\"] ? result[\"statusCd\"] : \"\";\n        dispatch(updatePredictionStatus(predictionStatus));\n\n        if (result && result[\"resultList\"] && result[\"resultList\"].length) {\n          dispatch(predictionFoundFlag(true));\n          dispatch(managePredictionData(result[\"resultList\"]));\n        } else {\n          dispatch(predictionFoundFlag(false));\n          dispatch(displayPredictionWindowFlag(false));\n        }\n      } else {\n        dispatch(setPredictionData(null));\n      }\n    }, function (error) {\n      dispatch(setPredictionData(null));\n      dispatch(openSnackbarRequest(error));\n    });\n  };\n}; // export const fetchPredictionRequest = () => (dispatch, getState) => {\n//     const state = getState();\n//     const result = state.prediction.predictionData;\n//     console.log(result);\n//     if (\n//         result &&\n//         result[\"resultList\"] &&\n//         result[\"resultList\"].length\n//     ) {\n//         dispatch(predictionFoundFlag(true));\n//         UtilService.hidePageScroll();\n//         dispatch(managePredictionData(result[\"resultList\"]));\n//     } else {\n//         dispatch(predictionFoundFlag(false));\n//         dispatch(displayPredictionWindowFlag(false));\n//     }\n//     const predictionStatus = result && result[\"statusCd\"] ? result[\"statusCd\"] : \"\";\n//     dispatch(updatePredictionStatus(predictionStatus));\n// };\n\nexport var managePredictionData = function managePredictionData(predictionData) {\n  return function (dispatch, getState) {\n    var predictionScenarioP1 = null;\n    var predictionScenarioP2 = null;\n    var predictionScenarioP3 = null;\n\n    for (var a = 0; a < predictionData.length; a++) {\n      if (predictionData[a][\"priority\"] === \"P1\") {\n        predictionScenarioP1 = predictionData[a];\n        dispatch(displayP1Description(true));\n        dispatch(updateP1Scenario(predictionScenarioP1));\n        var predictionScenarioP1CRMCode = predictionScenarioP1[\"crmCode\"] || \"\";\n        dispatch(updateP1CRMCode(predictionScenarioP1CRMCode));\n\n        if (predictionScenarioP1 && predictionScenarioP1[\"additionalInfo\"] && predictionScenarioP1[\"additionalInfo\"][\"stepDescription\"]) {\n          var predictionScenarioP1Desc = predictionScenarioP1[\"additionalInfo\"][\"stepDescription\"];\n          dispatch(updateP1ScenarioDescription(predictionScenarioP1Desc));\n        }\n\n        if (predictionScenarioP1 && predictionScenarioP1[\"nextStepForFailedCheckForPrediction\"] && predictionScenarioP1[\"nextStepForFailedCheckForPrediction\"][\"choiceList\"] && predictionScenarioP1[\"nextStepForFailedCheckForPrediction\"][\"choiceList\"].length) {\n          var predictionScenarioP1ChoiceList = predictionScenarioP1[\"nextStepForFailedCheckForPrediction\"][\"choiceList\"];\n          dispatch(updateP1ScenarioChoice(predictionScenarioP1ChoiceList));\n        }\n      } else if (predictionData[a][\"priority\"] === \"P2\") {\n        predictionScenarioP2 = predictionData[a];\n        dispatch(displayP2Description(true));\n        dispatch(updateP2Scenario(predictionScenarioP1));\n        var predictionScenarioP2CRMCode = predictionScenarioP2[\"crmCode\"] || \"\";\n        dispatch(updateP1CRMCode(predictionScenarioP2CRMCode));\n\n        if (predictionScenarioP2 && predictionScenarioP2[\"additionalInfo\"] && predictionScenarioP2[\"additionalInfo\"][\"stepDescription\"]) {\n          var predictionScenarioP2Desc = predictionScenarioP2[\"additionalInfo\"][\"stepDescription\"];\n          dispatch(updateP2ScenarioDescription(predictionScenarioP2Desc));\n        }\n      } else if (predictionData[a][\"priority\"] === \"P3\") {\n        predictionScenarioP3 = predictionData[a];\n        dispatch(updateP3Scenario(predictionScenarioP3));\n\n        if (predictionScenarioP3 && predictionScenarioP3[\"additionalInfo\"] && predictionScenarioP3[\"additionalInfo\"][\"stepDescription\"]) {\n          var predictionScenarioP3Desc = predictionScenarioP3[\"additionalInfo\"][\"stepDescription\"];\n          dispatch(updateP3ScenarioDescription(predictionScenarioP3Desc));\n        }\n\n        if (predictionScenarioP3 && predictionScenarioP3[\"nextStepForFailedCheckForPrediction\"] && predictionScenarioP3[\"nextStepForFailedCheckForPrediction\"][\"choiceList\"]) {\n          var suggestionChoiceBtnList = predictionScenarioP3[\"nextStepForFailedCheckForPrediction\"][\"choiceList\"];\n          dispatch(updateSuggestionChoice(suggestionChoiceBtnList));\n        }\n      }\n    }\n\n    if (predictionScenarioP1 || predictionScenarioP2 || predictionScenarioP3) {\n      dispatch(displayPredictionWindowFlag(true));\n    }\n\n    if (predictionScenarioP3 && !predictionScenarioP1 && !predictionScenarioP2) {\n      dispatch(updateDisplaySuggestionFlag(true)); // this.handleP3ScenarioDesc();\n    }\n  };\n};\nexport var initPrediction = function initPrediction(msisdn) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      var reqData = {\n        callingNumber: CookieManagerService.getItem(AppConstant.MSISDN)\n      };\n      PredictionService.initPredictionRequest(reqData).then(function (response) {\n        resolve();\n      }, function (error) {\n        reject();\n      });\n    });\n  };\n};\n\nfunction setPredictionData(payload) {\n  return {\n    type: PredictionActionType.FETCH_PREDICTION_SCENARIO,\n    payload: payload\n  };\n}\n\nexport var openDFFWhenOnlySRAvailable = function openDFFWhenOnlySRAvailable() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var _state$prediction = state.prediction,\n        predictionScenarioP1 = _state$prediction.predictionScenarioP1,\n        predictionScenarioP2 = _state$prediction.predictionScenarioP2,\n        predictionScenarioP1CRMCode = _state$prediction.predictionScenarioP1CRMCode,\n        predictionScenarioP2CRMCode = _state$prediction.predictionScenarioP2CRMCode;\n\n    if (predictionScenarioP1 && !predictionScenarioP2 && predictionScenarioP1CRMCode && predictionScenarioP1CRMCode.indexOf(\"SR>\") !== -1) {\n      dispatch(createSRAndFTR(predictionScenarioP1, predictionScenarioP1CRMCode, \"P1\"));\n    } else if (!predictionScenarioP1 && predictionScenarioP2 && predictionScenarioP2CRMCode && predictionScenarioP2CRMCode.indexOf(\"SR>\") !== -1) {\n      dispatch(createSRAndFTR(predictionScenarioP2, predictionScenarioP2CRMCode, \"P2\"));\n    }\n  };\n};\nexport var createSRAndFTR = function createSRAndFTR(scenarioData, crmCode, currentScenarioPriority) {\n  return function (dispatch, getState) {\n    if (crmCode) {\n      dispatch(manageDisplayPredictionScenario(currentScenarioPriority));\n\n      if (crmCode.indexOf(\"SR>\") !== -1) {\n        dispatch(predictionSRHandler(scenarioData, currentScenarioPriority));\n      } else if (crmCode.indexOf(\"FTR>\") !== -1) {\n        dispatch(predictionFTRHandler(scenarioData, currentScenarioPriority));\n      }\n    }\n  };\n};\nexport var predictionFTRHandler = function predictionFTRHandler(scenarioData, currentScenarioPriority) {\n  return function (dispatch, getState) {\n    var state = getState();\n    var prospectCircle = null;\n\n    try {\n      prospectCircle = state.customerInfo && state.customerInfo.prospectCircle ? state.customerInfo.prospectCircle : null;\n    } catch (e) {//\n    }\n\n    var reqData = {\n      notes: scenarioData.notes,\n      scenarioName: scenarioData[\"additionalInfo\"] && scenarioData[\"additionalInfo\"][\"scenario_name\"] ? scenarioData[\"additionalInfo\"][\"scenario_name\"] : \"\",\n      // smsTemplate: state.scenario.smsTemplate,\n      tagging: scenarioData.crmCode,\n      prospectNumberCircle: prospectCircle,\n      transactionId: scenarioData.transactionId\n    };\n    dispatch(tagFTRRequest(reqData, DisabledTaggingStatus.PREDICTION_FTR_TAGGING));\n  };\n};\nexport var predictionSRHandler = function predictionSRHandler(scenarioData, currentScenarioPriority) {\n  return function (dispatch, getState) {\n    var reqData = {\n      transactionId: scenarioData[\"transactionId\"],\n      subType: ''\n    };\n    var notes = scenarioData.notes;\n    var crmCode = scenarioData.crmCode;\n    reqData.subType = PredictionService.getSubtype(crmCode);\n    dispatch(updatePredictionTagScenario(scenarioData));\n    dispatch(fetchDFFRequest(reqData, notes, DisabledTaggingStatus.PREDICTION_SR_TAGGING));\n  };\n};\nexport var togglePredictionDisplay = function togglePredictionDisplay() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var displayPredictionWindow = state.prediction.displayPredictionWindow;\n    dispatch(displayPredictionWindowFlag(!displayPredictionWindow));\n\n    if (!displayPredictionWindow) {\n      UtilService.hidePageScroll();\n    } else {\n      UtilService.resetPageScroll();\n    }\n  };\n};\nexport var suggestionChoiceBtnHandler = function suggestionChoiceBtnHandler(choiceObj) {\n  return function (dispatch) {\n    dispatch(togglePredictionDisplay());\n\n    if (choiceObj[\"bookMark\"] && choiceObj[\"bookMark\"][\"scenarioId\"]) {\n      var scenarioId = choiceObj[\"bookMark\"][\"scenarioId\"];\n      dispatch(updateCurrentScenarioId(scenarioId));\n    }\n  };\n};\nexport var manageDisplayPredictionScenario = function manageDisplayPredictionScenario(priority) {\n  return function (dispatch) {\n    switch (priority) {\n      case \"P1\":\n        dispatch(displayP1Description(true));\n        dispatch(displayP2Description(false));\n        break;\n\n      case \"P2\":\n        dispatch(displayP1Description(false));\n        dispatch(displayP2Description(true));\n        break;\n\n      default:\n        break;\n    }\n  };\n};\nexport var predictionFTRResponseHandler = function predictionFTRResponseHandler(response) {\n  return function (dispatch) {\n    dispatch(updatePredictionFTRResponse(response));\n    dispatch(suggetionTitleHandler());\n  };\n};\nexport var predictionSRResponseHandler = function predictionSRResponseHandler(response) {\n  return function (dispatch) {\n    dispatch(updatePredictionSRResponse(response));\n    dispatch(suggetionTitleHandler());\n  };\n};\nexport var suggetionTitleHandler = function suggetionTitleHandler() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var predictionScenarioP3 = state.prediction.predictionScenarioP3;\n\n    if (predictionScenarioP3 && predictionScenarioP3.additionalInfo && predictionScenarioP3.additionalInfo.stepDescription) {\n      var desc = predictionScenarioP3.additionalInfo.stepDescription;\n      var suggestionTitle = desc.split(\"<br>\")[0];\n      dispatch(updatePredictionSuggestionTitle(suggestionTitle));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/actions/prediction.action.js"],"names":["PredictionService","openSnackbarRequest","PredictionActionType","CookieManagerService","AppConstant","DisabledTaggingStatus","tagFTRRequest","fetchDFFRequest","updateCurrentScenarioId","UtilService","predictionFoundFlag","payload","type","PREDICTION_FOUND_FLAG","displayPredictionWindowFlag","DISPLAY_PREDICTION_WINDOW_FLAG","updatePredictionStatus","UPDATE_PREDICTION_STATUS","displayP1Description","DISPLAY_P1_DESCRIPTION","displayP2Description","DISPLAY_P2_DESCRIPTION","updateP1Scenario","UPDATE_P1_SCENARIO","updateP2Scenario","UPDATE_P2_SCENARIO","updateP3Scenario","UPDATE_P3_SCENARIO","updateP1CRMCode","UPDATE_P1_CRM_CODE","updateP2CRMCode","UPDATE_P2_CRM_CODE","updateP1ScenarioDescription","UPDATE_P1_SCENARIO_DESCRIPTION","updateP2ScenarioDescription","UPDATE_P2_SCENARIO_DESCRIPTION","updateP3ScenarioDescription","UPDATE_P3_SCENARIO_DESCRIPTION","updateP1ScenarioChoice","UPDATE_P1_SCENARIO_CHOICE","updateP2ScenarioChoice","UPDATE_P2_SCENARIO_CHOICE","updateSuggestionChoice","UPDATE_SUGGESTION_CHOICE","updateDisplaySuggestionFlag","DISPLAY_SUGGESTION_FLAG","updatePredictionFTRResponse","UPDATE_PREDICTION_FTR_RESPONSE","updatePredictionSRResponse","UPDATE_PREDICTION_SR_RESPONSE","updatePredictionDFFResponse","UPDATE_PREDICTION_DFF_RESPONSE","updatePredictionSuggestionTitle","UPDATE_PREDICTION_SUGGESTION_TITLE","updatePredictionTagScenario","UPDATE_PREDICTION_TAG_SCENARIO","fetchPredictionRequest","dispatch","then","response","data","result","setPredictionData","predictionStatus","length","managePredictionData","error","predictionData","getState","predictionScenarioP1","predictionScenarioP2","predictionScenarioP3","a","predictionScenarioP1CRMCode","predictionScenarioP1Desc","predictionScenarioP1ChoiceList","predictionScenarioP2CRMCode","predictionScenarioP2Desc","predictionScenarioP3Desc","suggestionChoiceBtnList","initPrediction","msisdn","Promise","resolve","reject","reqData","callingNumber","getItem","MSISDN","initPredictionRequest","FETCH_PREDICTION_SCENARIO","openDFFWhenOnlySRAvailable","state","prediction","indexOf","createSRAndFTR","scenarioData","crmCode","currentScenarioPriority","manageDisplayPredictionScenario","predictionSRHandler","predictionFTRHandler","prospectCircle","customerInfo","e","notes","scenarioName","tagging","prospectNumberCircle","transactionId","PREDICTION_FTR_TAGGING","subType","getSubtype","PREDICTION_SR_TAGGING","togglePredictionDisplay","displayPredictionWindow","hidePageScroll","resetPageScroll","suggestionChoiceBtnHandler","choiceObj","scenarioId","priority","predictionFTRResponseHandler","suggetionTitleHandler","predictionSRResponseHandler","additionalInfo","stepDescription","desc","suggestionTitle","split"],"mappings":"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","sourcesContent":["import PredictionService from \"../services/prediction.service\";\nimport {\n    openSnackbarRequest\n} from \"./snackbar.action\";\nimport {\n    PredictionActionType\n} from \"../actiontype/prediction.actiontype\";\nimport CookieManagerService from \"../services/cookie.service\";\nimport {\n    AppConstant\n} from \"../constants/app.constant\";\nimport DisabledTaggingStatus from \"../constants/disabled-tagging.enum\";\nimport { tagFTRRequest } from \"./ftr.action\";\nimport { fetchDFFRequest } from \"./dff.action\";\nimport { updateCurrentScenarioId } from \"./scenario.action\";\nimport UtilService from \"../services/util.service\";\n\nexport const predictionFoundFlag = payload => ({\n    type: PredictionActionType.PREDICTION_FOUND_FLAG,\n    payload\n});\n\nexport const displayPredictionWindowFlag = payload => ({\n    type: PredictionActionType.DISPLAY_PREDICTION_WINDOW_FLAG,\n    payload\n});\n\nexport const updatePredictionStatus = payload => ({\n    type: PredictionActionType.UPDATE_PREDICTION_STATUS,\n    payload\n});\nexport const displayP1Description = payload => ({\n    type: PredictionActionType.DISPLAY_P1_DESCRIPTION,\n    payload\n});\nexport const displayP2Description = payload => ({\n    type: PredictionActionType.DISPLAY_P2_DESCRIPTION,\n    payload\n});\nexport const updateP1Scenario = payload => ({\n    type: PredictionActionType.UPDATE_P1_SCENARIO,\n    payload\n});\nexport const updateP2Scenario = payload => ({\n    type: PredictionActionType.UPDATE_P2_SCENARIO,\n    payload\n});\nexport const updateP3Scenario = payload => ({\n    type: PredictionActionType.UPDATE_P3_SCENARIO,\n    payload\n});\nexport const updateP1CRMCode = payload => ({\n    type: PredictionActionType.UPDATE_P1_CRM_CODE,\n    payload\n});\nexport const updateP2CRMCode = payload => ({\n    type: PredictionActionType.UPDATE_P2_CRM_CODE,\n    payload\n});\nexport const updateP1ScenarioDescription = payload => ({\n    type: PredictionActionType.UPDATE_P1_SCENARIO_DESCRIPTION,\n    payload\n});\nexport const updateP2ScenarioDescription = payload => ({\n    type: PredictionActionType.UPDATE_P2_SCENARIO_DESCRIPTION,\n    payload\n});\nexport const updateP3ScenarioDescription = payload => ({\n    type: PredictionActionType.UPDATE_P3_SCENARIO_DESCRIPTION,\n    payload\n});\nexport const updateP1ScenarioChoice = payload => ({\n    type: PredictionActionType.UPDATE_P1_SCENARIO_CHOICE,\n    payload\n});\nexport const updateP2ScenarioChoice = payload => ({\n    type: PredictionActionType.UPDATE_P2_SCENARIO_CHOICE,\n    payload\n});\nexport const updateSuggestionChoice = payload => ({\n    type: PredictionActionType.UPDATE_SUGGESTION_CHOICE,\n    payload\n});\nexport const updateDisplaySuggestionFlag = payload => ({\n    type: PredictionActionType.DISPLAY_SUGGESTION_FLAG,\n    payload\n});\nexport const updatePredictionFTRResponse = payload => ({\n    type: PredictionActionType.UPDATE_PREDICTION_FTR_RESPONSE,\n    payload\n});\nexport const updatePredictionSRResponse = payload => ({\n    type: PredictionActionType.UPDATE_PREDICTION_SR_RESPONSE,\n    payload\n});\nexport const updatePredictionDFFResponse = payload => ({\n    type: PredictionActionType.UPDATE_PREDICTION_DFF_RESPONSE,\n    payload\n});\nexport const updatePredictionSuggestionTitle = payload => ({\n    type: PredictionActionType.UPDATE_PREDICTION_SUGGESTION_TITLE,\n    payload\n});\nexport const updatePredictionTagScenario = payload => ({\n    type: PredictionActionType.UPDATE_PREDICTION_TAG_SCENARIO,\n    payload\n});\n\nexport const fetchPredictionRequest = () => dispatch => {\n    PredictionService.fetchPredictionRequest().then(\n        response => {\n            if (response && response.data && response.data.result) {\n                const result = response.data.result;\n                dispatch(setPredictionData(response.data.result));\n                const predictionStatus = result && result[\"statusCd\"] ? result[\"statusCd\"] : \"\";\n                dispatch(updatePredictionStatus(predictionStatus));\n                if (result && result[\"resultList\"] && result[\"resultList\"].length) {\n                    dispatch(predictionFoundFlag(true));\n                    dispatch(managePredictionData(result[\"resultList\"]));\n                } else {\n                    dispatch(predictionFoundFlag(false));\n                    dispatch(displayPredictionWindowFlag(false));\n                }\n            } else {\n                dispatch(setPredictionData(null));\n            }\n        },\n        error => {\n            dispatch(setPredictionData(null));\n            dispatch(openSnackbarRequest(error));\n        }\n    );\n};\n\n// export const fetchPredictionRequest = () => (dispatch, getState) => {\n//     const state = getState();\n//     const result = state.prediction.predictionData;\n//     console.log(result);\n//     if (\n//         result &&\n//         result[\"resultList\"] &&\n//         result[\"resultList\"].length\n//     ) {\n//         dispatch(predictionFoundFlag(true));\n//         UtilService.hidePageScroll();\n//         dispatch(managePredictionData(result[\"resultList\"]));\n//     } else {\n//         dispatch(predictionFoundFlag(false));\n//         dispatch(displayPredictionWindowFlag(false));\n//     }\n//     const predictionStatus = result && result[\"statusCd\"] ? result[\"statusCd\"] : \"\";\n//     dispatch(updatePredictionStatus(predictionStatus));\n// };\n\nexport const managePredictionData = (predictionData) => (dispatch, getState) => {\n    let predictionScenarioP1 = null;\n    let predictionScenarioP2 = null;\n    let predictionScenarioP3 = null;\n    for (let a = 0; a < predictionData.length; a++) {\n        if (predictionData[a][\"priority\"] === \"P1\") {\n            predictionScenarioP1 = predictionData[a];\n            dispatch(displayP1Description(true));\n            dispatch(updateP1Scenario(predictionScenarioP1));\n            const predictionScenarioP1CRMCode = predictionScenarioP1[\"crmCode\"] || \"\";\n            dispatch(updateP1CRMCode(predictionScenarioP1CRMCode));\n            if (predictionScenarioP1 && predictionScenarioP1[\"additionalInfo\"] && predictionScenarioP1[\"additionalInfo\"][\"stepDescription\"]) {\n                const predictionScenarioP1Desc = predictionScenarioP1[\"additionalInfo\"][\"stepDescription\"];\n                dispatch(updateP1ScenarioDescription(predictionScenarioP1Desc));\n            }\n            if (\n                predictionScenarioP1 && predictionScenarioP1[\"nextStepForFailedCheckForPrediction\"] &&\n                predictionScenarioP1[\"nextStepForFailedCheckForPrediction\"][\"choiceList\"] &&\n                predictionScenarioP1[\"nextStepForFailedCheckForPrediction\"][\n                    \"choiceList\"\n                ].length\n            ) {\n                const predictionScenarioP1ChoiceList = predictionScenarioP1[\"nextStepForFailedCheckForPrediction\"][\"choiceList\"];\n                dispatch(updateP1ScenarioChoice(predictionScenarioP1ChoiceList));\n            }\n        } else if (predictionData[a][\"priority\"] === \"P2\") {\n            predictionScenarioP2 = predictionData[a];\n            dispatch(displayP2Description(true));\n            dispatch(updateP2Scenario(predictionScenarioP1));\n            const predictionScenarioP2CRMCode = predictionScenarioP2[\"crmCode\"] || \"\";\n            dispatch(updateP1CRMCode(predictionScenarioP2CRMCode));\n            if (\n                predictionScenarioP2 &&\n                predictionScenarioP2[\"additionalInfo\"] &&\n                predictionScenarioP2[\"additionalInfo\"][\"stepDescription\"]\n            ) {\n                const predictionScenarioP2Desc = predictionScenarioP2[\"additionalInfo\"][\"stepDescription\"];\n                dispatch(updateP2ScenarioDescription(predictionScenarioP2Desc));\n            }\n        } else if (predictionData[a][\"priority\"] === \"P3\") {\n            predictionScenarioP3 = predictionData[a];\n            dispatch(updateP3Scenario(predictionScenarioP3));\n            if (\n                predictionScenarioP3 &&\n                predictionScenarioP3[\"additionalInfo\"] &&\n                predictionScenarioP3[\"additionalInfo\"][\"stepDescription\"]\n            ) {\n                const predictionScenarioP3Desc = predictionScenarioP3[\"additionalInfo\"][\"stepDescription\"];\n                dispatch(updateP3ScenarioDescription(predictionScenarioP3Desc));\n            }\n            if (\n                predictionScenarioP3 &&\n                predictionScenarioP3[\"nextStepForFailedCheckForPrediction\"] &&\n                predictionScenarioP3[\"nextStepForFailedCheckForPrediction\"][\"choiceList\"]\n            ) {\n                const suggestionChoiceBtnList = predictionScenarioP3[\n                    \"nextStepForFailedCheckForPrediction\"\n                ][\"choiceList\"];\n                dispatch(updateSuggestionChoice(suggestionChoiceBtnList));\n            }\n        }\n    }\n    if (predictionScenarioP1 || predictionScenarioP2 || predictionScenarioP3) {\n        dispatch(displayPredictionWindowFlag(true));\n    }\n    if (predictionScenarioP3 && !predictionScenarioP1 && !predictionScenarioP2) {\n        dispatch(updateDisplaySuggestionFlag(true));\n        // this.handleP3ScenarioDesc();\n    }\n};\n\nexport const initPrediction = msisdn => dispatch => {\n\n    return new Promise((resolve, reject) => {\n        const reqData = {\n            callingNumber: CookieManagerService.getItem(AppConstant.MSISDN)\n        };\n        PredictionService.initPredictionRequest(reqData).then(\n            response => {\n                resolve();\n            },\n            error => {\n                reject();\n            }\n        );\n    })\n\n};\n\nfunction setPredictionData(payload) {\n    return {\n        type: PredictionActionType.FETCH_PREDICTION_SCENARIO,\n        payload\n    }\n}\n\nexport const openDFFWhenOnlySRAvailable = () => (dispatch, getState) => {\n    const state = getState();\n    const {\n        predictionScenarioP1,\n        predictionScenarioP2,\n        predictionScenarioP1CRMCode,\n        predictionScenarioP2CRMCode\n    } = state.prediction;\n    if (\n        predictionScenarioP1 &&\n        !predictionScenarioP2 &&\n        predictionScenarioP1CRMCode &&\n        predictionScenarioP1CRMCode.indexOf(\"SR>\") !== -1\n    ) {\n        dispatch(createSRAndFTR(\n            predictionScenarioP1,\n            predictionScenarioP1CRMCode,\n            \"P1\"\n        ));\n    } else if (\n        !predictionScenarioP1 &&\n        predictionScenarioP2 &&\n        predictionScenarioP2CRMCode &&\n        predictionScenarioP2CRMCode.indexOf(\"SR>\") !== -1\n    ) {\n        dispatch(createSRAndFTR(\n            predictionScenarioP2,\n            predictionScenarioP2CRMCode,\n            \"P2\"\n        ));\n    }\n}\n\nexport const createSRAndFTR = (scenarioData, crmCode, currentScenarioPriority) => (dispatch, getState) => {\n    if (crmCode) {\n        dispatch(manageDisplayPredictionScenario(currentScenarioPriority));\n        if (crmCode.indexOf(\"SR>\") !== -1) {\n            dispatch(predictionSRHandler(scenarioData, currentScenarioPriority));\n        } else if (crmCode.indexOf(\"FTR>\") !== -1) {\n            dispatch(predictionFTRHandler(scenarioData, currentScenarioPriority));\n        }\n    }\n\n}\n\nexport const predictionFTRHandler = (scenarioData, currentScenarioPriority) => (dispatch, getState) => {\n    const state = getState();\n    let prospectCircle = null;\n    try {\n        prospectCircle = state.customerInfo && state.customerInfo.prospectCircle ? state.customerInfo.prospectCircle : null;\n    } catch (e) {\n        //\n    }\n    const reqData = {\n        notes: scenarioData.notes,\n        scenarioName: scenarioData[\"additionalInfo\"] && scenarioData[\"additionalInfo\"][\"scenario_name\"] ? scenarioData[\"additionalInfo\"][\"scenario_name\"] : \"\",\n        // smsTemplate: state.scenario.smsTemplate,\n        tagging: scenarioData.crmCode,\n        prospectNumberCircle: prospectCircle,\n        transactionId: scenarioData.transactionId\n    }\n    dispatch(tagFTRRequest(reqData, DisabledTaggingStatus.PREDICTION_FTR_TAGGING));\n}\n\nexport const predictionSRHandler = (scenarioData, currentScenarioPriority) => (dispatch, getState) => {\n    const reqData = {\n        transactionId: scenarioData[\"transactionId\"],\n        subType: ''\n    }\n    const notes = scenarioData.notes;\n    const crmCode = scenarioData.crmCode;\n    reqData.subType = PredictionService.getSubtype(crmCode);\n    dispatch(updatePredictionTagScenario(scenarioData));\n    dispatch(fetchDFFRequest(reqData, notes, DisabledTaggingStatus.PREDICTION_SR_TAGGING));\n}\n\nexport const togglePredictionDisplay = () => (dispatch, getState) => {\n    const state = getState();\n    const { displayPredictionWindow } = state.prediction;\n    dispatch(displayPredictionWindowFlag(!displayPredictionWindow));\n    if (!displayPredictionWindow) {\n        UtilService.hidePageScroll();\n    } else {\n        UtilService.resetPageScroll();\n    }\n}\n\nexport const suggestionChoiceBtnHandler = (choiceObj) => dispatch => {\n    dispatch(togglePredictionDisplay());\n    if (choiceObj[\"bookMark\"] && choiceObj[\"bookMark\"][\"scenarioId\"]) {\n        const scenarioId = choiceObj[\"bookMark\"][\"scenarioId\"];\n        dispatch(updateCurrentScenarioId(scenarioId));\n    }\n}\n\nexport const manageDisplayPredictionScenario = (priority) => dispatch => {\n    switch (priority) {\n        case \"P1\":\n            dispatch(displayP1Description(true));\n            dispatch(displayP2Description(false));\n            break;\n        case \"P2\":\n            dispatch(displayP1Description(false));\n            dispatch(displayP2Description(true));\n            break;\n        default:\n            break;\n    }\n}\n\nexport const predictionFTRResponseHandler = (response) => dispatch => {\n    dispatch(updatePredictionFTRResponse(response));\n    dispatch(suggetionTitleHandler());\n}\n\nexport const predictionSRResponseHandler = (response) => dispatch => {\n    dispatch(updatePredictionSRResponse(response));\n    dispatch(suggetionTitleHandler());\n}\n\nexport const suggetionTitleHandler = () => (dispatch, getState) => {\n    const state = getState();\n    const predictionScenarioP3 = state.prediction.predictionScenarioP3;\n    if (predictionScenarioP3 && predictionScenarioP3.additionalInfo && predictionScenarioP3.additionalInfo.stepDescription) {\n        const desc = predictionScenarioP3.additionalInfo.stepDescription;\n        const suggestionTitle = desc.split(\"<br>\")[0];\n        dispatch(updatePredictionSuggestionTitle(suggestionTitle));\n    }\n}"]},"metadata":{},"sourceType":"module"}