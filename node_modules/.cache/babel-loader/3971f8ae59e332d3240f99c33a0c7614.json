{"ast":null,"code":"import { UsageDetailActionType } from \"../actiontype/usage-details-tab.actiontype\";\nimport UsageDetailsTabService from '../services/usage-details-tab.service';\nimport { hideCardLoader, showCardLoader } from '../actions/app.action';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { openSnackbarRequest } from './snackbar.action';\nimport MultipleTaggingService from '../services/multiple-tagging.service';\nexport var fetchUsageDetailsTabData = function fetchUsageDetailsTabData(usageDetailsObj) {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (!state.customerInfo || !state.customerInfo.customerInfo || !state.customerInfo.customerInfo.circle) {\n      return false;\n    }\n\n    if (state && state.UsageDetailsTabApiInfo && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse.cardContent) {\n      dispatch(UsageDetailsTabApiSuccess(state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse));\n\n      if (state.UsageDetailsTabApiInfo.usageAddOnDetailsResponse) {\n        dispatch(UsageAddOnDetailsApiSuccess(state.UsageDetailsTabApiInfo.usageAddOnDetailsResponse));\n      }\n\n      return;\n    }\n\n    var snackbarMessage = {};\n    dispatch(fetchUsageDetailsApiLoading()); // dispatch(showCardLoader());\n\n    UsageDetailsTabService.fetchUsageDetailsTabApi().then(function (response) {\n      // dispatch(hideCardLoader());\n      if (response && response.data && response.data.result) {\n        dispatch(UsageDetailsTabApiSuccess(response.data.result));\n        dispatch(setUsagecardLinksData(response.data.result.cardLinks));\n        dispatch(checkAndfetchAddOnDetails());\n      } else {\n        snackbarMessage = SnackbarMessages.USAGE_DETAILS_NO_DATA;\n        dispatch(openSnackbarRequest(null, snackbarMessage));\n      }\n    }, function (error) {\n      // dispatch(hideCardLoader());\n      dispatch(UsageDetailsTabApiFailure(error));\n    });\n  };\n};\n\nvar setUsagecardLinksData = function setUsagecardLinksData(data) {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (state && state.UsageDetailsTabApiInfo && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse.cardLinks) {\n      var cardLinksObj = state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse.cardLinks;\n      var scenarioCardLinksObj = MultipleTaggingService.getCardLinksScenarioType(cardLinksObj);\n      dispatch(setUsagecardLinksDataSuccess(scenarioCardLinksObj));\n    }\n  };\n};\n\nfunction setUsagecardLinksDataSuccess(response) {\n  return {\n    type: UsageDetailActionType.USAGE_DETAILS_SCENARIO_CARD_LINKS,\n    payload: response\n  };\n}\n\nvar checkAndfetchAddOnDetails = function checkAndfetchAddOnDetails(data) {\n  return function (dispatch, getState) {\n    var state = getState();\n    var usageDetailsTabApiResponse = state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse;\n    var isUsageHoverType = UsageDetailsTabService.checkIsUsageHoverType(usageDetailsTabApiResponse);\n\n    if (isUsageHoverType) {\n      dispatch(fetchUsageAddOnDetails());\n    }\n  };\n};\n\nexport var fetchUsageAddOnDetails = function fetchUsageAddOnDetails(usageDetailsObj) {\n  return function (dispatch, getState) {\n    dispatch(fetchUsageAddOnDetailsApiLoading());\n    dispatch(showCardLoader());\n    var snackbarMessage = {};\n    UsageDetailsTabService.fetchUsageAddOnDetailsTabApi().then(function (response) {\n      dispatch(hideCardLoader());\n\n      if (response && response.data && response.data.result) {\n        dispatch(UsageAddOnDetailsApiSuccess(response.data.result));\n      } else {\n        snackbarMessage = SnackbarMessages.USAGE_ADD_ON_DETAILS_NO_DATA;\n        dispatch(openSnackbarRequest(null, snackbarMessage));\n      }\n    }, function (error) {\n      dispatch(hideCardLoader());\n      dispatch(UsageAddOnDetailsApiFailure(error));\n    });\n  };\n};\n\nfunction fetchUsageAddOnDetailsApiLoading() {\n  return {\n    type: UsageDetailActionType.USAGE_ADD_ON_DETAILS_REQUEST\n  };\n}\n\nfunction UsageAddOnDetailsApiSuccess(response) {\n  return {\n    type: UsageDetailActionType.USAGE_ADD_ON_DETAILS_SUCCESS,\n    payload: response\n  };\n}\n\nfunction UsageAddOnDetailsApiFailure(error) {\n  return {\n    type: UsageDetailActionType.USAGE_ADD_ON_DETAILS_FAILURE,\n    payload: error\n  };\n}\n\nfunction fetchUsageDetailsApiLoading() {\n  return {\n    type: UsageDetailActionType.USAGE_DETAILS_TAB_REQUEST\n  };\n}\n\nfunction UsageDetailsTabApiSuccess(response) {\n  return {\n    type: UsageDetailActionType.USAGE_DETAILS_TAB_SUCCESS,\n    payload: response\n  };\n}\n\nfunction UsageDetailsTabApiFailure(error) {\n  return {\n    type: UsageDetailActionType.USAGE_DETAILS_TAB_FAILURE,\n    payload: error\n  };\n}","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/actions/usage-details-tab.action.js"],"names":["UsageDetailActionType","UsageDetailsTabService","hideCardLoader","showCardLoader","SnackbarMessages","openSnackbarRequest","MultipleTaggingService","fetchUsageDetailsTabData","usageDetailsObj","dispatch","getState","state","customerInfo","circle","UsageDetailsTabApiInfo","usageDetailsTabApiResponse","cardContent","UsageDetailsTabApiSuccess","usageAddOnDetailsResponse","UsageAddOnDetailsApiSuccess","snackbarMessage","fetchUsageDetailsApiLoading","fetchUsageDetailsTabApi","then","response","data","result","setUsagecardLinksData","cardLinks","checkAndfetchAddOnDetails","USAGE_DETAILS_NO_DATA","error","UsageDetailsTabApiFailure","cardLinksObj","scenarioCardLinksObj","getCardLinksScenarioType","setUsagecardLinksDataSuccess","type","USAGE_DETAILS_SCENARIO_CARD_LINKS","payload","isUsageHoverType","checkIsUsageHoverType","fetchUsageAddOnDetails","fetchUsageAddOnDetailsApiLoading","fetchUsageAddOnDetailsTabApi","USAGE_ADD_ON_DETAILS_NO_DATA","UsageAddOnDetailsApiFailure","USAGE_ADD_ON_DETAILS_REQUEST","USAGE_ADD_ON_DETAILS_SUCCESS","USAGE_ADD_ON_DETAILS_FAILURE","USAGE_DETAILS_TAB_REQUEST","USAGE_DETAILS_TAB_SUCCESS","USAGE_DETAILS_TAB_FAILURE"],"mappings":"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","sourcesContent":["import { UsageDetailActionType } from \"../actiontype/usage-details-tab.actiontype\";\nimport UsageDetailsTabService from '../services/usage-details-tab.service';\nimport { hideCardLoader, showCardLoader } from '../actions/app.action';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { openSnackbarRequest } from './snackbar.action';\nimport MultipleTaggingService from '../services/multiple-tagging.service';\n\nexport const fetchUsageDetailsTabData = usageDetailsObj => (dispatch, getState) => {\n\n    const state = getState();\n    if (!state.customerInfo || !state.customerInfo.customerInfo || !state.customerInfo.customerInfo.circle) {\n        return false;\n    }\n    if (state && state.UsageDetailsTabApiInfo && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse.cardContent) {\n        dispatch(UsageDetailsTabApiSuccess(state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse));\n        if (state.UsageDetailsTabApiInfo.usageAddOnDetailsResponse) {\n            dispatch(UsageAddOnDetailsApiSuccess(state.UsageDetailsTabApiInfo.usageAddOnDetailsResponse));\n        }\n        return;\n    }\n    let snackbarMessage = {}\n    dispatch(fetchUsageDetailsApiLoading());\n    // dispatch(showCardLoader());\n    UsageDetailsTabService.fetchUsageDetailsTabApi().then(\n        response => {\n\n            // dispatch(hideCardLoader());\n            if (response && response.data && response.data.result) {\n                dispatch(UsageDetailsTabApiSuccess(response.data.result));\n                dispatch(setUsagecardLinksData(response.data.result.cardLinks));\n                dispatch(checkAndfetchAddOnDetails());\n\n            }\n            else {\n                snackbarMessage = SnackbarMessages.USAGE_DETAILS_NO_DATA;\n                dispatch(openSnackbarRequest(null, snackbarMessage));\n            }\n        },\n        error => {\n            // dispatch(hideCardLoader());\n            dispatch(UsageDetailsTabApiFailure(error));\n        }\n    );\n}\n\nconst setUsagecardLinksData = data => (dispatch, getState) => {\n    const state = getState();\n    if (state && state.UsageDetailsTabApiInfo && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse.cardLinks) {\n        const cardLinksObj = state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse.cardLinks;\n        const scenarioCardLinksObj = MultipleTaggingService.getCardLinksScenarioType(cardLinksObj);\n        dispatch(setUsagecardLinksDataSuccess(scenarioCardLinksObj));\n    }\n\n}\nfunction setUsagecardLinksDataSuccess(response) {\n    return {\n        type: UsageDetailActionType.USAGE_DETAILS_SCENARIO_CARD_LINKS,\n        payload: response\n    }\n}\nconst checkAndfetchAddOnDetails = data => (dispatch, getState) => {\n    const state = getState();\n    const usageDetailsTabApiResponse = state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse;\n    const isUsageHoverType = UsageDetailsTabService.checkIsUsageHoverType(usageDetailsTabApiResponse);\n    if (isUsageHoverType) {\n        dispatch(fetchUsageAddOnDetails());\n    }\n}\nexport const fetchUsageAddOnDetails = usageDetailsObj => (dispatch, getState) => {\n    dispatch(fetchUsageAddOnDetailsApiLoading());\n    dispatch(showCardLoader());\n    let snackbarMessage = {}\n    UsageDetailsTabService.fetchUsageAddOnDetailsTabApi().then(\n        response => {\n            dispatch(hideCardLoader());\n            if (response && response.data && response.data.result) {\n                dispatch(UsageAddOnDetailsApiSuccess(response.data.result));\n            }\n            else {\n                snackbarMessage = SnackbarMessages.USAGE_ADD_ON_DETAILS_NO_DATA;\n                dispatch(openSnackbarRequest(null, snackbarMessage));\n            }\n        },\n        error => {\n            dispatch(hideCardLoader());\n            dispatch(UsageAddOnDetailsApiFailure(error));\n        }\n    );\n}\nfunction fetchUsageAddOnDetailsApiLoading() {\n    return {\n        type: UsageDetailActionType.USAGE_ADD_ON_DETAILS_REQUEST\n    }\n}\nfunction UsageAddOnDetailsApiSuccess(response) {\n    return {\n        type: UsageDetailActionType.USAGE_ADD_ON_DETAILS_SUCCESS,\n        payload: response\n    }\n}\nfunction UsageAddOnDetailsApiFailure(error) {\n    return {\n        type: UsageDetailActionType.USAGE_ADD_ON_DETAILS_FAILURE,\n        payload: error\n    }\n}\n\nfunction fetchUsageDetailsApiLoading() {\n    return {\n        type: UsageDetailActionType.USAGE_DETAILS_TAB_REQUEST\n    }\n}\nfunction UsageDetailsTabApiSuccess(response) {\n    return {\n        type: UsageDetailActionType.USAGE_DETAILS_TAB_SUCCESS,\n        payload: response\n    }\n}\nfunction UsageDetailsTabApiFailure(error) {\n    return {\n        type: UsageDetailActionType.USAGE_DETAILS_TAB_FAILURE,\n        payload: error\n    }\n}"]},"metadata":{},"sourceType":"module"}