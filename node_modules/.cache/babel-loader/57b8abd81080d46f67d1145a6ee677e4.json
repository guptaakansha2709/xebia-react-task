{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/top-scenario/top-scenario.smart.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport styles from './top-scenario.style';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport { updateCurrentScenarioId as _updateCurrentScenarioId } from '../../../actions/scenario.action';\nimport { openSnackbarRequest as _openSnackbarRequest } from '../../../actions/snackbar.action';\nimport { SnackbarMessages } from '../../../constants/snackbar-messages';\n\nvar TopScenario =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TopScenario, _Component);\n\n  function TopScenario() {\n    _classCallCheck(this, TopScenario);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TopScenario).apply(this, arguments));\n  }\n\n  _createClass(TopScenario, [{\n    key: \"onClickTopScenario\",\n    value: function onClickTopScenario(item) {\n      if (item && item.value) {\n        this.props.updateCurrentScenarioId(item.value);\n      } else {\n        this.props.openSnackbarRequest(null, SnackbarMessages.DATA_NOT_AVAILABLE);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          customerInfo = _this$props.customerInfo;\n      var topScenarios = customerInfo && customerInfo.cardLinks ? customerInfo.cardLinks : [];\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, topScenarios.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: 'bg-grey mt-20 ' + classes.scenario,\n          onClick: function onClick() {\n            return _this.onClickTopScenario(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, item.additionalInfo, React.createElement(KeyboardArrowRight, {\n          className: \"pull-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return TopScenario;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    customerInfo: state.customerInfo.customerInfo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCurrentScenarioId: function updateCurrentScenarioId(id) {\n      return dispatch(_updateCurrentScenarioId(id));\n    },\n    openSnackbarRequest: function openSnackbarRequest(error, msg) {\n      return dispatch(_openSnackbarRequest(error, msg));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TopScenario));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/top-scenario/top-scenario.smart.js"],"names":["React","Component","withStyles","connect","styles","KeyboardArrowRight","updateCurrentScenarioId","openSnackbarRequest","SnackbarMessages","TopScenario","item","value","props","DATA_NOT_AVAILABLE","classes","customerInfo","topScenarios","cardLinks","root","map","index","scenario","onClickTopScenario","additionalInfo","mapStateToProps","state","mapDispatchToProps","dispatch","id","error","msg"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,SAASC,uBAAuB,IAAvBA,wBAAT,QAAwC,kCAAxC;AACA,SAASC,mBAAmB,IAAnBA,oBAAT,QAAoC,kCAApC;AACA,SAASC,gBAAT,QAAiC,sCAAjC;;IAEMC,W;;;;;;;;;;;;;uCAEiBC,I,EAAM;AACrB,UAAGA,IAAI,IAAIA,IAAI,CAACC,KAAhB,EAAuB;AACnB,aAAKC,KAAL,CAAWN,uBAAX,CAAmCI,IAAI,CAACC,KAAxC;AACH,OAFD,MAEO;AACH,aAAKC,KAAL,CAAWL,mBAAX,CAA+B,IAA/B,EAAqCC,gBAAgB,CAACK,kBAAtD;AACH;AACJ;;;6BAEM;AAAA;;AAAA,wBAC2B,KAAKD,KADhC;AAAA,UACCE,OADD,eACCA,OADD;AAAA,UACUC,YADV,eACUA,YADV;AAEP,UAAMC,YAAY,GAAGD,YAAY,IAAIA,YAAY,CAACE,SAA7B,GAAyCF,YAAY,CAACE,SAAtD,GAAkE,EAAvF;AACA,aACE;AAAK,QAAA,SAAS,EAAEH,OAAO,CAACI,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEF,YAAY,CAACG,GAAb,CAAiB,UAACT,IAAD,EAAOU,KAAP,EAAiB;AAC9B,eACI;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAiB,UAAA,SAAS,EAAE,mBAAmBN,OAAO,CAACO,QAAvD;AAAiE,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACC,kBAAL,CAAwBZ,IAAxB,CAAN;AAAA,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,IAAI,CAACa,cADV,EAEI,oBAAC,kBAAD;AAAoB,UAAA,SAAS,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAMH,OAPD,CADF,CADF;AAaD;;;;EA1BuBtB,S;;AA6B1B,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLV,IAAAA,YAAY,EAAEU,KAAK,CAACV,YAAN,CAAmBA;AAD5B,GAAP;AAGD,CAJD;;AAMA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCrB,IAAAA,uBAAuB,EAAE,iCAAAsB,EAAE;AAAA,aAAID,QAAQ,CAACrB,wBAAuB,CAACsB,EAAD,CAAxB,CAAZ;AAAA,KADS;AAEpCrB,IAAAA,mBAAmB,EAAE,6BAACsB,KAAD,EAAQC,GAAR;AAAA,aAAgBH,QAAQ,CAACpB,oBAAmB,CAACsB,KAAD,EAAQC,GAAR,CAApB,CAAxB;AAAA;AAFe,GAAL;AAAA,CAAnC;;AAKA,eAAe3B,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,UAAU,CAACE,MAAD,CAAV,CAAmBK,WAAnB,CAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport styles from './top-scenario.style';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport { updateCurrentScenarioId } from '../../../actions/scenario.action';\nimport { openSnackbarRequest } from '../../../actions/snackbar.action';\nimport { SnackbarMessages } from '../../../constants/snackbar-messages';\n\nclass TopScenario extends Component {\n\n    onClickTopScenario(item) {\n        if(item && item.value) {\n            this.props.updateCurrentScenarioId(item.value);\n        } else {\n            this.props.openSnackbarRequest(null, SnackbarMessages.DATA_NOT_AVAILABLE)\n        }\n    }\n\n  render() {\n    const { classes, customerInfo } = this.props;\n    const topScenarios = customerInfo && customerInfo.cardLinks ? customerInfo.cardLinks : [];\n    return (\n      <div className={classes.root}>\n       {topScenarios.map((item, index) => {\n            return (\n                <div key={index} className={'bg-grey mt-20 ' + classes.scenario} onClick={() => this.onClickTopScenario(item)}>\n                    {item.additionalInfo}\n                    <KeyboardArrowRight className=\"pull-right\"></KeyboardArrowRight>\n                </div>\n            )\n        })}\n       \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    customerInfo: state.customerInfo.customerInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    updateCurrentScenarioId: id => dispatch(updateCurrentScenarioId(id)),\n    openSnackbarRequest: (error, msg) => dispatch(openSnackbarRequest(error, msg))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TopScenario));"]},"metadata":{},"sourceType":"module"}