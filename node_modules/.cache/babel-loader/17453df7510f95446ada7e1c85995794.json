{"ast":null,"code":"var _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/permanent-drawer-left.dumb.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { connect } from \"react-redux\";\nimport AirtelLogo from \"../../assets/images/airtelLogo.svg\";\nimport AutoPredictBullet from '../prediction/auto-predict-bullet/auto-predict-bullet.smart';\nimport LeftNavMenuKey from '../../constants/left-nav-menu.enum';\nimport CookieManagerService from '../../services/cookie.service';\n\nvar styles = function styles(theme) {\n  return {\n    drawer: {\n      width: '80px'\n    },\n    drawerPaper: {\n      width: '80px',\n      backgroundColor: '#333'\n    },\n    toolbar: theme.mixins.toolbar,\n    headerIconContainer: {\n      paddingTop: '20px',\n      paddingBottom: '20px',\n      backgroundColor: '#000',\n      textAlign: 'center'\n    },\n    listItem: {\n      textAlign: 'center',\n      paddingTop: 15,\n      paddingBottom: 15,\n      color: '#E9E9E9',\n      cursor: 'pointer'\n    }\n  };\n};\n\nvar PermanentDrawerLeft = function PermanentDrawerLeft(props) {\n  var classes = props.classes,\n      menuItems = props.menuItems;\n\n  var getMenuItems = function getMenuItems() {\n    var userChannel = CookieManagerService.getAuthDetails().channel;\n    var menuItemsObj = menuItems;\n    var menuItemsSortedKeys = Object.keys(menuItemsObj).sort(function (a, b) {\n      return menuItemsObj[a].index - menuItemsObj[b].index;\n    });\n    var menuItemsSortedFilteredKeys = menuItemsSortedKeys.filter(function (item) {\n      if (item === LeftNavMenuKey.UNIVERSAL_WORK_QUEUE && !(userChannel === 'tac1')) {\n        return false;\n      }\n\n      return true;\n    });\n    var menuItemsArray = menuItemsSortedFilteredKeys.map(function (key, index) {\n      return menuItemsObj[key];\n    });\n    return menuItemsArray;\n  };\n\n  var listItem = function listItem(menuItem, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      style: {\n        opacity: menuItem.disabled ? 0.5 : 1\n      },\n      onClick: function onClick() {\n        if (!menuItem.disabled && menuItem.type === \"actionClick\" && menuItem.onClickAction) {\n          props.onMenuItemClick(menuItem.onClickAction, {\n            title: menuItem.title\n          });\n        }\n      },\n      className: classes.listItem + \" sidebar-menu-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"position-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, menuItem.icon, React.createElement(\"span\", {\n      className: menuItem.autoPredict ? '' : 'hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(AutoPredictBullet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, menuItem.title));\n  };\n\n  var menuItemsArray = getMenuItems();\n  return React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    anchor: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.headerIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: AirtelLogo,\n    width: \"40\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, menuItemsArray.map(function (menuItem, index) {\n    return listItem(menuItem, index);\n  })));\n};\n\nPermanentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    menuItems: state && state.leftNav && state.leftNav.menuItems\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onMenuItemClick: function onMenuItemClick(action, actionArgument) {\n      return dispatch(action(actionArgument));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PermanentDrawerLeft));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/permanent-drawer-left.dumb.js"],"names":["React","PropTypes","withStyles","Drawer","List","Divider","connect","AutoPredictBullet","LeftNavMenuKey","CookieManagerService","styles","theme","drawer","width","drawerPaper","backgroundColor","toolbar","mixins","headerIconContainer","paddingTop","paddingBottom","textAlign","listItem","color","cursor","PermanentDrawerLeft","props","classes","menuItems","getMenuItems","userChannel","getAuthDetails","channel","menuItemsObj","menuItemsSortedKeys","Object","keys","sort","a","b","index","menuItemsSortedFilteredKeys","filter","item","UNIVERSAL_WORK_QUEUE","menuItemsArray","map","key","menuItem","opacity","disabled","type","onClickAction","onMenuItemClick","title","icon","autoPredict","paper","AirtelLogo","propTypes","object","isRequired","mapStateToProps","state","leftNav","mapDispatchToProps","dispatch","action","actionArgument"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { connect } from \"react-redux\";\nimport AirtelLogo from '../../assets/images/airtelLogo.svg';\nimport AutoPredictBullet from '../prediction/auto-predict-bullet/auto-predict-bullet.smart';\nimport LeftNavMenuKey from  '../../constants/left-nav-menu.enum';\nimport CookieManagerService from '../../services/cookie.service';\n\nconst styles = theme => ({\n    drawer: {\n        width: '80px'\n    },\n    drawerPaper: {\n        width: '80px',\n        backgroundColor: '#333'\n    },\n    toolbar: theme.mixins.toolbar,\n    headerIconContainer: {\n        paddingTop: '20px',\n        paddingBottom: '20px',\n        backgroundColor: '#000',\n        textAlign: 'center'\n    },\n    listItem: {\n        textAlign: 'center',\n        paddingTop: 15,\n        paddingBottom: 15,\n        color: '#E9E9E9',\n        cursor: 'pointer'\n    }\n});\n\n\nconst PermanentDrawerLeft = (props) => {\n    const { classes, menuItems } = props;\n\n    const getMenuItems = () => {\n        const userChannel = CookieManagerService.getAuthDetails().channel;\n        let menuItemsObj = menuItems\n        let menuItemsSortedKeys = Object.keys(menuItemsObj).sort(function (a, b) {\n            return menuItemsObj[a].index - menuItemsObj[b].index\n        })\n\n        let menuItemsSortedFilteredKeys = menuItemsSortedKeys.filter((item) => {\n            if(item === LeftNavMenuKey.UNIVERSAL_WORK_QUEUE && !(userChannel === 'tac1')) {\n                return false;\n            }\n            return true;\n        })\n\n        let menuItemsArray = menuItemsSortedFilteredKeys.map((key, index) => {\n            return menuItemsObj[key]\n        })\n\n        return menuItemsArray\n    }\n\n    const listItem = (menuItem, index) => (\n        <li key={index} style={{ opacity: menuItem.disabled ? 0.5 : 1 }} onClick={() => {\n            if (!menuItem.disabled && menuItem.type === \"actionClick\" && menuItem.onClickAction) {\n                props.onMenuItemClick(menuItem.onClickAction, { title: menuItem.title })\n            }\n        }} className={classes.listItem + \" sidebar-menu-items\"} >\n            <div className=\"position-relative\">\n                {menuItem.icon}\n                <span className={(menuItem.autoPredict ? '' : 'hidden')}>\n                    <AutoPredictBullet />\n                </span>\n            </div>\n            <div>{menuItem.title}</div>\n        </li>\n    );\n\n    let menuItemsArray = getMenuItems()\n\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n            anchor=\"left\"\n        >\n            <div className={classes.headerIconContainer}>\n                <img src={AirtelLogo} width=\"40\" alt=\"logo\" />\n            </div>\n            <Divider />\n            <List>\n                {menuItemsArray.map((menuItem, index) => {\n                    return listItem(menuItem, index);\n                })}\n            </List>\n        </Drawer >\n    );\n}\n\nPermanentDrawerLeft.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nconst mapStateToProps = state => {\n    return { menuItems: state && state.leftNav && state.leftNav.menuItems }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onMenuItemClick: (action, actionArgument) => dispatch(action(actionArgument))\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PermanentDrawerLeft));\n"]},"metadata":{},"sourceType":"module"}