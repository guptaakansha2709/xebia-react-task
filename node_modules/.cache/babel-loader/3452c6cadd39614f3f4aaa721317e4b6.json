{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/uwq/ticket-list/ticket-list.smart.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ticket-list.style';\nimport { connect } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { updateUWQTicketListOrder, updateUWQTicketListOrderBy, toggleUWQWindowDisplay } from '../../../actions/universal-work-queue.action.js';\nimport UtilService from '../../../services/util.service';\nimport { fetchSRDetails, setCustomerSRNumberInput } from '../../../actions/customer-info.action';\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nvar headCells = [{\n  id: 'srNumber',\n  numeric: true,\n  disablePadding: false,\n  label: 'SR No'\n}, {\n  id: 'srCreatedDate',\n  numeric: false,\n  disablePadding: false,\n  label: 'Created On'\n}, {\n  id: 'srResolutionTime',\n  numeric: false,\n  disablePadding: false,\n  label: 'Resolution Time'\n}, {\n  id: 'customerSegment',\n  numeric: false,\n  disablePadding: false,\n  label: 'Customer Segment'\n}, {\n  id: 'srStatus',\n  numeric: false,\n  disablePadding: false,\n  label: 'Status'\n}];\n\nfunction EnhancedTableHead(props) {\n  var order = props.order,\n      orderBy = props.orderBy,\n      onRequestSort = props.onRequestSort;\n\n  var createSortHandler = function createSortHandler(property) {\n    return function (event) {\n      onRequestSort(event, property);\n    };\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, headCells.map(function (headCell) {\n    return React.createElement(TableCell, {\n      key: headCell.id // align={headCell.numeric ? 'right' : 'left'}\n      // padding={headCell.disablePadding ? 'none' : 'default'}\n      ,\n      sortDirection: orderBy === headCell.id ? order : false,\n      className: \"uqw-table-th\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === headCell.id,\n      direction: orderBy === headCell.id ? order : 'asc',\n      onClick: createSortHandler(headCell.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, headCell.label));\n  })));\n}\n\nvar TicketList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TicketList, _Component);\n\n  function TicketList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TicketList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TicketList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleRequestSort = function (event, property) {\n      var _this$props = _this.props,\n          orderBy = _this$props.orderBy,\n          order = _this$props.order;\n      var isAsc = orderBy === property && order === 'asc';\n\n      _this.props.updateUWQTicketListOrder(isAsc ? 'desc' : 'asc');\n\n      _this.props.updateUWQTicketListOrderBy(property);\n    };\n\n    _this.onClickSRNo = function (srNo) {\n      _this.props.fetchSRDetails(srNo);\n\n      _this.props.setCustomerSRNumberInput(srNo);\n\n      _this.props.toggleUWQWindowDisplay();\n    };\n\n    _this.getFilteredItem = function (item, filterForm) {\n      if (filterForm.status && filterForm.status !== item[\"srStatus\"]) {\n        return false;\n      }\n\n      if (filterForm.custSegment && filterForm.custSegment !== item[\"customerSegment\"]) {\n        return false;\n      }\n\n      return true;\n    };\n\n    return _this;\n  }\n\n  _createClass(TicketList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          order = _this$props2.order,\n          orderBy = _this$props2.orderBy,\n          ticketList = _this$props2.ticketList,\n          filterForm = _this$props2.filterForm;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\",\n        size: 'medium',\n        \"aria-label\": \"enhanced table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(EnhancedTableHead, {\n        classes: classes,\n        order: order,\n        orderBy: orderBy,\n        onRequestSort: this.handleRequestSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, stableSort(ticketList, getSorting(order, orderBy)).filter(function (item) {\n        return _this2.getFilteredItem(item, filterForm);\n      }).map(function (row, index) {\n        var labelId = \"enhanced-table-checkbox-\".concat(index);\n        return React.createElement(TableRow, {\n          hover: true,\n          role: \"checkbox\",\n          tabIndex: -1,\n          key: row.srNumber + \"_\" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          id: labelId,\n          scope: \"row\",\n          className: \"color-blue cursor-pointer\",\n          onClick: function onClick() {\n            return _this2.onClickSRNo(row.srNumber);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, row.srNumber), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, UtilService.dateFormat_DD_MMM_YYYY_HH_MM(row.srCreatedDate)), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, UtilService.dateFormat_DD_MMM_YYYY_HH_MM(row.srResolutionTime) || \"NA\"), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, row.customerSegment), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, row.srStatus));\n      })))));\n    }\n  }]);\n\n  return TicketList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    order: state.uwq.order,\n    orderBy: state.uwq.orderBy,\n    ticketList: state.uwq.ticketList,\n    filterForm: state.uwq.filterForm\n  };\n};\n\nvar mapDispatchToProps = {\n  updateUWQTicketListOrder: updateUWQTicketListOrder,\n  updateUWQTicketListOrderBy: updateUWQTicketListOrderBy,\n  fetchSRDetails: fetchSRDetails,\n  toggleUWQWindowDisplay: toggleUWQWindowDisplay,\n  setCustomerSRNumberInput: setCustomerSRNumberInput\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TicketList));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/uwq/ticket-list/ticket-list.smart.js"],"names":["React","Component","withStyles","styles","connect","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Paper","updateUWQTicketListOrder","updateUWQTicketListOrderBy","toggleUWQWindowDisplay","UtilService","fetchSRDetails","setCustomerSRNumberInput","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onRequestSort","createSortHandler","property","event","headCell","TicketList","handleRequestSort","isAsc","onClickSRNo","srNo","getFilteredItem","item","filterForm","status","custSegment","classes","ticketList","root","paper","table","filter","row","labelId","srNumber","dateFormat_DD_MMM_YYYY_HH_MM","srCreatedDate","srResolutionTime","customerSegment","srStatus","mapStateToProps","state","uwq","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ticket-list.style';\nimport { connect } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { updateUWQTicketListOrder, updateUWQTicketListOrderBy, toggleUWQWindowDisplay } from '../../../actions/universal-work-queue.action.js';\nimport UtilService from '../../../services/util.service';\nimport { fetchSRDetails, setCustomerSRNumberInput } from '../../../actions/customer-info.action';\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n    { id: 'srNumber', numeric: true, disablePadding: false, label: 'SR No' },\n    { id: 'srCreatedDate', numeric: false, disablePadding: false, label: 'Created On' },\n    { id: 'srResolutionTime', numeric: false, disablePadding: false, label: 'Resolution Time' },\n    { id: 'customerSegment', numeric: false, disablePadding: false, label: 'Customer Segment' },\n    { id: 'srStatus', numeric: false, disablePadding: false, label: 'Status' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { order, orderBy, onRequestSort } = props;\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        // align={headCell.numeric ? 'right' : 'left'}\n                        // padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                        className='uqw-table-th'\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\nclass TicketList extends Component {\n\n    handleRequestSort = (event, property) => {\n        const { orderBy, order } = this.props;\n        const isAsc = orderBy === property && order === 'asc';\n        this.props.updateUWQTicketListOrder(isAsc ? 'desc' : 'asc');\n        this.props.updateUWQTicketListOrderBy(property);\n    }\n\n    onClickSRNo = (srNo) => {\n        this.props.fetchSRDetails(srNo);\n        this.props.setCustomerSRNumberInput(srNo);\n        this.props.toggleUWQWindowDisplay();\n    }\n\n    getFilteredItem = (item, filterForm) => {\n        if (filterForm.status && filterForm.status !== item[\"srStatus\"]) {\n            return false;\n        }\n        if (filterForm.custSegment && filterForm.custSegment !== item[\"customerSegment\"]) {\n            return false;\n        }\n        return true;\n    }\n\n    render() {\n        const { classes, order, orderBy, ticketList, filterForm } = this.props;\n        return (\n            <div className={classes.root}>\n                <Paper className={classes.paper}>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={this.handleRequestSort}\n                        />\n                        <TableBody>\n                            {stableSort(ticketList, getSorting(order, orderBy))\n                                .filter((item) => this.getFilteredItem(item, filterForm))\n                                .map((row, index) => {\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            role=\"checkbox\"\n                                            tabIndex={-1}\n                                            key={row.srNumber + \"_\" + index}\n                                        >\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" className=\"color-blue cursor-pointer\" onClick={() => this.onClickSRNo(row.srNumber)}>\n                                                {row.srNumber}\n                                            </TableCell>\n                                            <TableCell>{UtilService.dateFormat_DD_MMM_YYYY_HH_MM(row.srCreatedDate)}</TableCell>\n                                            <TableCell>{UtilService.dateFormat_DD_MMM_YYYY_HH_MM(row.srResolutionTime) || \"NA\"}</TableCell>\n                                            <TableCell>{row.customerSegment}</TableCell>\n                                            <TableCell>{row.srStatus}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        order: state.uwq.order,\n        orderBy: state.uwq.orderBy,\n        ticketList: state.uwq.ticketList,\n        filterForm: state.uwq.filterForm\n    };\n};\n\nconst mapDispatchToProps = {\n    updateUWQTicketListOrder,\n    updateUWQTicketListOrderBy,\n    fetchSRDetails,\n    toggleUWQWindowDisplay,\n    setCustomerSRNumberInput\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TicketList));\n"]},"metadata":{},"sourceType":"module"}