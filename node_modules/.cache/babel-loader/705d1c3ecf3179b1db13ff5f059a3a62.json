{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nimport DisabledTaggingStatus from '../constants/disabled-tagging.enum';\n\nvar FTRService =\n/*#__PURE__*/\nfunction () {\n  function FTRService() {\n    _classCallCheck(this, FTRService);\n  }\n\n  _createClass(FTRService, null, [{\n    key: \"tagFTRRequest\",\n    value: function tagFTRRequest(reqData) {\n      var authDetails = CookieManagerService.getAuthDetails();\n      var data = {\n        channel: authDetails.channel,\n        lob: authDetails.lob,\n        source: authDetails.source\n      };\n      var transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n      var reqDataObj = Object.assign({}, data, reqData);\n      reqDataObj['transactionId'] = reqDataObj['transactionId'] || transactionId;\n      var url = Config.contextPath + \"user/rest/v1.0/tag/postpaid/siebel/ftr\";\n      return CustomHttpService.post(url, reqDataObj, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"callTransferFTRRequest\",\n    value: function callTransferFTRRequest(reqData) {\n      var authDetails = CookieManagerService.getAuthDetails();\n      var data = {\n        channel: authDetails.channel,\n        lob: authDetails.lob,\n        source: authDetails.source\n      };\n      var reqDataObj = Object.assign({}, data, reqData);\n      var url = Config.contextPath + \"user/rest/v1.0/tag/postpaid/siebel/ftr\";\n      return CustomHttpService.post(url, reqDataObj, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"getFTRSource\",\n    value: function getFTRSource(type, multipleDynamicTaggingKey) {\n      switch (type) {\n        case CardLinkConstant.OUTSTANDING_CARD:\n          return DisabledTaggingStatus.SUB_HEADER_OUTSTANDING_FTR_TAGGING;\n\n        case CardLinkConstant.BILL_COMPARATOR_CARD:\n          return DisabledTaggingStatus.BILL_COMPARATOR_FTR_TAGGING;\n\n        case CardLinkConstant.PLAN_USAGE_CARD:\n          return DisabledTaggingStatus.PLAN_USAGE_FTR_TAGGING;\n\n        case CardLinkConstant.MULTIPLE_DYNAMIC_TAGGING:\n          return DisabledTaggingStatus.MULTIPLE_DYNAMIC_TAGGING;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"getAndCheckFtrSuccessMessage\",\n    value: function getAndCheckFtrSuccessMessage(ftrMessageSource, state) {\n      switch (ftrMessageSource) {\n        case DisabledTaggingStatus.SEND_INVOICE_FTR_TAGGING:\n          var message = this.getEmailSucccessPaymentPostedDate(state);\n          return message;\n\n        default:\n          return AppConstant.FTR_SUCCESS_MESSAGE;\n      }\n    }\n  }, {\n    key: \"getEmailSucccessPaymentPostedDate\",\n    value: function getEmailSucccessPaymentPostedDate(state) {\n      var message;\n      var paymentCardDetails = state.PaymentDetailsCardData && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent && state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent.paymentDetails;\n      var sendSmsTrackingIdsdata = state.PaymentDetailsCardData && state.PaymentDetailsCardData.sendSmsPaymentDetailDataSuccess;\n      var emailIds = state.customerInfo.customerInfo.emails.cardContent.primaryEmail || '';\n\n      if (sendSmsTrackingIdsdata && paymentCardDetails) {\n        var sucessDataPaymentHistory = this.getPaymentDetailSuccessObj(paymentCardDetails, sendSmsTrackingIdsdata);\n\n        if (sucessDataPaymentHistory && sucessDataPaymentHistory.length && sucessDataPaymentHistory.length > 0) {\n          message = \"Receipt for the payment made on \" + sucessDataPaymentHistory + \" has been sent to the registered email id: \" + emailIds;\n        } else {\n          message = \"Payment Receipt not sent !\";\n        }\n      }\n\n      return message;\n    }\n  }, {\n    key: \"getPaymentDetailSuccessObj\",\n    value: function getPaymentDetailSuccessObj(paymentDetailsCardDataResponse, paymentDetailSuccessTrackingId) {\n      var trackingIdSuccessArray = [];\n      var successPosteddate = [];\n\n      if (paymentDetailSuccessTrackingId && paymentDetailsCardDataResponse) {\n        var keys = paymentDetailSuccessTrackingId ? Object.keys(paymentDetailSuccessTrackingId) : [];\n        var values = paymentDetailSuccessTrackingId ? Object.values(paymentDetailSuccessTrackingId) : [];\n\n        if (keys && keys.length) {\n          for (var i = 0; i < keys.length; i++) {\n            if (values[i] === true) {\n              trackingIdSuccessArray.push(keys[i]);\n            }\n          }\n        } // let trackingIdSuccessArray = ['35849396', '35612604'];\n\n\n        if (trackingIdSuccessArray && trackingIdSuccessArray.length && trackingIdSuccessArray.length > 0) {\n          for (var _i = 0; _i < paymentDetailsCardDataResponse.length; _i++) {\n            for (var x = 0; x < trackingIdSuccessArray.length; x++) {\n              if (paymentDetailsCardDataResponse[_i]['trackingNumber'] === trackingIdSuccessArray[x]) {\n                successPosteddate.push(paymentDetailsCardDataResponse[_i]['paymentPostedDate']);\n              }\n            }\n          }\n        }\n\n        return successPosteddate;\n      }\n\n      return null;\n    }\n  }]);\n\n  return FTRService;\n}();\n\nexport default FTRService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/ftr.service.js"],"names":["CustomHttpService","Config","EncodeDecodeType","CookieManagerService","AppConstant","CardLinkConstant","DisabledTaggingStatus","FTRService","reqData","authDetails","getAuthDetails","data","channel","lob","source","transactionId","getItem","CORRELATION_ID","reqDataObj","Object","assign","url","contextPath","post","DEFAULT","type","multipleDynamicTaggingKey","OUTSTANDING_CARD","SUB_HEADER_OUTSTANDING_FTR_TAGGING","BILL_COMPARATOR_CARD","BILL_COMPARATOR_FTR_TAGGING","PLAN_USAGE_CARD","PLAN_USAGE_FTR_TAGGING","MULTIPLE_DYNAMIC_TAGGING","ftrMessageSource","state","SEND_INVOICE_FTR_TAGGING","message","getEmailSucccessPaymentPostedDate","FTR_SUCCESS_MESSAGE","paymentCardDetails","PaymentDetailsCardData","PaymentDetailsCardDataResponse","cardContent","paymentDetails","sendSmsTrackingIdsdata","sendSmsPaymentDetailDataSuccess","emailIds","customerInfo","emails","primaryEmail","sucessDataPaymentHistory","getPaymentDetailSuccessObj","length","paymentDetailsCardDataResponse","paymentDetailSuccessTrackingId","trackingIdSuccessArray","successPosteddate","keys","values","i","push","x"],"mappings":"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","sourcesContent":["import CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nimport DisabledTaggingStatus from '../constants/disabled-tagging.enum';\n\nclass FTRService {\n\n    static tagFTRRequest(reqData) {\n        let authDetails = CookieManagerService.getAuthDetails();\n        const data = {\n            channel: authDetails.channel,\n            lob: authDetails.lob,\n            source: authDetails.source\n        };\n        const transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n        const reqDataObj = Object.assign({}, data, reqData);\n        reqDataObj['transactionId'] = reqDataObj['transactionId'] || transactionId;\n        var url = Config.contextPath + \"user/rest/v1.0/tag/postpaid/siebel/ftr\";\n        return CustomHttpService.post(url, reqDataObj, {}, EncodeDecodeType.DEFAULT);\n    }\n    static callTransferFTRRequest(reqData) {\n        let authDetails = CookieManagerService.getAuthDetails();\n        const data = {\n            channel: authDetails.channel,\n            lob: authDetails.lob,\n            source: authDetails.source\n        };\n        const reqDataObj = Object.assign({}, data, reqData);\n        var url = Config.contextPath + \"user/rest/v1.0/tag/postpaid/siebel/ftr\";\n        return CustomHttpService.post(url, reqDataObj, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static getFTRSource(type, multipleDynamicTaggingKey) {\n        switch (type) {\n            case CardLinkConstant.OUTSTANDING_CARD:\n                return DisabledTaggingStatus.SUB_HEADER_OUTSTANDING_FTR_TAGGING;\n            case CardLinkConstant.BILL_COMPARATOR_CARD:\n                return DisabledTaggingStatus.BILL_COMPARATOR_FTR_TAGGING;\n            case CardLinkConstant.PLAN_USAGE_CARD:\n                return DisabledTaggingStatus.PLAN_USAGE_FTR_TAGGING;\n            case CardLinkConstant.MULTIPLE_DYNAMIC_TAGGING:\n                return DisabledTaggingStatus.MULTIPLE_DYNAMIC_TAGGING;\n\n            default:\n                break;\n        }\n    }\n\n    static getAndCheckFtrSuccessMessage(ftrMessageSource, state) {\n        switch (ftrMessageSource) {\n            case DisabledTaggingStatus.SEND_INVOICE_FTR_TAGGING:\n                const message = this.getEmailSucccessPaymentPostedDate(state);\n                return message;\n            default: return AppConstant.FTR_SUCCESS_MESSAGE;\n        }\n    }\n    static getEmailSucccessPaymentPostedDate(state) {\n        let message;\n        const paymentCardDetails = state.PaymentDetailsCardData &&\n            state.PaymentDetailsCardData.PaymentDetailsCardDataResponse &&\n            state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent &&\n            state.PaymentDetailsCardData.PaymentDetailsCardDataResponse.cardContent.paymentDetails;\n        let sendSmsTrackingIdsdata = state.PaymentDetailsCardData && state.PaymentDetailsCardData.sendSmsPaymentDetailDataSuccess;\n        const emailIds = state.customerInfo.customerInfo.emails.cardContent.primaryEmail || '';\n        if (sendSmsTrackingIdsdata && paymentCardDetails) {\n            const sucessDataPaymentHistory = this.getPaymentDetailSuccessObj(paymentCardDetails, sendSmsTrackingIdsdata);\n            if (sucessDataPaymentHistory && sucessDataPaymentHistory.length && sucessDataPaymentHistory.length > 0) {\n                message = \"Receipt for the payment made on \" + sucessDataPaymentHistory + \" has been sent to the registered email id: \" + emailIds;\n            }\n            else {\n                message = \"Payment Receipt not sent !\";\n            }\n\n        }\n        return message;\n    }\n    static getPaymentDetailSuccessObj(paymentDetailsCardDataResponse, paymentDetailSuccessTrackingId) {\n        let trackingIdSuccessArray = [];\n        let successPosteddate = [];\n        if (paymentDetailSuccessTrackingId && paymentDetailsCardDataResponse) {\n            const keys = paymentDetailSuccessTrackingId ? Object.keys(paymentDetailSuccessTrackingId) : [];\n            const values = paymentDetailSuccessTrackingId ? Object.values(paymentDetailSuccessTrackingId) : [];\n            if (keys && keys.length) {\n                for (let i = 0; i < keys.length; i++) {\n                    if (values[i] === true) {\n                        trackingIdSuccessArray.push(keys[i]);\n                    }\n                }\n            }\n            // let trackingIdSuccessArray = ['35849396', '35612604'];\n            if (trackingIdSuccessArray && trackingIdSuccessArray.length && trackingIdSuccessArray.length > 0) {\n                for (let i = 0; i < paymentDetailsCardDataResponse.length; i++) {\n                    for (let x = 0; x < trackingIdSuccessArray.length; x++) {\n                        if (paymentDetailsCardDataResponse[i]['trackingNumber'] === trackingIdSuccessArray[x]) {\n                            successPosteddate.push(paymentDetailsCardDataResponse[i]['paymentPostedDate']);\n                        }\n                    }\n\n                }\n            }\n            return successPosteddate;\n        }\n        return null;\n\n    }\n}\n\nexport default FTRService;\n"]},"metadata":{},"sourceType":"module"}