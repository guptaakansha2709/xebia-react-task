{"ast":null,"code":"var snackbarMessage = {};\nexport var fetchLoginData = function fetchLoginData(loginObj) {\n  return function (dispatch) {\n    dispatch(resetState());\n    dispatch(loginApiLoading());\n    LoginService.fetchLoginApi(loginObj).then(function (response) {\n      if (response && response.data) {\n        LoginService.loginDataHandler(response.data);\n        dispatch(authorizeUser());\n        dispatch(loginApiSuccess(response));\n        dispatch(openSnackbarRequest(null, SnackbarMessages.LOGIN_SUCCESS_MSG));\n      }\n    }, function (error) {\n      dispatch(unauthorizeUser());\n      dispatch(loginApiFailure(error));\n      dispatch(openSnackbarRequest(error, SnackbarMessages.LOGIN_FAILURE));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/tasks/src/actions/login.action.js"],"names":["snackbarMessage","fetchLoginData","loginObj","dispatch","resetState","loginApiLoading","LoginService","fetchLoginApi","then","response","data","loginDataHandler","authorizeUser","loginApiSuccess","openSnackbarRequest","SnackbarMessages","LOGIN_SUCCESS_MSG","error","unauthorizeUser","loginApiFailure","LOGIN_FAILURE"],"mappings":"AAEA,IAAIA,eAAe,GAAG,EAAtB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAClDA,IAAAA,QAAQ,CAACC,UAAU,EAAX,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACAC,IAAAA,YAAY,CAACC,aAAb,CAA2BL,QAA3B,EAAqCM,IAArC,CACI,UAAAC,QAAQ,EAAI;AACR,UAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAzB,EAA+B;AAC3BJ,QAAAA,YAAY,CAACK,gBAAb,CAA8BF,QAAQ,CAACC,IAAvC;AACAP,QAAAA,QAAQ,CAACS,aAAa,EAAd,CAAR;AACAT,QAAAA,QAAQ,CAACU,eAAe,CAACJ,QAAD,CAAhB,CAAR;AACAN,QAAAA,QAAQ,CAACW,mBAAmB,CAAC,IAAD,EAAOC,gBAAgB,CAACC,iBAAxB,CAApB,CAAR;AACH;AACJ,KARL,EASI,UAAAC,KAAK,EAAI;AACLd,MAAAA,QAAQ,CAACe,eAAe,EAAhB,CAAR;AACAf,MAAAA,QAAQ,CAACgB,eAAe,CAACF,KAAD,CAAhB,CAAR;AACAd,MAAAA,QAAQ,CAACW,mBAAmB,CAACG,KAAD,EAAQF,gBAAgB,CAACK,aAAzB,CAApB,CAAR;AACH,KAbL;AAeH,GAlBqC;AAAA,CAA/B","sourcesContent":["\n\nlet snackbarMessage = {}\n\nexport const fetchLoginData = loginObj => dispatch => {\n    dispatch(resetState());\n    dispatch(loginApiLoading());\n    LoginService.fetchLoginApi(loginObj).then(\n        response => {\n            if (response && response.data) {\n                LoginService.loginDataHandler(response.data);\n                dispatch(authorizeUser())\n                dispatch(loginApiSuccess(response));\n                dispatch(openSnackbarRequest(null, SnackbarMessages.LOGIN_SUCCESS_MSG));\n            }\n        },\n        error => {\n            dispatch(unauthorizeUser());\n            dispatch(loginApiFailure(error));\n            dispatch(openSnackbarRequest(error, SnackbarMessages.LOGIN_FAILURE));\n        }\n    );\n}\n"]},"metadata":{},"sourceType":"module"}