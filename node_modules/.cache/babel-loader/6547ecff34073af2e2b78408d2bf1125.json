{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\n\nvar LeapService =\n/*#__PURE__*/\nfunction () {\n  function LeapService() {\n    _classCallCheck(this, LeapService);\n  }\n\n  _createClass(LeapService, null, [{\n    key: \"fetchNetworkDataTableRequest\",\n    value: function fetchNetworkDataTableRequest(reqData) {\n      var transactionId = reqData['transactionId'] || \"\";\n      var msisdn = CookieManagerService.getItem(AppConstant.MSISDN) || '';\n      var leapStartDate = reqData['leapStartDate'] || \"\";\n      var leapEndDate = reqData['leapEndDate'] || \"\";\n      var url = Config.contextPath;\n\n      if (reqData['cdrType'] && reqData['cdrType'].toLocaleLowerCase() === \"data\") {\n        url = url + \"user/rest/v1.0/postpaid/get-network-data-table\";\n      } else if (reqData['cdrType'] && reqData['cdrType'].toLocaleLowerCase() === \"voice\") {\n        url = url + \"user/rest/v1.0/postpaid/get-network-call-table\";\n      }\n\n      url = url + \"?transactionId=\" + transactionId + \"&msisdn=\" + msisdn + \"&fromDate=\" + leapStartDate + \"&toDate=\" + leapEndDate;\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"getLeapDefaultStartDate\",\n    value: function getLeapDefaultStartDate(dayGap, from) {\n      var today = new Date();\n      var startDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n      startDate.setDate(today.getDate() - dayGap - from);\n      return startDate.getTime();\n    }\n  }, {\n    key: \"getLeapDefaultEndDate\",\n    value: function getLeapDefaultEndDate(dayGap) {\n      var today = new Date();\n      var endDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n      endDate.setDate(today.getDate() - dayGap);\n      return endDate.getTime();\n    }\n  }, {\n    key: \"getLeapCalendarStartDate\",\n    value: function getLeapCalendarStartDate(dayGap, leapCalendarStartLimit) {\n      var today = new Date();\n      var backDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n      backDate.setDate(backDate.getDate() - dayGap - leapCalendarStartLimit);\n      return backDate.getTime();\n    }\n  }, {\n    key: \"fetchLeapDetailsRequest\",\n    value: function fetchLeapDetailsRequest(reqData) {\n      var authDetails = CookieManagerService.getAuthDetails();\n      var channel = authDetails.channel || \"\";\n      var transactionId = reqData['transactionId'] || \"\";\n      var scenarioId = reqData['scenarioId'] || \"\";\n      var voc = reqData['scenarioName'] || \"\";\n      var notes = reqData['notes'] || \"\";\n      var customerCategory = reqData['customerCategory'] || \"\";\n      var address = reqData['address'] ? encodeURIComponent(reqData['address']) : \"\";\n      var msisdn = CookieManagerService.getItem(AppConstant.MSISDN) || '';\n      var url = Config.contextPath + \"user/rest/v1.0/leap/details?msisdn=\" + msisdn + \"&transactionId=\" + transactionId + \"&scenarioID=\" + scenarioId + \"&channel=\" + channel + \"&address=\" + address + \"&voc=\" + voc + \"&notes=\" + notes + \"&customerCategory=\" + customerCategory + \"&isSiebel=true\";\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"verifyCustomerLocationRequest\",\n    value: function verifyCustomerLocationRequest(reqData) {\n      var msisdn = CookieManagerService.getItem(AppConstant.MSISDN) || '';\n      reqData['msisdn'] = msisdn;\n      var url = Config.contextPath + \"user/rest/v1.0/postpaid/verify-customer-location\";\n      return CustomHttpService.post(url, reqData, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"getDifferenceInDays\",\n    value: function getDifferenceInDays(date1, date2) {\n      var one_day = 1000 * 60 * 60 * 24; //Get 1 day in milliseconds      \n\n      var difference_ms = date2 - date1; // Calculate the difference in milliseconds  \n\n      return Math.round(difference_ms / one_day); // Convert back to days and return \n    }\n  }]);\n\n  return LeapService;\n}();\n\nexport default LeapService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/leap.service.js"],"names":["CustomHttpService","Config","EncodeDecodeType","CookieManagerService","AppConstant","LeapService","reqData","transactionId","msisdn","getItem","MSISDN","leapStartDate","leapEndDate","url","contextPath","toLocaleLowerCase","get","DEFAULT","dayGap","from","today","Date","startDate","getFullYear","getMonth","getDate","setDate","getTime","endDate","leapCalendarStartLimit","backDate","authDetails","getAuthDetails","channel","scenarioId","voc","notes","customerCategory","address","encodeURIComponent","post","date1","date2","one_day","difference_ms","Math","round"],"mappings":"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","sourcesContent":["import CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\n\nclass LeapService {\n\n    static fetchNetworkDataTableRequest(reqData) {\n        const transactionId = reqData['transactionId'] || \"\";\n        const msisdn = CookieManagerService.getItem(AppConstant.MSISDN) || '';\n        const leapStartDate = reqData['leapStartDate'] || \"\";\n        const leapEndDate = reqData['leapEndDate'] || \"\";\n        let url = Config.contextPath\n        if(reqData['cdrType'] && reqData['cdrType'].toLocaleLowerCase() === \"data\") {\n            url = url + \"user/rest/v1.0/postpaid/get-network-data-table\";\n        } else if(reqData['cdrType'] && reqData['cdrType'].toLocaleLowerCase() === \"voice\") {\n            url = url + \"user/rest/v1.0/postpaid/get-network-call-table\";\n        }\n        url = url + \"?transactionId=\" + transactionId + \"&msisdn=\" + msisdn + \"&fromDate=\" + leapStartDate + \"&toDate=\" + leapEndDate;\n        return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static getLeapDefaultStartDate(dayGap, from) {\n        const today = new Date();\n\t\tconst startDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        startDate.setDate(today.getDate() - dayGap - from);\n        return startDate.getTime();\n    }\n\n    static getLeapDefaultEndDate(dayGap) {\n        const today = new Date();\n\t\tconst endDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n\t\tendDate.setDate(today.getDate() - dayGap);\n        return endDate.getTime();\n    }\n\n    static getLeapCalendarStartDate(dayGap, leapCalendarStartLimit) {\n        const today = new Date();\n        const backDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        backDate.setDate(backDate.getDate() - dayGap - leapCalendarStartLimit);\n        return backDate.getTime();\n    }\n\n    static fetchLeapDetailsRequest(reqData) {\n        let authDetails = CookieManagerService.getAuthDetails();\n        const channel = authDetails.channel || \"\";\n        const transactionId = reqData['transactionId'] || \"\";\n        const scenarioId = reqData['scenarioId'] || \"\";\n        const voc = reqData['scenarioName'] || \"\";\n        const notes = reqData['notes'] || \"\";\n        const customerCategory = reqData['customerCategory'] || \"\";\n        const address = reqData['address'] ? encodeURIComponent(reqData['address']) : \"\";\n        const msisdn = CookieManagerService.getItem(AppConstant.MSISDN) || '';\n        const url = Config.contextPath + \"user/rest/v1.0/leap/details?msisdn=\" + msisdn + \"&transactionId=\" + transactionId + \"&scenarioID=\" + scenarioId + \"&channel=\" + channel + \"&address=\" + address + \"&voc=\" + voc + \"&notes=\" + notes + \"&customerCategory=\" + customerCategory + \"&isSiebel=true\";\n        return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static verifyCustomerLocationRequest(reqData) {\n        const msisdn = CookieManagerService.getItem(AppConstant.MSISDN) || '';\n        reqData['msisdn'] = msisdn;\n        const url = Config.contextPath + \"user/rest/v1.0/postpaid/verify-customer-location\";\n        return CustomHttpService.post(url, reqData, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static getDifferenceInDays(date1, date2) {    \n\t\tvar one_day=1000*60*60*24;    //Get 1 day in milliseconds      \n\t\tvar difference_ms = date2 - date1;        // Calculate the difference in milliseconds  \n\t\treturn Math.round(difference_ms/one_day); \t\t// Convert back to days and return \n\t}\n}\n\nexport default LeapService;\n"]},"metadata":{},"sourceType":"module"}