{"ast":null,"code":"import SRSummaryService from \"../services/sr-summary-service\";\nimport { SRSummaryTabActionType } from \"../actiontype/sr-summary-tab.actiontype\";\nexport var populateSRSummaryTab = function populateSRSummaryTab(setCustomerLSINumber) {\n  return function (dispatch, getState) {\n    SRSummaryService.fetchSRDSummaryTabApi().then(function (response) {\n      if (response && response.data && response.data.result) {\n        dispatch(populateSRSummaryPieChartData(response.data.result));\n      }\n    }, function (error) {// console.log(error);\n    });\n  };\n};\n\nvar populateSRSummaryPieChartData = function populateSRSummaryPieChartData(pieChartData) {\n  return {\n    type: SRSummaryTabActionType.SET_PIE_CHART_DATA,\n    payload: pieChartData\n  };\n};","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/actions/sr-summary-tab.action.js"],"names":["SRSummaryService","SRSummaryTabActionType","populateSRSummaryTab","setCustomerLSINumber","dispatch","getState","fetchSRDSummaryTabApi","then","response","data","result","populateSRSummaryPieChartData","error","pieChartData","type","SET_PIE_CHART_DATA","payload"],"mappings":"AAAA,OAAQA,gBAAR,MAA+B,gCAA/B;AACA,SAASC,sBAAT,QAAuC,yCAAvC;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,oBAAD;AAAA,SAA0B,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAClFL,IAAAA,gBAAgB,CAACM,qBAAjB,GAAyCC,IAAzC,CACI,UAAAC,QAAQ,EAAI;AACR,UAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAArB,IAA6BD,QAAQ,CAACC,IAAT,CAAcC,MAA/C,EAAuD;AACnDN,QAAAA,QAAQ,CAACO,6BAA6B,CAACH,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAA9B,CAAR;AACH;AACJ,KALL,EAMI,UAAAE,KAAK,EAAI,CACL;AACH,KARL;AAUH,GAXmC;AAAA,CAA7B;;AAaP,IAAMD,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACE,YAAD,EAAkB;AACpD,SAAO;AACHC,IAAAA,IAAI,EAAEb,sBAAsB,CAACc,kBAD1B;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH,CALD","sourcesContent":["import  SRSummaryService  from \"../services/sr-summary-service\";\nimport { SRSummaryTabActionType } from \"../actiontype/sr-summary-tab.actiontype\";\n\nexport const populateSRSummaryTab = (setCustomerLSINumber) => (dispatch, getState) => {\n    SRSummaryService.fetchSRDSummaryTabApi().then(\n        response => {\n            if (response && response.data && response.data.result) {\n                dispatch(populateSRSummaryPieChartData(response.data.result));\n            }\n        }, \n        error => {\n            // console.log(error);\n        }\n    )\n}\n\nconst populateSRSummaryPieChartData = (pieChartData) => {\n    return {\n        type: SRSummaryTabActionType.SET_PIE_CHART_DATA,\n        payload: pieChartData\n    }\n}"]},"metadata":{},"sourceType":"module"}