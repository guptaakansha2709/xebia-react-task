{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/main-content-right/b2b-product-details/b2b-product-details.smart.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppLoader from '../../AppLoader';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { connect } from 'react-redux';\nimport { updateCurrentScenarioId as _updateCurrentScenarioId } from '../../../../actions/scenario.action';\nimport { CardLinkConstant } from '../../../../constants/card-link.constant';\nimport Tooltips from '../../tooltip/tooltip.dumb';\n\nvar ProductDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductDetails, _Component);\n\n  function ProductDetails(props) {\n    var _this;\n\n    _classCallCheck(this, ProductDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductDetails).call(this, props));\n    _this.tooltipPosition = \"bottom-start\";\n\n    _this.handleProductDetailsScenario = function (item) {\n      if (item && item.value) {\n        _this.props.updateCurrentScenarioId(item.value);\n      }\n    };\n\n    _this.onExpansionChange = function () {\n      return function (event, expanded) {\n        _this.setState({\n          'expanded': expanded\n        });\n      };\n    };\n\n    _this.state = {\n      cardLoader: true,\n      expanded: true\n    };\n    _this.populateProductDetails = _this.populateProductDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onExpansionChange = _this.onExpansionChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickTagIcon = _this.onClickTagIcon.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProductDetails, [{\n    key: \"onClickTagIcon\",\n    value: function onClickTagIcon(e, cardLinks) {\n      e.stopPropagation();\n      this.props.cardLinksHandler(cardLinks, CardLinkConstant.CRM_CODE_TYPE, CardLinkConstant.HANDSET_DETAILS_CARD);\n    }\n  }, {\n    key: \"populateProductDetails\",\n    value: function populateProductDetails() {\n      var currentLSIDetails = null;\n\n      if (this.props && this.props.customerLSIDetails && this.props.customerLSINumber) {\n        for (var i = 0; i < this.props.customerLSIDetails.length; i++) {\n          if (this.props.customerLSIDetails[i].lsiNumber === this.props.customerLSINumber) {\n            currentLSIDetails = this.props.customerLSIDetails[i];\n          }\n        }\n\n        this.showProductDetails = true;\n        this.ProductDetails['product'] = currentLSIDetails && currentLSIDetails.productName ? currentLSIDetails.productName : '';\n        this.ProductDetails['siName'] = currentLSIDetails && currentLSIDetails.productDescription ? currentLSIDetails.productDescription : '';\n        this.ProductDetails['activationDate'] = currentLSIDetails && currentLSIDetails.activationDate ? currentLSIDetails.activationDate : '';\n        this.ProductDetails['bandwidth'] = currentLSIDetails && currentLSIDetails.bandwidth ? currentLSIDetails.bandwidth : '';\n        this.ProductDetails['cityA'] = currentLSIDetails && currentLSIDetails.addressA.addressLine1 ? currentLSIDetails.addressA.addressLine1 : '';\n        this.ProductDetails['cityB'] = currentLSIDetails && currentLSIDetails.addressB.addressLine1 ? currentLSIDetails.addressB.addressLine1 : '';\n        this.ProductDetails[\"platform\"] = this.props.platform ? this.props.platform : \"\";\n      } else {\n        this.ProductDetails = {};\n        this.ProductDetails['product'] = \"xxxx\";\n        this.ProductDetails['activationDate'] = \"xxxx\";\n        this.ProductDetails['bandwidth'] = \"xxxx\";\n        this.ProductDetails['cityA'] = \"xxxx\";\n        this.ProductDetails['cityB'] = \"xxxx\";\n        this.ProductDetails['siName'] = \"xxxx\";\n        this.ProductDetails['platform'] = \"xxxx\";\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.expandCard !== prevProps.expandCard) {\n        this.setState({\n          'expanded': this.props.expandCard\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var loading = this.props.loading;\n      this.populateProductDetails();\n      return React.createElement(\"div\", {\n        className: \"mt-10 \" + this.props.classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(ExpansionPanel, {\n        onChange: this.onExpansionChange(),\n        expanded: this.state.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        className: this.props.classes.cardHeader + \" card-header\",\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"PRODUCT DETAILS\")), React.createElement(ExpansionPanelDetails, {\n        className: classes.panel + \" card-data \" + (this.props.b2bCardLoading === true ? \"fade-background\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"width-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.ProductDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"width-100 inline-block text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey fs-12 text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"PRODUCT\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.ProductDetails['product'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.ProductDetails['product']))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"PLATFORM\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.ProductDetails['platform'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.ProductDetails['platform']))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey fs-12 text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"SI NAME\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.ProductDetails['siName'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.ProductDetails['siName']))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"BANDWIDTH\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.ProductDetails['bandwidth'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.ProductDetails['bandwidth']))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"CITY A\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.ProductDetails['cityA'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.ProductDetails['cityA']))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"CITY B\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.ProductDetails['cityB'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.ProductDetails['cityB']))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"ACTIVE START DATE\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.ProductDetails['activationDate'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.ProductDetails['activationDate']))))))), this.props.b2bCardLoading ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(AppLoader, {\n        className: \"color-green\",\n        cardLoader: this.props.b2bCardLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })) : null))));\n    }\n  }]);\n\n  return ProductDetails;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    cardHeader: {\n      'border-bottom': 'solid #ccc 0.5px'\n    },\n    tagIcon: {\n      top: '5px',\n      position: 'relative',\n      margin: '0px 8px',\n      textAlign: 'center',\n      cursor: 'pointer',\n      width: 15\n    },\n    benefitsIcon: {\n      maxHeight: '35px',\n      verticalAlign: 'middle'\n    },\n    cardContainer: {\n      border: 'solid #ccc 0.5px'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isCustomerFound: state.customerInfo.isCustomerFound,\n    customerInfo: state.customerInfo.customerInfo,\n    customerLSIDetails: state.customerInfo.lsiDetails,\n    customerLSINumber: state.customerInfo.customerLSINumber,\n    currentLSIDetails: state.customerInfo.currentLSIDetails,\n    b2bCardLoading: state.customerInfo.b2bCardLoading,\n    platform: state.SystemStatusCardData.MEDIA\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCurrentScenarioId: function updateCurrentScenarioId(id) {\n      return dispatch(_updateCurrentScenarioId(id));\n    }\n  };\n};\n\nProductDetails.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProductDetails));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/main-content-right/b2b-product-details/b2b-product-details.smart.js"],"names":["React","Component","PropTypes","AppLoader","withStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","connect","updateCurrentScenarioId","CardLinkConstant","Tooltips","ProductDetails","props","tooltipPosition","handleProductDetailsScenario","item","value","onExpansionChange","event","expanded","setState","state","cardLoader","populateProductDetails","bind","onClickTagIcon","e","cardLinks","stopPropagation","cardLinksHandler","CRM_CODE_TYPE","HANDSET_DETAILS_CARD","currentLSIDetails","customerLSIDetails","customerLSINumber","i","length","lsiNumber","showProductDetails","productName","productDescription","activationDate","bandwidth","addressA","addressLine1","addressB","platform","prevProps","expandCard","classes","loading","card","cardHeader","heading","panel","b2bCardLoading","styles","theme","root","width","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","tagIcon","top","position","margin","textAlign","cursor","benefitsIcon","maxHeight","verticalAlign","cardContainer","border","mapStateToProps","isCustomerFound","customerInfo","lsiDetails","SystemStatusCardData","MEDIA","mapDispatchToProps","dispatch","id","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport AppLoader from '../../AppLoader';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { connect } from 'react-redux';\nimport { updateCurrentScenarioId } from '../../../../actions/scenario.action';\nimport { CardLinkConstant } from '../../../../constants/card-link.constant';\nimport Tooltips from '../../tooltip/tooltip.dumb';\n\nclass ProductDetails extends Component {\n\n    tooltipPosition = \"bottom-start\";\n    constructor(props) {\n        super(props);\n        this.state = { cardLoader: true, expanded: true};\n        this.populateProductDetails = this.populateProductDetails.bind(this);\n        this.onExpansionChange = this.onExpansionChange.bind(this);\n        this.onClickTagIcon = this.onClickTagIcon.bind(this);\n    }\n\n    onClickTagIcon(e, cardLinks) {\n        e.stopPropagation();\n        this.props.cardLinksHandler(cardLinks, CardLinkConstant.CRM_CODE_TYPE, CardLinkConstant.HANDSET_DETAILS_CARD);\n    }\n    handleProductDetailsScenario = (item) => {\n        if (item && item.value) {\n            this.props.updateCurrentScenarioId(item.value);\n        }\n    }\n    populateProductDetails() {\n        var currentLSIDetails = null;\n        if (this.props && this.props.customerLSIDetails && this.props.customerLSINumber) {\n            for (var i = 0; i < this.props.customerLSIDetails.length; i++) { \n               if (this.props.customerLSIDetails[i].lsiNumber === this.props.customerLSINumber) {\n                   currentLSIDetails = this.props.customerLSIDetails[i];\n               }\n            }\n            this.showProductDetails = true;\n            this.ProductDetails['product'] = currentLSIDetails && currentLSIDetails.productName ? currentLSIDetails.productName : '';\n            this.ProductDetails['siName'] = currentLSIDetails && currentLSIDetails.productDescription ? currentLSIDetails.productDescription : '';\n            this.ProductDetails['activationDate'] = currentLSIDetails && currentLSIDetails.activationDate ? currentLSIDetails.activationDate : '';\n            this.ProductDetails['bandwidth'] = currentLSIDetails && currentLSIDetails.bandwidth ? currentLSIDetails.bandwidth : '';\n            this.ProductDetails['cityA'] = currentLSIDetails && currentLSIDetails.addressA.addressLine1 ? currentLSIDetails.addressA.addressLine1  : '';\n            this.ProductDetails['cityB'] = currentLSIDetails && currentLSIDetails.addressB.addressLine1 ? currentLSIDetails.addressB.addressLine1  : '';\n            this.ProductDetails[\"platform\"] = this.props.platform ? this.props.platform: \"\";\n        } else {\n            this.ProductDetails = {};\n            this.ProductDetails['product'] = \"xxxx\";\n            this.ProductDetails['activationDate'] = \"xxxx\";\n            this.ProductDetails['bandwidth'] = \"xxxx\";\n            this.ProductDetails['cityA'] = \"xxxx\";\n            this.ProductDetails['cityB'] = \"xxxx\";\n            this.ProductDetails['siName'] = \"xxxx\";\n            this.ProductDetails['platform'] = \"xxxx\";\n        }\n    }\n\n\n    onExpansionChange = () => (event, expanded) => {\n        this.setState({ 'expanded': expanded });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.expandCard !== prevProps.expandCard) {\n            this.setState({ 'expanded': this.props.expandCard });\n        }\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        const { loading} = this.props;\n        this.populateProductDetails();\n\n        return (\n            <div className={\"mt-10 \" + (this.props.classes.card)}>\n                <ExpansionPanel onChange={this.onExpansionChange()} expanded={this.state.expanded} >\n                    <ExpansionPanelSummary className={this.props.classes.cardHeader + \" card-header\"} expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.heading}>\n                            PRODUCT DETAILS\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.panel + \" card-data \" + (this.props.b2bCardLoading === true? \"fade-background\":\"\")}>\n                        <div className=\"width-100\">\n                            <div className={classes.ProductDetails}>\n                                <div className=\"width-100 inline-block text-left\">\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey fs-12 text-uppercase\">PRODUCT</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.ProductDetails['product']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                    {this.ProductDetails['product']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">PLATFORM</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.ProductDetails['platform']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.ProductDetails['platform']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey fs-12 text-uppercase\">SI NAME</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.ProductDetails['siName']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.ProductDetails['siName']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">BANDWIDTH</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.ProductDetails['bandwidth']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.ProductDetails['bandwidth']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">CITY A</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.ProductDetails['cityA']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.ProductDetails['cityA']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">CITY B</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.ProductDetails['cityB']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.ProductDetails['cityB']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">ACTIVE START DATE</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.ProductDetails['activationDate']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.ProductDetails['activationDate']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            {this.props.b2bCardLoading ? <div><AppLoader className=\"color-green\" cardLoader={this.props.b2bCardLoading} /></div> : null}\n                        </div>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        )\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    cardHeader: {\n        'border-bottom': 'solid #ccc 0.5px',\n    },\n    tagIcon: {\n        top: '5px',\n        position: 'relative',\n        margin: '0px 8px',\n        textAlign: 'center',\n        cursor: 'pointer',\n        width: 15,\n    },\n    benefitsIcon: {\n        maxHeight: '35px',\n        verticalAlign: 'middle',\n    },\n    cardContainer: {\n        border: 'solid #ccc 0.5px',\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        isCustomerFound: state.customerInfo.isCustomerFound,\n        customerInfo: state.customerInfo.customerInfo,\n        customerLSIDetails: state.customerInfo.lsiDetails,\n        customerLSINumber: state.customerInfo.customerLSINumber,\n        currentLSIDetails: state.customerInfo.currentLSIDetails,\n        b2bCardLoading: state.customerInfo.b2bCardLoading,\n        platform: state.SystemStatusCardData.MEDIA\n\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    updateCurrentScenarioId: id => dispatch(updateCurrentScenarioId(id))\n});\n\nProductDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProductDetails));"]},"metadata":{},"sourceType":"module"}