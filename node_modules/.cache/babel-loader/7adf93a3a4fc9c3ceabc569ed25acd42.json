{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/main-content-right/b2b-system-status/b2b-system-status.smart.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppLoader from '../../AppLoader';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { connect } from 'react-redux';\nimport { CardLinkConstant } from '../../../../constants/card-link.constant';\nimport Tooltips from '../../tooltip/tooltip.dumb';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { refreshSystemStatus as _refreshSystemStatus } from '../../../../actions/b2b-system-status.action';\nimport AnalyticsService from '../../../../services/analytics-service';\n\nvar SystemStatus =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SystemStatus, _Component);\n\n  function SystemStatus(props) {\n    var _this;\n\n    _classCallCheck(this, SystemStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SystemStatus).call(this, props));\n\n    _this.handleHandsetDetailsScenario = function (item) {\n      if (item && item.value) {\n        _this.props.updateCurrentScenarioId(item.value);\n      }\n    };\n\n    _this.onExpansionChange = function () {\n      return function (event, expanded) {\n        _this.setState({\n          'expanded': expanded\n        });\n      };\n    };\n\n    _this.state = {\n      cardLoader: true,\n      expanded: true\n    };\n    _this.populateSystemStatusCardDetails = _this.populateSystemStatusCardDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onExpansionChange = _this.onExpansionChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickTagIcon = _this.onClickTagIcon.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRefreshButtonClicked = _this.onRefreshButtonClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SystemStatus, [{\n    key: \"onClickTagIcon\",\n    value: function onClickTagIcon(e, cardLinks) {\n      e.stopPropagation();\n      this.props.cardLinksHandler(cardLinks, CardLinkConstant.CRM_CODE_TYPE, CardLinkConstant.HANDSET_DETAILS_CARD);\n    }\n  }, {\n    key: \"fetchECRMStatusColor\",\n    value: function fetchECRMStatusColor(ecrmStatus) {\n      if (ecrmStatus === \"Active\") return \"color-green\";else if (ecrmStatus === \"xxxx\") return \"black\";else return \"color-red\";\n    }\n  }, {\n    key: \"fetchOutageStatusColor\",\n    value: function fetchOutageStatusColor(outage) {\n      if (outage === \"No\") return \"color-green\";else if (outage === \"Yes\") return \"color-red\";else return \"black\";\n    }\n  }, {\n    key: \"populateSystemStatusCardDetails\",\n    value: function populateSystemStatusCardDetails() {\n      this.systemStatus = {};\n\n      if (this.props && this.props.SystemStatusCardData) {\n        this.showHandsetDetails = true;\n        this.systemStatus['eCRMStatus'] = this.props.SystemStatusCardData['LSI_STATUS'] ? this.props.SystemStatusCardData['LSI_STATUS'] : 'xxxx';\n        this.systemStatus['eCRMStatus_color'] = this.fetchECRMStatusColor(this.systemStatus[\"eCRMStatus\"]);\n        this.systemStatus[\"router\"] = \"xxxx\";\n        this.systemStatus[\"outage\"] = this.props.SystemStatusCardData['OUTAGE'] ? this.props.SystemStatusCardData['OUTAGE'] : 'xxxx';\n\n        if (this.props.SystemStatusCardData['Alarms']) {\n          this.systemStatus[\"alarms\"] = this.props.SystemStatusCardData['Alarms'];\n          this.systemStatus[\"showAlarms\"] = true;\n        }\n\n        this.systemStatus[\"alarms\"] = this.props.SystemStatusCardData['Alarms'] ? this.props.SystemStatusCardData['Alarms'] : null;\n        this.systemStatus[\"outage_color\"] = this.fetchOutageStatusColor(this.systemStatus[\"outage\"]);\n        this.systemStatus[\"outage_color\"] = this.fetchOutageStatusColor(this.systemStatus[\"outage\"]);\n      } else {\n        this.systemStatus['eCRMStatus'] = \"xxxx\";\n        this.systemStatus['eCRMStatus_color'] = \"black\";\n        this.systemStatus[\"outage_color\"] = \"black\";\n        this.systemStatus[\"router\"] = \"xxxx\";\n        this.systemStatus[\"outage\"] = \"xxxx\";\n      }\n\n      if (this.props.SystemStatusCardLinkStatus) {\n        this.systemStatus['linkStatus'] = this.props.SystemStatusCardLinkStatus;\n\n        if (this.props.SystemStatusCardLinkStatus === 'Link UP') {\n          this.systemStatus['linkStatus_color'] = \"color-green\";\n        } else {\n          this.systemStatus['linkStatus_color'] = \"color-red\";\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.expandCard !== prevProps.expandCard) {\n        this.setState({\n          'expanded': this.props.expandCard\n        });\n      }\n    }\n  }, {\n    key: \"onRefreshButtonClicked\",\n    value: function onRefreshButtonClicked(event) {\n      event.stopPropagation();\n      this.props.refreshSystemStatus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var SystemStatusCardData = this.props.SystemStatusCardData;\n      this.populateSystemStatusCardDetails();\n      var showAlarm = this.systemStatus[\"showAlarms\"];\n      var showLinkStatus = this.systemStatus[\"linkStatus\"];\n      return React.createElement(\"div\", {\n        className: \"mt-10 \" + this.props.classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(ExpansionPanel, {\n        onChange: this.onExpansionChange(),\n        expanded: this.state.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        className: this.props.classes.cardHeader + \" card-header\",\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"SYSTEM STATUS\"), React.createElement(\"div\", {\n        onClick: function onClick(e) {\n          _this2.onRefreshButtonClicked(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(RefreshIcon, {\n        className: classes.refreshIconContainer + (SystemStatusCardData.refreshing ? \" refresh-rotate\" : ''),\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))), React.createElement(ExpansionPanelDetails, {\n        className: classes.panel + \" card-data \" + (SystemStatusCardData.loader === true ? \"fade-background\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"width-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.handsetDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"width-100 inline-block text-left \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"eCRM Status\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150 \" + this.systemStatus[\"eCRMStatus_color\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus['eCRMStatus'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.systemStatus['eCRMStatus']))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"OUTAGE\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150 \" + this.systemStatus[\"outage_color\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus[\"outage\"],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, this.systemStatus[\"outage\"]))))), showAlarm ? React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"ENOC Alarm\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150 color-red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus[\"alarms\"],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.systemStatus[\"alarms\"]))))) : null, showLinkStatus ? React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"LINK STATUS\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150 \" + this.systemStatus[\"linkStatus_color\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus['linkStatus'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.systemStatus['linkStatus']))))) : null))), SystemStatusCardData.loader && this.state.expanded ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(AppLoader, {\n        className: \"color-green\",\n        cardLoader: SystemStatusCardData.loader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })) : null)));\n    }\n  }]);\n\n  return SystemStatus;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    cardHeader: {\n      'border-bottom': 'solid #ccc 0.5px'\n    },\n    tagIcon: {\n      top: '5px',\n      position: 'relative',\n      margin: '8px 8px',\n      textAlign: 'center',\n      cursor: 'pointer',\n      width: 15\n    },\n    benefitsIcon: {\n      maxHeight: '35px',\n      verticalAlign: 'middle'\n    },\n    cardContainer: {\n      border: 'solid #ccc 0.5px'\n    },\n    refreshIconContainer: {\n      margin: '1px 10px',\n      height: '0.8em',\n      width: '0.8em'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    SystemStatusCardData: state.SystemStatusCardData,\n    SystemStatusCardLinkStatus: state.LsiPingStatusTabData.LsiPingStatusApiLinkStatus\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    refreshSystemStatus: function refreshSystemStatus() {\n      return dispatch(_refreshSystemStatus());\n    }\n  };\n};\n\nSystemStatus.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SystemStatus));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/main-content-right/b2b-system-status/b2b-system-status.smart.js"],"names":["React","Component","PropTypes","AppLoader","withStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","connect","CardLinkConstant","Tooltips","RefreshIcon","refreshSystemStatus","AnalyticsService","SystemStatus","props","handleHandsetDetailsScenario","item","value","updateCurrentScenarioId","onExpansionChange","event","expanded","setState","state","cardLoader","populateSystemStatusCardDetails","bind","onClickTagIcon","onRefreshButtonClicked","e","cardLinks","stopPropagation","cardLinksHandler","CRM_CODE_TYPE","HANDSET_DETAILS_CARD","ecrmStatus","outage","systemStatus","SystemStatusCardData","showHandsetDetails","fetchECRMStatusColor","fetchOutageStatusColor","SystemStatusCardLinkStatus","prevProps","expandCard","classes","showAlarm","showLinkStatus","card","cardHeader","heading","refreshIconContainer","refreshing","panel","loader","handsetDetails","tooltipPosition","styles","theme","root","width","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","tagIcon","top","position","margin","textAlign","cursor","benefitsIcon","maxHeight","verticalAlign","cardContainer","border","height","mapStateToProps","LsiPingStatusTabData","LsiPingStatusApiLinkStatus","mapDispatchToProps","dispatch","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport AppLoader from '../../AppLoader';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { connect } from 'react-redux';\nimport { CardLinkConstant } from '../../../../constants/card-link.constant';\nimport Tooltips from '../../tooltip/tooltip.dumb';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport {refreshSystemStatus} from '../../../../actions/b2b-system-status.action';\nimport  AnalyticsService from '../../../../services/analytics-service';\n\nclass SystemStatus extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { cardLoader: true, expanded: true };\n        this.populateSystemStatusCardDetails = this.populateSystemStatusCardDetails.bind(this);\n        this.onExpansionChange = this.onExpansionChange.bind(this);\n        this.onClickTagIcon = this.onClickTagIcon.bind(this);\n        this.onRefreshButtonClicked = this.onRefreshButtonClicked.bind(this);\n    }\n\n    onClickTagIcon(e, cardLinks) {\n        e.stopPropagation();\n        this.props.cardLinksHandler(cardLinks, CardLinkConstant.CRM_CODE_TYPE, CardLinkConstant.HANDSET_DETAILS_CARD);\n    }\n\n    handleHandsetDetailsScenario = (item) => {\n        if (item && item.value) {\n            this.props.updateCurrentScenarioId(item.value);\n        }\n    }\n\n    fetchECRMStatusColor(ecrmStatus) {\n        if(ecrmStatus === \"Active\")\n             return \"color-green\";\n        else if(ecrmStatus === \"xxxx\")\n            return \"black\";\n        else\n            return \"color-red\";\n    }\n\n    fetchOutageStatusColor(outage) {\n        if(outage === \"No\")\n             return \"color-green\";\n        else if(outage === \"Yes\")\n            return \"color-red\";\n        else\n            return \"black\";\n    }\n\n\n    populateSystemStatusCardDetails() {\n        this.systemStatus = {};\n        if (this.props && this.props.SystemStatusCardData) {\n            this.showHandsetDetails = true;\n            this.systemStatus['eCRMStatus'] = this.props.SystemStatusCardData['LSI_STATUS'] ? this.props.SystemStatusCardData['LSI_STATUS'] : 'xxxx';\n            this.systemStatus['eCRMStatus_color'] = this.fetchECRMStatusColor(this.systemStatus[\"eCRMStatus\"]);\n            this.systemStatus[\"router\"] = \"xxxx\";\n            this.systemStatus[\"outage\"] = this.props.SystemStatusCardData['OUTAGE'] ? this.props.SystemStatusCardData['OUTAGE'] : 'xxxx';\n            if(this.props.SystemStatusCardData['Alarms']) {\n                this.systemStatus[\"alarms\"] = this.props.SystemStatusCardData['Alarms']\n                this.systemStatus[\"showAlarms\"] = true\n            }\n            this.systemStatus[\"alarms\"] = this.props.SystemStatusCardData['Alarms'] ? this.props.SystemStatusCardData['Alarms'] : null;\n            \n            this.systemStatus[\"outage_color\"] = this.fetchOutageStatusColor(this.systemStatus[\"outage\"]);\n            this.systemStatus[\"outage_color\"] = this.fetchOutageStatusColor(this.systemStatus[\"outage\"]);\n        } else {      \n            this.systemStatus['eCRMStatus'] = \"xxxx\";\n            this.systemStatus['eCRMStatus_color'] = \"black\";\n            this.systemStatus[\"outage_color\"] = \"black\";\n            this.systemStatus[\"router\"] = \"xxxx\";\n            this.systemStatus[\"outage\"] = \"xxxx\";\n        }\n        if(this.props.SystemStatusCardLinkStatus){\n            this.systemStatus['linkStatus'] = this.props.SystemStatusCardLinkStatus;\n            if(this.props.SystemStatusCardLinkStatus === 'Link UP') {\n                this.systemStatus['linkStatus_color'] = \"color-green\"\n            } else {\n                this.systemStatus['linkStatus_color'] = \"color-red\"\n            }\n            \n        }\n    }\n\n\n    onExpansionChange = () => (event, expanded) => {\n        this.setState({ 'expanded': expanded });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.expandCard !== prevProps.expandCard) {\n            this.setState({ 'expanded': this.props.expandCard });\n        }\n    }\n\n    onRefreshButtonClicked(event) {\n        event.stopPropagation();\n        this.props.refreshSystemStatus();\n        \n    }\n\n    render() {\n        const { classes } = this.props;\n        const { SystemStatusCardData} = this.props;\n        this.populateSystemStatusCardDetails();\n        const showAlarm = this.systemStatus[\"showAlarms\"]\n        const showLinkStatus = this.systemStatus[\"linkStatus\"]\n\n        return (\n            <div className={\"mt-10 \" + (this.props.classes.card)}>\n                <ExpansionPanel onChange={this.onExpansionChange()} expanded={this.state.expanded} >\n                    <ExpansionPanelSummary className={this.props.classes.cardHeader + \" card-header\"} expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.heading}>\n                            SYSTEM STATUS\n                        </Typography>\n                        <div onClick={ (e) => {this.onRefreshButtonClicked(e)}}>\n                            <RefreshIcon className={classes.refreshIconContainer + (SystemStatusCardData.refreshing? \" refresh-rotate\":'')} color=\"primary\" />\n                        </div>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.panel + \" card-data \" +  (SystemStatusCardData.loader === true? \"fade-background\":\"\")}>\n                        <div className=\"width-100\">\n                            <div className={classes.handsetDetails}>\n                                <div className={\"width-100 inline-block text-left \"}>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey fs-12\">eCRM Status</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className={(\"inline-block mr-10 max-w-150 \") + this.systemStatus[\"eCRMStatus_color\"]}>\n                                                <Tooltips tooltipText={this.systemStatus['eCRMStatus']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.systemStatus['eCRMStatus']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n\n                                    </div>\n                                    {/* <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">ROUTER</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.systemStatus[\"router\"]} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.systemStatus[\"router\"]}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey fs-12\">LINK STATUS</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.systemStatus['linkStatus']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.systemStatus['linkStatus']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div> */}\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">OUTAGE</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className={(\"inline-block mr-10 max-w-150 \") + this.systemStatus[\"outage_color\"]}>\n                                                <Tooltips tooltipText={this.systemStatus[\"outage\"]} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.systemStatus[\"outage\"]}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    {(showAlarm)?(<div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">ENOC Alarm</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className={(\"inline-block mr-10 max-w-150 color-red\")}>\n                                                <Tooltips tooltipText={this.systemStatus[\"alarms\"]} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.systemStatus[\"alarms\"]}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>):null}\n                                    {(showLinkStatus)?(<div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey fs-12\">LINK STATUS</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className={(\"inline-block mr-10 max-w-150 \") + this.systemStatus[\"linkStatus_color\"]}>\n                                                <Tooltips tooltipText={this.systemStatus['linkStatus']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.systemStatus['linkStatus']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>):null}\n                                </div>\n                            </div>\n                        </div>\n                        {SystemStatusCardData.loader &&  this.state.expanded ? <div><AppLoader className=\"color-green\" cardLoader={SystemStatusCardData.loader} /></div> : null}\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        )\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        width: '100%'\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    cardHeader: {\n        'border-bottom': 'solid #ccc 0.5px',\n    },\n    tagIcon: {\n        top: '5px',\n        position: 'relative',\n        margin: '8px 8px',\n        textAlign: 'center',\n        cursor: 'pointer',\n        width: 15,\n    },\n    benefitsIcon: {\n        maxHeight: '35px',\n        verticalAlign: 'middle',\n    },\n    cardContainer: {\n        border: 'solid #ccc 0.5px',\n    },\n    refreshIconContainer: {\n        margin: '1px 10px',\n        height: '0.8em',\n        width: '0.8em'\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        SystemStatusCardData: state.SystemStatusCardData,\n        SystemStatusCardLinkStatus: state.LsiPingStatusTabData.LsiPingStatusApiLinkStatus\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    refreshSystemStatus: () => dispatch(refreshSystemStatus())\n});\n\nSystemStatus.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SystemStatus));"]},"metadata":{},"sourceType":"module"}