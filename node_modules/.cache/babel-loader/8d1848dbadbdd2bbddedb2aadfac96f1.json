{"ast":null,"code":"var _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/left-side-menu.smart.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport PermanentDrawerLeft from './permanent-drawer-left.dumb';\nimport CallDropDialog from '../shared/dialogs/call-drop-dialog/call-drop-dialog.smart';\nimport FeedbackDialog from '../shared/dialogs/feedback-dialog/feedback-dialog.smart';\nimport SmsDialog from '../shared/dialogs/sms-dialog/sms-dialog.smart';\nimport CallTransferDialog from '../shared/dialogs/call-transfer-dialog/call-transfer-dialog.smart';\nimport ArcIssueDialog from '../shared/dialogs/arc-issue/arc-issue-dialog.smart';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    leftNavClick: state.leftNavClick,\n    dialogRequestType: getRequestDialogType(state.dialogInfo)\n  };\n};\n\nvar getRequestDialogType = function getRequestDialogType(checkDialogType) {\n  if (checkDialogType) {\n    if (checkDialogType.callDropDialogTitle && checkDialogType.callDropDialogStatus) {\n      return checkDialogType.callDropDialogTitle;\n    } else if (checkDialogType.feedbackDialogTitle && checkDialogType.feedbackDialogStatus) {\n      return checkDialogType.feedbackDialogTitle;\n    } else if (checkDialogType.smsDialogTitle && checkDialogType.smsDialogStatus) {\n      return checkDialogType.smsDialogTitle;\n    } else if (checkDialogType.arcIssueDialogTitle && checkDialogType.arcIssueDialogStatus) {\n      return checkDialogType.arcIssueDialogTitle;\n    } else if (checkDialogType.callTransferDialogTitle && checkDialogType.callTransferDialogStatus) {\n      return checkDialogType.callTransferDialogTitle;\n    } else {\n      return false;\n    }\n  }\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar ConnectedLeftSideMenu = function ConnectedLeftSideMenu(props) {\n  var getDialog = function getDialog() {\n    var dialogRequestType = props.dialogRequestType;\n\n    switch (dialogRequestType) {\n      case 'CALL DROP':\n        return React.createElement(CallDropDialog, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n\n      case 'FEEDBACK':\n        return React.createElement(FeedbackDialog, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n\n      case 'SMS':\n        return React.createElement(SmsDialog, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n\n      case 'SELF HELP':\n        return React.createElement(SmsDialog, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n\n      case 'TRANSFER':\n        return React.createElement(CallTransferDialog, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n\n      case 'ARC ISSUE':\n        return React.createElement(ArcIssueDialog, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n\n      case 'BLANK CALL':\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(PermanentDrawerLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), getDialog());\n};\n\nvar LeftSideMenu = connect(mapStateToProps, mapDispatchToProps)(ConnectedLeftSideMenu);\nexport default LeftSideMenu;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/left-side-menu.smart.js"],"names":["React","connect","PermanentDrawerLeft","CallDropDialog","FeedbackDialog","SmsDialog","CallTransferDialog","ArcIssueDialog","mapStateToProps","state","leftNavClick","dialogRequestType","getRequestDialogType","dialogInfo","checkDialogType","callDropDialogTitle","callDropDialogStatus","feedbackDialogTitle","feedbackDialogStatus","smsDialogTitle","smsDialogStatus","arcIssueDialogTitle","arcIssueDialogStatus","callTransferDialogTitle","callTransferDialogStatus","mapDispatchToProps","dispatch","ConnectedLeftSideMenu","props","getDialog","LeftSideMenu"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,cAAP,MAA2B,2DAA3B;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,SAAP,MAAsB,+CAAtB;AACA,OAAOC,kBAAP,MAA+B,mEAA/B;AACA,OAAOC,cAAP,MAA2B,oDAA3B;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAE7B,SAAO;AACHC,IAAAA,YAAY,EAAED,KAAK,CAACC,YADjB;AAEHC,IAAAA,iBAAiB,EAAEC,oBAAoB,CAACH,KAAK,CAACI,UAAP;AAFpC,GAAP;AAIH,CAND;;AAOA,IAAMD,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACE,eAAD,EAAqB;AAC9C,MAAIA,eAAJ,EAAqB;AACjB,QAAIA,eAAe,CAACC,mBAAhB,IAAuCD,eAAe,CAACE,oBAA3D,EAAiF;AAC7E,aAAOF,eAAe,CAACC,mBAAvB;AACH,KAFD,MAGK,IAAID,eAAe,CAACG,mBAAhB,IAAuCH,eAAe,CAACI,oBAA3D,EAAiF;AAClF,aAAOJ,eAAe,CAACG,mBAAvB;AACH,KAFI,MAGA,IAAIH,eAAe,CAACK,cAAhB,IAAkCL,eAAe,CAACM,eAAtD,EAAuE;AACxE,aAAON,eAAe,CAACK,cAAvB;AACH,KAFI,MAGA,IAAIL,eAAe,CAACO,mBAAhB,IAAuCP,eAAe,CAACQ,oBAA3D,EAAiF;AAClF,aAAOR,eAAe,CAACO,mBAAvB;AACH,KAFI,MAGA,IAAIP,eAAe,CAACS,uBAAhB,IAA2CT,eAAe,CAACU,wBAA/D,EAAyF;AAC1F,aAAOV,eAAe,CAACS,uBAAvB;AACH,KAFI,MAGA;AACD,aAAO,KAAP;AACH;AAEJ;AACJ,CAtBD;;AAyBA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,SAAO,EAAP;AAEH,CAHD;;AAKA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AAErC,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,QAAMlB,iBAAiB,GAAGiB,KAAK,CAACjB,iBAAhC;;AACA,YAAQA,iBAAR;AACI,WAAK,WAAL;AACI,eAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,UAAL;AACI,eAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,KAAL;AACI,eAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,WAAL;AACI,eAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,UAAL;AAAiB,eAAO,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACjB,WAAK,WAAL;AAAkB,eAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAClB,WAAK,YAAL;AAAmB;;AACnB;AACI;AAbR;AAeH,GAjBD;;AAoBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKkB,SAAS,EAFd,CADJ;AAQH,CA9BD;;AAgCA,IAAMC,YAAY,GAAG7B,OAAO,CAACO,eAAD,EAAkBiB,kBAAlB,CAAP,CAA6CE,qBAA7C,CAArB;AAEA,eAAeG,YAAf","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport PermanentDrawerLeft from './permanent-drawer-left.dumb';\nimport CallDropDialog from '../shared/dialogs/call-drop-dialog/call-drop-dialog.smart';\nimport FeedbackDialog from '../shared/dialogs/feedback-dialog/feedback-dialog.smart';\nimport SmsDialog from '../shared/dialogs/sms-dialog/sms-dialog.smart';\nimport CallTransferDialog from '../shared/dialogs/call-transfer-dialog/call-transfer-dialog.smart';\nimport ArcIssueDialog from '../shared/dialogs/arc-issue/arc-issue-dialog.smart';\nconst mapStateToProps = state => {\n\n    return {\n        leftNavClick: state.leftNavClick,\n        dialogRequestType: getRequestDialogType(state.dialogInfo)\n    };\n};\nconst getRequestDialogType = (checkDialogType) => {\n    if (checkDialogType) {\n        if (checkDialogType.callDropDialogTitle && checkDialogType.callDropDialogStatus) {\n            return checkDialogType.callDropDialogTitle;\n        }\n        else if (checkDialogType.feedbackDialogTitle && checkDialogType.feedbackDialogStatus) {\n            return checkDialogType.feedbackDialogTitle;\n        }\n        else if (checkDialogType.smsDialogTitle && checkDialogType.smsDialogStatus) {\n            return checkDialogType.smsDialogTitle;\n        }\n        else if (checkDialogType.arcIssueDialogTitle && checkDialogType.arcIssueDialogStatus) {\n            return checkDialogType.arcIssueDialogTitle;\n        }\n        else if (checkDialogType.callTransferDialogTitle && checkDialogType.callTransferDialogStatus) {\n            return checkDialogType.callTransferDialogTitle;\n        }\n        else {\n            return false;\n        }\n\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n}\n\nconst ConnectedLeftSideMenu = (props) => {\n\n    const getDialog = () => {\n        const dialogRequestType = props.dialogRequestType;\n        switch (dialogRequestType) {\n            case 'CALL DROP':\n                return <CallDropDialog />;\n            case 'FEEDBACK':\n                return <FeedbackDialog />;\n            case 'SMS':\n                return <SmsDialog />\n            case 'SELF HELP':\n                return <SmsDialog />\n            case 'TRANSFER': return <CallTransferDialog />\n            case 'ARC ISSUE': return <ArcIssueDialog />\n            case 'BLANK CALL': break;\n            default:\n                break;\n        }\n    }\n\n\n    return (\n        <div>\n            <PermanentDrawerLeft ></PermanentDrawerLeft>\n            {getDialog()}\n        </div>\n\n\n    )\n}\n\nconst LeftSideMenu = connect(mapStateToProps, mapDispatchToProps)(ConnectedLeftSideMenu);\n\nexport default LeftSideMenu;"]},"metadata":{},"sourceType":"module"}