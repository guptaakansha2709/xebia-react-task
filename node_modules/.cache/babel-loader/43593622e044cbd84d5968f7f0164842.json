{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport store from \"../store/redux-store\"; // import { unauthorizeUser } from '../actions/authorization.actions'\n\nimport { resetState } from '../actions/common.action'; // import GLOBAL_CONFIG from '../config/config';\n\nvar CustomHttpService =\n/*#__PURE__*/\nfunction () {\n  function CustomHttpService() {\n    _classCallCheck(this, CustomHttpService);\n  }\n\n  _createClass(CustomHttpService, null, [{\n    key: \"post\",\n    value: function post(url, data, config, encodeDecodeType, retry_count) {\n      switch (encodeDecodeType) {\n        case EncodeDecodeType.DEFAULT:\n          _addDefaultConfig(config);\n\n          return _defaultPost(url, data, config);\n\n        default:\n          return;\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(url, config, encodeDecodeType, retry_count) {\n      switch (encodeDecodeType) {\n        case EncodeDecodeType.DEFAULT:\n          _addDefaultConfig(config);\n\n          return _defaultGet(url, config);\n\n        case EncodeDecodeType.MAP_MY_INDIA:\n          return _defaultGet(url, config);\n\n        default:\n          return;\n      }\n    }\n  }, {\n    key: \"put\",\n    value: function put(url, data, config, encodeDecodeType, retry_count) {\n      switch (encodeDecodeType) {\n        case EncodeDecodeType.DEFAULT:\n          _addDefaultConfig(config);\n\n          return _defaultPut(url, data, config);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url, config, encodeDecodeType) {\n      switch (encodeDecodeType) {\n        case EncodeDecodeType.DEFAULT:\n          _addDefaultConfig(config);\n\n          return _defaultDelete(url, config);\n\n        default:\n          {}\n      }\n    }\n  }]);\n\n  return CustomHttpService;\n}();\n\nexport { CustomHttpService as default };\n\nvar _addDefaultConfig = function _addDefaultConfig(config) {\n  if (!config) {\n    config = {};\n  }\n\n  if (!config[\"timeout\"]) {\n    config[\"timeout\"] = 30000;\n  }\n\n  if (!config[\"headers\"]) {\n    config[\"headers\"] = {};\n  }\n\n  if (!config[\"headers\"][\"Content-Type\"]) {\n    config[\"headers\"][\"Content-Type\"] = \"application/json\";\n  }\n\n  if (!config[\"headers\"][\"Authorization\"]) {\n    _setAuthToken(config[\"headers\"]);\n  }\n\n  if (!config[\"headers\"][\"x-correlation-id\"]) {\n    _setCorrelationId(config[\"headers\"]);\n  }\n}; // const _defaultGet = (url, config) => {\n//     return axios.get(url, config);\n// }\n\n\nvar _defaultGet = function _defaultGet(url, config) {\n  return new Promise(function (resolve, reject) {\n    axios.get(url, config).then(function (response) {\n      resolve(response);\n    }, function (error) {\n      if (error && error.response && error.response.status && error.response.status === 401) {\n        // store.dispatch(unauthorizeUser())\n        store.dispatch(resetState());\n        reject(error);\n      } else {\n        reject(error);\n      }\n    });\n  });\n};\n\nvar _defaultPost = function _defaultPost(url, data, config) {\n  return new Promise(function (resolve, reject) {\n    axios.post(url, data, config).then(function (response) {\n      resolve(response);\n    }, function (error) {\n      if (error && error.response && error.response.status && error.response.status === 401) {\n        // store.dispatch(unauthorizeUser())\n        store.dispatch(resetState());\n        reject(error);\n      } else {\n        reject(error);\n      }\n    });\n  });\n};\n\nvar _defaultPut = function _defaultPut(url, data, config) {\n  return new Promise(function (resolve, reject) {\n    axios.put(url, data, config).then(function (response) {\n      resolve(response);\n    }, function (error) {\n      if (error && error.response && error.response.status && error.response.status === 401) {\n        store.dispatch(unauthorizeUser());\n        store.dispatch(resetState());\n        reject(error);\n      } else {\n        reject(error);\n      }\n    });\n  });\n};\n\nvar _defaultDelete = function _defaultDelete(url, config) {\n  return new Promise(function (resolve, reject) {\n    axios.delete(url, config).then(function (response) {\n      resolve(response);\n    }, function (error) {\n      if (error && error.response && error.response.status && error.response.status === 401) {\n        store.dispatch(unauthorizeUser());\n        store.dispatch(resetState());\n        reject(error);\n      } else {\n        reject(error);\n      }\n    });\n  });\n};\n\nvar _setAuthToken = function _setAuthToken(headers) {\n  var authDetails = CookieManagerService.getItem(AppConstant.AUTH_DETAILS);\n\n  if (authDetails) {\n    authDetails = JSON.parse(authDetails);\n    headers[\"Authorization\"] = authDetails[\"token\"];\n  }\n};\n\nvar _setCorrelationId = function _setCorrelationId(headers) {\n  var correlationId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n\n  if (correlationId) {\n    headers[\"x-correlation-id\"] = correlationId;\n  }\n};","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/tasks/src/services/custom-http.service.js"],"names":["axios","EncodeDecodeType","CookieManagerService","AppConstant","store","resetState","CustomHttpService","url","data","config","encodeDecodeType","retry_count","DEFAULT","_addDefaultConfig","_defaultPost","_defaultGet","MAP_MY_INDIA","_defaultPut","_defaultDelete","_setAuthToken","_setCorrelationId","Promise","resolve","reject","get","then","response","error","status","dispatch","post","put","unauthorizeUser","delete","headers","authDetails","getItem","AUTH_DETAILS","JSON","parse","correlationId","CORRELATION_ID"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport store from \"../store/redux-store\";\n// import { unauthorizeUser } from '../actions/authorization.actions'\nimport { resetState } from '../actions/common.action'\n// import GLOBAL_CONFIG from '../config/config';\n\nexport default class CustomHttpService {\n    static post(url, data, config, encodeDecodeType, retry_count) {\n\n        switch (encodeDecodeType) {\n            case EncodeDecodeType.DEFAULT:\n                _addDefaultConfig(config);\n                return _defaultPost(url, data, config);\n            default:\n                return;\n        }\n    }\n\n    static get(url, config, encodeDecodeType, retry_count) {\n        switch (encodeDecodeType) {\n            case EncodeDecodeType.DEFAULT:\n                _addDefaultConfig(config);\n                return _defaultGet(url, config);\n            case EncodeDecodeType.MAP_MY_INDIA:\n                return _defaultGet(url, config);\n            default:\n                return;\n        }\n    }\n\n    static put(url, data, config, encodeDecodeType, retry_count) {\n\n        switch (encodeDecodeType) {\n            case EncodeDecodeType.DEFAULT:\n                _addDefaultConfig(config);\n                return _defaultPut(url, data, config);\n        }\n    }\n    static delete(url, config, encodeDecodeType) {\n        switch (encodeDecodeType) {\n            case EncodeDecodeType.DEFAULT:\n                _addDefaultConfig(config);\n                return _defaultDelete(url, config);\n            default: { }\n        }\n    }\n\n\n}\n\nconst _addDefaultConfig = (config) => {\n    if (!config) {\n        config = {};\n    }\n    if (!config[\"timeout\"]) {\n        config[\"timeout\"] = 30000;\n    }\n    if (!config[\"headers\"]) {\n        config[\"headers\"] = {};\n    }\n    if (!config[\"headers\"][\"Content-Type\"]) {\n        config[\"headers\"][\"Content-Type\"] = \"application/json\";\n    }\n    if (!config[\"headers\"][\"Authorization\"]) {\n        _setAuthToken(config[\"headers\"])\n    }\n    if (!config[\"headers\"][\"x-correlation-id\"]) {\n        _setCorrelationId(config[\"headers\"])\n    }\n}\n\n// const _defaultGet = (url, config) => {\n//     return axios.get(url, config);\n// }\nconst _defaultGet = (url, config) => {\n    return new Promise((resolve, reject) => {\n        axios.get(url, config).then(\n\n            response => {\n                resolve(response)\n            },\n            error => {\n                if (error && error.response && error.response.status && error.response.status === 401) {\n                    // store.dispatch(unauthorizeUser())\n                    store.dispatch(resetState())\n                    reject(error);\n                }\n                else {\n                    reject(error)\n                }\n            }\n        )\n    })\n}\n\nconst _defaultPost = (url, data, config) => {\n    return new Promise((resolve, reject) => {\n        axios.post(url, data, config).then(\n\n            response => {\n                resolve(response)\n            },\n            error => {\n                if (error && error.response && error.response.status && error.response.status === 401) {\n                    // store.dispatch(unauthorizeUser())\n                    store.dispatch(resetState())\n                    reject(error);\n                }\n                else {\n                    reject(error)\n                }\n            }\n        )\n    })\n}\n\nconst _defaultPut = (url, data, config) => {\n    return new Promise((resolve, reject) => {\n        axios.put(url, data, config).then(\n\n            response => {\n                resolve(response)\n            },\n            error => {\n                if (error && error.response && error.response.status && error.response.status === 401) {\n                    store.dispatch(unauthorizeUser());\n                    store.dispatch(resetState());\n                    reject(error);\n                }\n                else {\n                    reject(error)\n                }\n            }\n        )\n    })\n}\nconst _defaultDelete = (url, config) => {\n    return new Promise((resolve, reject) => {\n        axios.delete(url, config).then(\n\n            response => {\n                resolve(response)\n            },\n            error => {\n                if (error && error.response && error.response.status && error.response.status === 401) {\n                    store.dispatch(unauthorizeUser());\n                    store.dispatch(resetState());\n                    reject(error);\n                }\n                else {\n                    reject(error)\n                }\n            }\n        )\n    })\n}\n\nconst _setAuthToken = (headers) => {\n    let authDetails = CookieManagerService.getItem(AppConstant.AUTH_DETAILS);\n    if (authDetails) {\n        authDetails = JSON.parse(authDetails);\n        headers[\"Authorization\"] = authDetails[\"token\"];\n    }\n}\n\nconst _setCorrelationId = (headers) => {\n    let correlationId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n    if (correlationId) {\n        headers[\"x-correlation-id\"] = correlationId;\n    }\n}"]},"metadata":{},"sourceType":"module"}