{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/main-content-right/b2b-outage-details/b2b-outage-details.smart.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppLoader from '../../AppLoader';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { connect } from 'react-redux';\nimport Tooltips from '../../tooltip/tooltip.dumb';\n\nvar OutageDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OutageDetails, _Component);\n\n  function OutageDetails(props) {\n    var _this;\n\n    _classCallCheck(this, OutageDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OutageDetails).call(this, props));\n\n    _this.handleHandsetDetailsScenario = function (item) {\n      if (item && item.value) {\n        _this.props.updateCurrentScenarioId(item.value);\n      }\n    };\n\n    _this.onExpansionChange = function () {\n      return function (event, expanded) {\n        _this.setState({\n          'expanded': expanded\n        });\n      };\n    };\n\n    _this.state = {\n      cardLoader: true,\n      expanded: true\n    };\n    _this.populateSystemStatusCardDetails = _this.populateSystemStatusCardDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onExpansionChange = _this.onExpansionChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickTagIcon = _this.onClickTagIcon.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(OutageDetails, [{\n    key: \"onClickTagIcon\",\n    value: function onClickTagIcon(e, cardLinks) {\n      e.stopPropagation();\n    }\n  }, {\n    key: \"populateSystemStatusCardDetails\",\n    value: function populateSystemStatusCardDetails() {\n      this.systemStatus = {};\n\n      if (this.props && this.props.SystemStatusCardData) {\n        this.showHandsetDetails = true;\n        this.systemStatus['Incident_Type'] = this.props.SystemStatusCardData['Incident_Type'] ? this.props.SystemStatusCardData['Incident_Type'] : 'xxxx';\n        this.systemStatus['Ticket_Number'] = this.props.SystemStatusCardData['Ticket_Number'] ? this.props.SystemStatusCardData['Ticket_Number'] : 'xxxx';\n        this.systemStatus[\"Alarm_Summary\"] = this.props.SystemStatusCardData['Alarm_Summary'] ? this.props.SystemStatusCardData['Alarm_Summary'] : 'xxxx';\n        this.systemStatus[\"Impact\"] = this.props.SystemStatusCardData['Impact'] ? this.props.SystemStatusCardData['Impact'] : 'xxxx';\n        this.systemStatus[\"FirstOccurrence\"] = this.props.SystemStatusCardData['FirstOccurrence'] ? this.props.SystemStatusCardData['FirstOccurrence'] : 'xxxx';\n        this.systemStatus[\"EventTime\"] = this.props.SystemStatusCardData['EventTime'] ? this.props.SystemStatusCardData['EventTime'] : 'Not Available';\n        this.systemStatus[\"ERT\"] = this.props.SystemStatusCardData['Remedy_ERT'] ? this.props.SystemStatusCardData['Remedy_ERT'] : 'xxxx';\n        this.systemStatus[\"Location\"] = this.props.SystemStatusCardData['Location'] ? this.props.SystemStatusCardData['Location'] : 'xxxx';\n      } else {\n        this.systemStatus['Incident_Type'] = \"xxxx\";\n        this.systemStatus['Ticket_Number'] = \"xxxx\";\n        this.systemStatus[\"Alarm_Summary\"] = \"xxxx\";\n        this.systemStatus[\"Impact\"] = \"xxxx\";\n        this.systemStatus[\"FirstOccurrence\"] = \"xxxx\";\n        this.systemStatus[\"ERT\"] = \"xxxx\";\n        this.systemStatus[\"Location\"] = \"xxxx\";\n        this.systemStatus[\"EventTime\"] = \"xxxx\";\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.expandCard !== prevProps.expandCard) {\n        this.setState({\n          'expanded': this.props.expandCard\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$props = this.props,\n          SystemStatusCardData = _this$props.SystemStatusCardData,\n          loading = _this$props.loading;\n      this.populateSystemStatusCardDetails();\n      return React.createElement(\"div\", {\n        className: \"mt-10 \" + this.props.classes.card + \" \" + (this.props.SystemStatusCardData[\"OUTAGE\"] === \"Yes\" ? '' : 'hidden'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(ExpansionPanel, {\n        onChange: this.onExpansionChange(),\n        expanded: this.state.expanded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        className: this.props.classes.cardHeader + \" card-header\",\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"OUTAGE DETAILS\")), React.createElement(ExpansionPanelDetails, {\n        className: classes.panel + \" card-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"width-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.handsetDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"width-100 inline-block text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Incident Type\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus['Incident_Type'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.systemStatus['Incident_Type']))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Ticket Number\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus['Ticket_Number'],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.systemStatus['Ticket_Number']))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Alarm Summary\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus[\"Alarm_Summary\"],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.systemStatus[\"Alarm_Summary\"]))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Impact\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus[\"Impact\"],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.systemStatus[\"Impact\"]))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Event Time\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus[\"EventTime\"],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.systemStatus[\"EventTime\"]))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"ERT\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus[\"ERT\"],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.systemStatus[\"ERT\"]))))), React.createElement(\"div\", {\n        className: \"fs-14 inline-block width-half mb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"color-grey text-uppercase fs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Location\"), React.createElement(\"p\", {\n        className: \"mt-5 fs-16 field-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inline-block mr-10 max-w-150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Tooltips, {\n        tooltipText: this.systemStatus[\"Location\"],\n        position: this.tooltipPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"inherit\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.systemStatus[\"Location\"]))))))), loading ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(AppLoader, {\n        cardLoader: this.state.cardLoader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })) : null))));\n    }\n  }]);\n\n  return OutageDetails;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    cardHeader: {\n      'border-bottom': 'solid #ccc 0.5px'\n    },\n    tagIcon: {\n      top: '5px',\n      position: 'relative',\n      margin: '8px 8px',\n      textAlign: 'center',\n      cursor: 'pointer',\n      width: 15\n    },\n    benefitsIcon: {\n      maxHeight: '35px',\n      verticalAlign: 'middle'\n    },\n    cardContainer: {\n      border: 'solid #ccc 0.5px'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    SystemStatusCardData: state.SystemStatusCardData,\n    loading: false\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nOutageDetails.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(OutageDetails));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/main-content-right/b2b-outage-details/b2b-outage-details.smart.js"],"names":["React","Component","PropTypes","AppLoader","withStyles","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","connect","Tooltips","OutageDetails","props","handleHandsetDetailsScenario","item","value","updateCurrentScenarioId","onExpansionChange","event","expanded","setState","state","cardLoader","populateSystemStatusCardDetails","bind","onClickTagIcon","e","cardLinks","stopPropagation","systemStatus","SystemStatusCardData","showHandsetDetails","prevProps","expandCard","classes","loading","card","cardHeader","heading","panel","handsetDetails","tooltipPosition","styles","theme","root","width","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","tagIcon","top","position","margin","textAlign","cursor","benefitsIcon","maxHeight","verticalAlign","cardContainer","border","mapStateToProps","mapDispatchToProps","dispatch","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport AppLoader from '../../AppLoader';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { connect } from 'react-redux';\nimport Tooltips from '../../tooltip/tooltip.dumb';\n\nclass OutageDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { cardLoader: true, expanded: true };\n        this.populateSystemStatusCardDetails = this.populateSystemStatusCardDetails.bind(this);\n        this.onExpansionChange = this.onExpansionChange.bind(this);\n        this.onClickTagIcon = this.onClickTagIcon.bind(this);\n    }\n\n    onClickTagIcon(e, cardLinks) {\n        e.stopPropagation();\n    }\n\n    handleHandsetDetailsScenario = (item) => {\n        if (item && item.value) {\n            this.props.updateCurrentScenarioId(item.value);\n        }\n    }\n    populateSystemStatusCardDetails() {\n        this.systemStatus = {};\n        if (this.props && this.props.SystemStatusCardData) {\n            this.showHandsetDetails = true;\n            this.systemStatus['Incident_Type'] = this.props.SystemStatusCardData['Incident_Type'] ? this.props.SystemStatusCardData['Incident_Type'] : 'xxxx';\n            this.systemStatus['Ticket_Number'] = this.props.SystemStatusCardData['Ticket_Number'] ? this.props.SystemStatusCardData['Ticket_Number'] : 'xxxx';\n            this.systemStatus[\"Alarm_Summary\"] = this.props.SystemStatusCardData['Alarm_Summary'] ? this.props.SystemStatusCardData['Alarm_Summary'] : 'xxxx';\n            this.systemStatus[\"Impact\"] = this.props.SystemStatusCardData['Impact'] ? this.props.SystemStatusCardData['Impact'] : 'xxxx';\n            this.systemStatus[\"FirstOccurrence\"] = this.props.SystemStatusCardData['FirstOccurrence'] ? this.props.SystemStatusCardData['FirstOccurrence'] : 'xxxx';\n            this.systemStatus[\"EventTime\"] = this.props.SystemStatusCardData['EventTime'] ? this.props.SystemStatusCardData['EventTime'] : 'Not Available';\n            this.systemStatus[\"ERT\"] = this.props.SystemStatusCardData['Remedy_ERT'] ? this.props.SystemStatusCardData['Remedy_ERT'] : 'xxxx';\n            this.systemStatus[\"Location\"] = this.props.SystemStatusCardData['Location'] ? this.props.SystemStatusCardData['Location'] : 'xxxx';\n        } else {      \n            this.systemStatus['Incident_Type'] = \"xxxx\";\n            this.systemStatus['Ticket_Number'] = \"xxxx\";\n            this.systemStatus[\"Alarm_Summary\"] = \"xxxx\";\n            this.systemStatus[\"Impact\"] = \"xxxx\";\n            this.systemStatus[\"FirstOccurrence\"] = \"xxxx\";\n            this.systemStatus[\"ERT\"] = \"xxxx\";\n            this.systemStatus[\"Location\"] = \"xxxx\";\n            this.systemStatus[\"EventTime\"] = \"xxxx\";\n        }\n    }\n\n\n    onExpansionChange = () => (event, expanded) => {\n        this.setState({ 'expanded': expanded });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.expandCard !== prevProps.expandCard) {\n            this.setState({ 'expanded': this.props.expandCard });\n        }\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        const { SystemStatusCardData, loading} = this.props;\n        this.populateSystemStatusCardDetails();\n        return (\n            <div className={\"mt-10 \" + (this.props.classes.card) + \" \" + (this.props.SystemStatusCardData[\"OUTAGE\"] === \"Yes\" ? '':'hidden')}>\n                <ExpansionPanel onChange={this.onExpansionChange()} expanded={this.state.expanded} >\n                    <ExpansionPanelSummary className={this.props.classes.cardHeader + \" card-header\"} expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.heading}>\n                            OUTAGE DETAILS\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.panel + \" card-data\"}>\n                        <div className=\"width-100\">\n                            <div className={classes.handsetDetails}>\n                                <div className=\"width-100 inline-block text-left\">\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey fs-12\">Incident Type</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.systemStatus['Incident_Type']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                        {this.systemStatus['Incident_Type']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey fs-12\">Ticket Number</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.systemStatus['Ticket_Number']} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                    {this.systemStatus['Ticket_Number']}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">Alarm Summary</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.systemStatus[\"Alarm_Summary\"]} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                    {this.systemStatus[\"Alarm_Summary\"]}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">Impact</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.systemStatus[\"Impact\"]} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                    {this.systemStatus[\"Impact\"]}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">Event Time</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.systemStatus[\"EventTime\"]} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                    {this.systemStatus[\"EventTime\"]}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">ERT</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.systemStatus[\"ERT\"]} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                    {this.systemStatus[\"ERT\"]}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"fs-14 inline-block width-half mb-20\">\n                                        <p className=\"color-grey text-uppercase fs-12\">Location</p>\n                                        <p className=\"mt-5 fs-16 field-value\">\n                                            <span className=\"inline-block mr-10 max-w-150\">\n                                                <Tooltips tooltipText={this.systemStatus[\"Location\"]} position={this.tooltipPosition}>\n                                                    <Typography variant=\"inherit\" noWrap>\n                                                    {this.systemStatus[\"Location\"]}\n                                                    </Typography>\n                                                </Tooltips>\n                                            </span>\n                                            \n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            {loading ? <div><AppLoader cardLoader={this.state.cardLoader} /></div> : null}\n                        </div>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        )\n    }\n}\n\nconst styles = theme => ({\n    root: {\n        width: '100%'\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    cardHeader: {\n        'border-bottom': 'solid #ccc 0.5px',\n    },\n    tagIcon: {\n        top: '5px',\n        position: 'relative',\n        margin: '8px 8px',\n        textAlign: 'center',\n        cursor: 'pointer',\n        width: 15,\n    },\n    benefitsIcon: {\n        maxHeight: '35px',\n        verticalAlign: 'middle',\n    },\n    cardContainer: {\n        border: 'solid #ccc 0.5px',\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        SystemStatusCardData: state.SystemStatusCardData,\n        loading: false\n\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nOutageDetails.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(OutageDetails));"]},"metadata":{},"sourceType":"module"}