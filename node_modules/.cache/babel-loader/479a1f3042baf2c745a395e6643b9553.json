{"ast":null,"code":"import { fetchCustomerLSIDetails, setCustomerAccountNumber, fetchCustomerAccountDetails, fetchSRDetails, setCustomerAccountNumberInput, setCustomerLSINumberInput } from './customer-info.action';\nimport { openSnackbarRequest } from '../actions/snackbar.action';\nimport { setCustomerSRNumber, setCustomerLSINumber, setCurrentLSIDetails, resetCurrentLSIDetails } from \"./customer-info.action\";\nimport { resetState } from './common.action';\nimport { TabConstant } from '../constants/tabs.constant';\nimport { fetchInvoiceRequest } from './bill-compare.action';\nimport { fetchSRDetailsTabData, resetSRDetailsTabData } from './sr-details-tab.action';\nimport { fetchUsageDetailsTabData } from './usage-details-tab.action';\nimport { switchHomeTab, tabManager } from './tabs.action';\nimport { enableSelfHelpClick, enableArcIssueClick, enableAutoPredictClick, enableBlankCallClick, enableCallDropClick, enableFeedbackClick, enableTransferClick, disableSelfHelpClick, disableArcIssueClick, disableAutoPredictClick, disableBlankCallClick, disableCallDropClick, disableFeedbackClick, disableTransferClick } from './left-nav.action';\nimport { fetchPredictionRequest, initPrediction } from './prediction.action';\nimport SystemTypeService from '../services/system-type.service';\nimport { openAlertMessageDialog } from './alert-message-dialog.action';\nimport ScenarioService from '../services/scenario.service';\nimport { AlertMessageDialogConstant } from '../constants/alert-message.constant';\nimport { fetchHandsetDetailsCardData } from './handset-details-tab.action';\nimport { enableScenarioSearch, disableScenarioSearch, resetScenarioValues } from './scenario.action';\nimport { fetchPaymentDetailsCardData } from './payment-details-card.action';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { AppConstant } from '../constants/app.constant';\nimport CookieManagerService from '../services/cookie.service';\nimport { fetchSystemStatusCardData } from './b2b-system-status.action';\nimport { fetchUtilizationTabData } from './utilization-tab.action';\nimport { populateSRSummaryTab } from './sr-summary-tab.action';\nimport { fetchLsiPingStatusData } from './lsi-ping-status.action';\nvar SystemBasedActionList = {\n  SIEBEL: [TabConstant.HOME_USAGE_DETAILS_TAB, TabConstant.HOME_BILL_COMPARE_TAB, TabConstant.HOME_SR_DETAILS_TAB],\n  OTHERS: [],\n  PROSPECT: [],\n  LEGACY: []\n};\nexport var onAccountNumberChange = function onAccountNumberChange(num) {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (state.customerInfo.accountNumber != num) {\n      dispatch(resetState());\n      dispatch(setCustomerAccountNumber(num));\n      dispatch(setCustomerAccountNumberInput(num));\n      dispatch(fetchCustomerLSIDetails(num, true)).then(function () {}).catch(function (err) {\n        dispatch(openSnackbarRequest('Account Details Could not be fetched'));\n        dispatch(disableAllLeftNavMenuItems());\n      });\n    }\n  };\n};\nexport var autoSetAccountNumber = function autoSetAccountNumber(num) {\n  return function (dispatch, getState) {\n    var state = getState();\n    dispatch(setCustomerAccountNumber(num));\n    dispatch(setCustomerAccountNumberInput(num));\n    dispatch(fetchCustomerLSIDetails(num));\n  };\n};\nexport var onSRNumberChange = function onSRNumberChange(num) {\n  return function (dispatch, getState) {\n    var state = getState();\n    dispatch(fetchSRDetails(num));\n    dispatch(setCustomerSRNumber(num));\n    dispatch(resetScenarioValues());\n  };\n};\nexport var onLSINumberChange = function onLSINumberChange(num) {\n  return function (dispatch, getState) {\n    dispatch(fetchCustomerAccountDetails(num));\n\n    if (num) {\n      dispatch(enableScenarioSearch());\n      dispatch(enableFeedbackClick());\n      loadCustomerData(dispatch, getState);\n      dispatch(setCustomerLSINumber(num));\n      dispatch(setCustomerLSINumberInput(num));\n      var state = getState();\n      var customerLSINumber = state.customerInfo.customerLSINumber;\n      dispatch(fetchSystemStatusCardData()); // dispatch(fetchLsiPingStatusData());\n\n      dispatch(fetchUtilizationTabData());\n      getCustomerInfoForActiveTabs(dispatch, getState);\n      dispatch(setLSIDetails());\n      dispatch(populateSRSummaryTab(customerLSINumber));\n      dispatch(resetScenarioValues());\n    }\n  };\n};\nexport var setLSIDetails = function setLSIDetails() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var customerLSIDetails = state.customerInfo.lsiDetails;\n    var customerLSINumber = state.customerInfo.customerLSINumber;\n\n    if (customerLSIDetails) {\n      dispatch(resetCurrentLSIDetails());\n      var currentLSIDetailsList = customerLSIDetails.filter(function (obj) {\n        return obj.lsiNumber === customerLSINumber;\n      });\n      var currentLSIDetails = currentLSIDetailsList.length > 0 ? currentLSIDetailsList[0] : null;\n      dispatch(setCurrentLSIDetails(currentLSIDetails));\n    }\n  };\n};\nexport var onAuthenticationFailed = function onAuthenticationFailed() {\n  return function (dispatch) {\n    dispatch(openAlertMessageDialog(AlertMessageDialogConstant.AUTHENTICATION_FAILED));\n    dispatch(disableAllLeftNavMenuItems());\n    dispatch(disableScenarioSearch());\n    ScenarioService.authenticationFailed().then(function (res) {}).catch(function (err) {\n      dispatch(openSnackbarRequest(null, SnackbarMessages.DEFAULT_ERROR_MSG));\n    });\n  };\n};\nexport var onAuthenticationComplete = function onAuthenticationComplete() {\n  return function (dispatch, getState) {\n    // Load other customer related information\n    loadCustomerData(dispatch, getState);\n    dispatch(enableScenarioSearch()); //on customer info success, get other information of customer for active tabs\n\n    getCustomerInfoForActiveTabs(dispatch, getState); //get sr details\n    // dispatch(fetchSRDetailsTabData())\n    //enableAllLeftNavMenuItems\n\n    var state = getState();\n    var customerInfo = state.customerInfo.customerInfo;\n\n    if (SystemTypeService.isSiebelSystem(customerInfo)) {\n      //get sr details\n      // dispatch(fetchSRDetailsTabData())\n      dispatch(enableAllLeftNavMenuItems()); // handset details call\n\n      dispatch(fetchHandsetDetailsCardData()); //handle payment details call\n\n      dispatch(fetchPaymentDetailsCardData());\n    } else {\n      dispatch(disableAllLeftNavMenuItems());\n    }\n\n    dispatch(disableSelfHelpClick());\n  };\n};\n\nvar loadCustomerData = function loadCustomerData(dispatch, getState) {\n  var state = getState();\n  dispatch(b2bSystemTabHandler());\n};\n\nvar predictionHandler = function predictionHandler() {\n  return function (dispatch) {\n    dispatch(fetchPredictionRequest());\n  };\n};\n\nvar enableAllLeftNavMenuItems = function enableAllLeftNavMenuItems() {\n  return function (dispatch) {\n    dispatch(enableSelfHelpClick());\n    dispatch(enableArcIssueClick());\n    dispatch(enableAutoPredictClick());\n    dispatch(enableBlankCallClick());\n    dispatch(enableCallDropClick());\n    dispatch(enableFeedbackClick());\n    dispatch(enableTransferClick());\n  };\n};\n\nvar disableAllLeftNavMenuItems = function disableAllLeftNavMenuItems() {\n  return function (dispatch) {\n    dispatch(disableSelfHelpClick());\n    dispatch(disableArcIssueClick());\n    dispatch(disableAutoPredictClick());\n    dispatch(disableBlankCallClick());\n    dispatch(disableCallDropClick());\n    dispatch(disableFeedbackClick());\n    dispatch(disableTransferClick());\n  };\n};\n\nvar getCustomerInfoForActiveTabs = function getCustomerInfoForActiveTabs(dispatch, getState) {\n  //get redux store state for active tabs, msisdn , actor type\n  var state = getState();\n  var homeActiveTab = state.tab.homeActiveTab;\n  fetchTabData(homeActiveTab, dispatch);\n};\n\nexport var fetchTabData = function fetchTabData(tabName, dispatch) {\n  if (tabName) {\n    switch (tabName) {\n      case TabConstant.HOME_USAGE_DETAILS_TAB:\n        dispatch(fetchUsageDetailsTabData());\n        break;\n\n      case TabConstant.HOME_BILL_COMPARE_TAB:\n        dispatch(fetchInvoiceRequest());\n        break;\n\n      case TabConstant.HOME_SR_DETAILS_TAB:\n        dispatch(fetchSRDetailsTabData());\n        break;\n\n      case TabConstant.HOME_RECOMMENDATION_TAB:\n        //recommendations call\n        break;\n\n      case TabConstant.HOME_SCENARIO_TAB:\n        dispatch(switchHomeTab(TabConstant.HOME_USAGE_DETAILS_TAB));\n        break;\n\n      default:\n    }\n  }\n};\nexport var b2bSystemTabHandler = function b2bSystemTabHandler() {\n  return function (dispatch, getState) {\n    // Manage home tabs\n    var b2bSystemTabs = getState().tab.b2bSystemTabs;\n\n    for (var i = 0; i < b2bSystemTabs.length; i++) {\n      dispatch(tabManager(b2bSystemTabs[i]));\n    }\n\n    dispatch(switchHomeTab(TabConstant.HOME_SR_DETAILS_TAB));\n  };\n};\nexport var siebelSystemTabHandler = function siebelSystemTabHandler() {\n  return function (dispatch, getState) {\n    // Manage home tabs\n    var siebelSystemTabs = getState().tab.siebelSystemTabs;\n\n    for (var i = 0; i < siebelSystemTabs.length; i++) {\n      dispatch(tabManager(siebelSystemTabs[i]));\n    }\n\n    dispatch(switchHomeTab(TabConstant.HOME_USAGE_DETAILS_TAB));\n  };\n};\nexport var otherSystemTabHandler = function otherSystemTabHandler() {\n  return function (dispatch, getState) {\n    // Manage home tabs\n    var otherSystemTabs = getState().tab.otherSystemTabs;\n\n    for (var i = 0; i < otherSystemTabs.length; i++) {\n      dispatch(tabManager(otherSystemTabs[i]));\n    }\n\n    dispatch(switchHomeTab(TabConstant.HOME_TOP_SCENARIO_TAB));\n  };\n};\nexport var prospectSystemTabHandler = function prospectSystemTabHandler() {\n  return function (dispatch, getState) {\n    // Manage home tabs\n    var prospectSystemTabs = getState().tab.prospectSystemTabs;\n\n    for (var i = 0; i < prospectSystemTabs.length; i++) {\n      dispatch(tabManager(prospectSystemTabs[i]));\n    }\n\n    dispatch(switchHomeTab(TabConstant.HOME_USAGE_DETAILS_TAB));\n  };\n};\nexport var legacySystemTabHandler = function legacySystemTabHandler() {\n  return function (dispatch, getState) {\n    // Manage home tabs\n    var legacySystemTabs = getState().tab.legacySystemTabs;\n\n    for (var i = 0; i < legacySystemTabs.length; i++) {\n      dispatch(tabManager(legacySystemTabs[i]));\n    }\n\n    dispatch(switchHomeTab(TabConstant.HOME_ALERT_TAB));\n  };\n};","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/actions/update-customer-data.actions.js"],"names":["fetchCustomerLSIDetails","setCustomerAccountNumber","fetchCustomerAccountDetails","fetchSRDetails","setCustomerAccountNumberInput","setCustomerLSINumberInput","openSnackbarRequest","setCustomerSRNumber","setCustomerLSINumber","setCurrentLSIDetails","resetCurrentLSIDetails","resetState","TabConstant","fetchInvoiceRequest","fetchSRDetailsTabData","resetSRDetailsTabData","fetchUsageDetailsTabData","switchHomeTab","tabManager","enableSelfHelpClick","enableArcIssueClick","enableAutoPredictClick","enableBlankCallClick","enableCallDropClick","enableFeedbackClick","enableTransferClick","disableSelfHelpClick","disableArcIssueClick","disableAutoPredictClick","disableBlankCallClick","disableCallDropClick","disableFeedbackClick","disableTransferClick","fetchPredictionRequest","initPrediction","SystemTypeService","openAlertMessageDialog","ScenarioService","AlertMessageDialogConstant","fetchHandsetDetailsCardData","enableScenarioSearch","disableScenarioSearch","resetScenarioValues","fetchPaymentDetailsCardData","SnackbarMessages","AppConstant","CookieManagerService","fetchSystemStatusCardData","fetchUtilizationTabData","populateSRSummaryTab","fetchLsiPingStatusData","SystemBasedActionList","SIEBEL","HOME_USAGE_DETAILS_TAB","HOME_BILL_COMPARE_TAB","HOME_SR_DETAILS_TAB","OTHERS","PROSPECT","LEGACY","onAccountNumberChange","num","dispatch","getState","state","customerInfo","accountNumber","then","catch","err","disableAllLeftNavMenuItems","autoSetAccountNumber","onSRNumberChange","onLSINumberChange","loadCustomerData","customerLSINumber","getCustomerInfoForActiveTabs","setLSIDetails","customerLSIDetails","lsiDetails","currentLSIDetailsList","filter","obj","lsiNumber","currentLSIDetails","length","onAuthenticationFailed","AUTHENTICATION_FAILED","authenticationFailed","res","DEFAULT_ERROR_MSG","onAuthenticationComplete","isSiebelSystem","enableAllLeftNavMenuItems","b2bSystemTabHandler","predictionHandler","homeActiveTab","tab","fetchTabData","tabName","HOME_RECOMMENDATION_TAB","HOME_SCENARIO_TAB","b2bSystemTabs","i","siebelSystemTabHandler","siebelSystemTabs","otherSystemTabHandler","otherSystemTabs","HOME_TOP_SCENARIO_TAB","prospectSystemTabHandler","prospectSystemTabs","legacySystemTabHandler","legacySystemTabs","HOME_ALERT_TAB"],"mappings":"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","sourcesContent":["import { fetchCustomerLSIDetails, setCustomerAccountNumber, fetchCustomerAccountDetails, fetchSRDetails, setCustomerAccountNumberInput, setCustomerLSINumberInput } from './customer-info.action'\nimport { openSnackbarRequest } from '../actions/snackbar.action';\nimport { setCustomerSRNumber, setCustomerLSINumber , setCurrentLSIDetails, resetCurrentLSIDetails} from \"./customer-info.action\"\nimport { resetState } from './common.action';\nimport { TabConstant } from '../constants/tabs.constant';\nimport { fetchInvoiceRequest } from './bill-compare.action';\nimport { fetchSRDetailsTabData, resetSRDetailsTabData } from './sr-details-tab.action';\nimport { fetchUsageDetailsTabData } from './usage-details-tab.action';\nimport {\n    switchHomeTab,\n    tabManager\n} from './tabs.action';\nimport { enableSelfHelpClick, enableArcIssueClick, enableAutoPredictClick, enableBlankCallClick, enableCallDropClick, enableFeedbackClick, enableTransferClick, disableSelfHelpClick, disableArcIssueClick, disableAutoPredictClick, disableBlankCallClick, disableCallDropClick, disableFeedbackClick, disableTransferClick } from './left-nav.action';\nimport { fetchPredictionRequest, initPrediction } from './prediction.action';\nimport SystemTypeService from '../services/system-type.service';\nimport { openAlertMessageDialog } from './alert-message-dialog.action';\nimport ScenarioService from '../services/scenario.service';\nimport { AlertMessageDialogConstant } from '../constants/alert-message.constant';\nimport { fetchHandsetDetailsCardData } from './handset-details-tab.action';\nimport { enableScenarioSearch, disableScenarioSearch, resetScenarioValues} from './scenario.action';\nimport { fetchPaymentDetailsCardData } from './payment-details-card.action';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { AppConstant } from '../constants/app.constant';\nimport CookieManagerService from '../services/cookie.service';\nimport { fetchSystemStatusCardData } from './b2b-system-status.action';\nimport { fetchUtilizationTabData } from './utilization-tab.action';\nimport { populateSRSummaryTab } from './sr-summary-tab.action';\nimport { fetchLsiPingStatusData } from './lsi-ping-status.action';\n\n\nconst SystemBasedActionList = {\n    SIEBEL: [TabConstant.HOME_USAGE_DETAILS_TAB, TabConstant.HOME_BILL_COMPARE_TAB, TabConstant.HOME_SR_DETAILS_TAB],\n    OTHERS: [],\n    PROSPECT: [],\n    LEGACY: []\n}\n\nexport const onAccountNumberChange = num => (dispatch, getState) => {\n    var state = getState();\n    if (state.customerInfo.accountNumber != num) {\n        dispatch(resetState());\n        dispatch(setCustomerAccountNumber(num));\n        dispatch(setCustomerAccountNumberInput(num));\n        dispatch(fetchCustomerLSIDetails(num, true)).then(() => {\n            \n        }).catch(err => {\n            dispatch(openSnackbarRequest('Account Details Could not be fetched'));\n            dispatch(disableAllLeftNavMenuItems());\n        });\n    }\n\n}\n\nexport const autoSetAccountNumber = num => (dispatch, getState) => {\n    var state = getState();\n    dispatch(setCustomerAccountNumber(num));\n    dispatch(setCustomerAccountNumberInput(num));\n    dispatch(fetchCustomerLSIDetails(num));\n    \n}\n\nexport const onSRNumberChange = num => (dispatch, getState) => {\n    var state = getState();\n    dispatch(fetchSRDetails(num));\n    dispatch(setCustomerSRNumber(num));\n    dispatch(resetScenarioValues());\n}\n\nexport const onLSINumberChange = num => (dispatch, getState) => {\n    dispatch(fetchCustomerAccountDetails(num));\n    if (num) {\n        dispatch(enableScenarioSearch());\n        dispatch(enableFeedbackClick());\n        loadCustomerData(dispatch, getState)\n        dispatch(setCustomerLSINumber(num));\n        dispatch(setCustomerLSINumberInput(num));\n        var state = getState();\n        var customerLSINumber = state.customerInfo.customerLSINumber;\n        dispatch(fetchSystemStatusCardData());\n        // dispatch(fetchLsiPingStatusData());\n        dispatch(fetchUtilizationTabData());\n        getCustomerInfoForActiveTabs(dispatch, getState)\n        dispatch(setLSIDetails())\n        dispatch(populateSRSummaryTab(customerLSINumber));\n        dispatch(resetScenarioValues());\n    }\n\n    \n}\n\nexport const setLSIDetails = () => (dispatch, getState) => {\n    var state = getState();\n    var customerLSIDetails = state.customerInfo.lsiDetails;\n    var customerLSINumber = state.customerInfo.customerLSINumber;\n    if(customerLSIDetails){\n        dispatch(resetCurrentLSIDetails())\n        var currentLSIDetailsList = customerLSIDetails.filter(obj => {\n            return obj.lsiNumber === customerLSINumber\n        })\n        var currentLSIDetails = currentLSIDetailsList.length > 0? currentLSIDetailsList[0]:null\n        dispatch(setCurrentLSIDetails(currentLSIDetails))\n    }\n}\n\nexport const onAuthenticationFailed = () => dispatch => {\n    dispatch(openAlertMessageDialog(AlertMessageDialogConstant.AUTHENTICATION_FAILED))\n    dispatch(disableAllLeftNavMenuItems());\n    dispatch(disableScenarioSearch())\n    ScenarioService.authenticationFailed().then(res => {\n    }).catch(err => {\n        dispatch(openSnackbarRequest(null, SnackbarMessages.DEFAULT_ERROR_MSG));\n    })\n}\n\nexport const onAuthenticationComplete = () => (dispatch, getState) => {\n    // Load other customer related information\n    loadCustomerData(dispatch, getState)\n    dispatch(enableScenarioSearch())\n    //on customer info success, get other information of customer for active tabs\n    getCustomerInfoForActiveTabs(dispatch, getState)\n    //get sr details\n    // dispatch(fetchSRDetailsTabData())\n    //enableAllLeftNavMenuItems\n    const state = getState();\n    const customerInfo = state.customerInfo.customerInfo\n    if (SystemTypeService.isSiebelSystem(customerInfo)) {\n        //get sr details\n        // dispatch(fetchSRDetailsTabData())\n        dispatch(enableAllLeftNavMenuItems());\n        // handset details call\n        dispatch(fetchHandsetDetailsCardData());\n        //handle payment details call\n        dispatch(fetchPaymentDetailsCardData());\n    }\n    else {\n        dispatch(disableAllLeftNavMenuItems());\n    }\n\n    dispatch(disableSelfHelpClick());\n\n}\n\nconst loadCustomerData = (dispatch, getState) => {\n    const state = getState()\n\n    dispatch(b2bSystemTabHandler());\n}\n\nconst predictionHandler = () => dispatch => {\n    dispatch(fetchPredictionRequest());\n}\n\n\nconst enableAllLeftNavMenuItems = () => dispatch => {\n\n    dispatch(enableSelfHelpClick())\n    dispatch(enableArcIssueClick())\n    dispatch(enableAutoPredictClick())\n    dispatch(enableBlankCallClick())\n    dispatch(enableCallDropClick())\n    dispatch(enableFeedbackClick())\n    dispatch(enableTransferClick())\n\n}\nconst disableAllLeftNavMenuItems = () => dispatch => {\n\n    dispatch(disableSelfHelpClick())\n    dispatch(disableArcIssueClick())\n    dispatch(disableAutoPredictClick())\n    dispatch(disableBlankCallClick())\n    dispatch(disableCallDropClick())\n    dispatch(disableFeedbackClick())\n    dispatch(disableTransferClick())\n\n}\n\nconst getCustomerInfoForActiveTabs = (dispatch, getState) => {\n    //get redux store state for active tabs, msisdn , actor type\n\n    const state = getState()\n\n    let homeActiveTab = state.tab.homeActiveTab\n\n    fetchTabData(homeActiveTab, dispatch)\n\n}\nexport const fetchTabData = (tabName, dispatch) => {\n    if (tabName) {\n        switch (tabName) {\n            case TabConstant.HOME_USAGE_DETAILS_TAB:\n                dispatch(fetchUsageDetailsTabData())\n                break;\n            case TabConstant.HOME_BILL_COMPARE_TAB:\n                dispatch(fetchInvoiceRequest())\n                break;\n            case TabConstant.HOME_SR_DETAILS_TAB:\n                dispatch(fetchSRDetailsTabData())\n                break;\n            case TabConstant.HOME_RECOMMENDATION_TAB:\n                //recommendations call\n                break\n            case TabConstant.HOME_SCENARIO_TAB:\n                dispatch(switchHomeTab(TabConstant.HOME_USAGE_DETAILS_TAB))\n                break;\n            default:\n        }\n    }\n}\n\nexport const b2bSystemTabHandler = () => (dispatch, getState) => {\n    // Manage home tabs\n    const b2bSystemTabs = getState().tab.b2bSystemTabs;\n    for (let i = 0; i < b2bSystemTabs.length; i++) {\n        dispatch(tabManager(b2bSystemTabs[i]));\n    }\n    dispatch(switchHomeTab(TabConstant.HOME_SR_DETAILS_TAB));\n}\n\nexport const siebelSystemTabHandler = () => (dispatch, getState) => {\n    // Manage home tabs\n    const siebelSystemTabs = getState().tab.siebelSystemTabs;\n    for (let i = 0; i < siebelSystemTabs.length; i++) {\n        dispatch(tabManager(siebelSystemTabs[i]));\n    }\n    dispatch(switchHomeTab(TabConstant.HOME_USAGE_DETAILS_TAB));\n}\n\nexport const otherSystemTabHandler = () => (dispatch, getState) => {\n    // Manage home tabs\n    const otherSystemTabs = getState().tab.otherSystemTabs;\n    for (let i = 0; i < otherSystemTabs.length; i++) {\n        dispatch(tabManager(otherSystemTabs[i]));\n    }\n    dispatch(switchHomeTab(TabConstant.HOME_TOP_SCENARIO_TAB));\n}\n\nexport const prospectSystemTabHandler = () => (dispatch, getState) => {\n    // Manage home tabs\n    const prospectSystemTabs = getState().tab.prospectSystemTabs;\n    for (let i = 0; i < prospectSystemTabs.length; i++) {\n        dispatch(tabManager(prospectSystemTabs[i]));\n    }\n    dispatch(switchHomeTab(TabConstant.HOME_USAGE_DETAILS_TAB));\n}\n\nexport const legacySystemTabHandler = () => (dispatch, getState) => {\n    // Manage home tabs\n    const legacySystemTabs = getState().tab.legacySystemTabs;\n    for (let i = 0; i < legacySystemTabs.length; i++) {\n        dispatch(tabManager(legacySystemTabs[i]));\n    }\n    dispatch(switchHomeTab(TabConstant.HOME_ALERT_TAB));\n}"]},"metadata":{},"sourceType":"module"}