{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/b2b-utilization-tab/utilization-summary-tab.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport '../../../index.css';\nimport { fetchSRDetailsTabData, showSRHistoryTab } from '../../../actions/sr-details-tab.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport { openPreviousInteractionsDialog } from '../../../actions/dialog.action';\nimport AppLoader from '../../common/AppLoader';\nimport { Line } from \"react-chartjs-2\";\nimport styles from './utilization-summary-tab.style';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { fetchUtilizationTabData as _fetchUtilizationTabData } from '../../../actions/utilization-tab.action';\nimport { AppConstant } from '../../../constants/app.constant';\nimport { CircularProgress } from '@material-ui/core';\n\nvar UtilizationSummaryTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UtilizationSummaryTab, _Component);\n\n  function UtilizationSummaryTab(props) {\n    var _this;\n\n    _classCallCheck(this, UtilizationSummaryTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UtilizationSummaryTab).call(this, props));\n    _this.state = {\n      'selectedTimeRange': 'Current Usage'\n    };\n    _this.handleTimeRangeChange = _this.handleTimeRangeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UtilizationSummaryTab, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"handleTimeRangeChange\",\n    value: function handleTimeRangeChange(event) {\n      this.props.fetchUtilizationTabData(event.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dataTemplate = {\n        data: {\n          labels: null,\n          datasets: [{\n            label: 'In Traffic',\n            fill: true,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(0,0,0,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: null\n          }, {\n            label: 'Out Traffic',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: null\n          }]\n        }\n      };\n      var options = {\n        scales: {\n          yAxes: [{\n            ticks: {\n              display: true,\n              callback: function callback(label, index, labels) {\n                return label + ' ';\n              }\n            },\n            scaleLabel: {\n              display: true,\n              labelString: 'Bandwidth Consumed in Kbps'\n            }\n          }]\n        }\n      };\n      var _this$props = this.props,\n          utilizationTabData = _this$props.utilizationTabData,\n          UtilizationTabSelectedTimeRange = _this$props.UtilizationTabSelectedTimeRange,\n          UtilizationTabLoader = _this$props.UtilizationTabLoader;\n      var classes = this.props.classes;\n      var timeRangeValues = [AppConstant.UTILIZATION_TAB_TIME_RANGE_CURRENT, AppConstant.UTILIZATION_TAB_TIME_RANGE_7_DAYS, AppConstant.UTILIZATION_TAB_TIME_RANGE_30_DAYS];\n\n      if (utilizationTabData && utilizationTabData.data) {\n        dataTemplate.data.labels = utilizationTabData.data.labels;\n        dataTemplate.data.datasets[0].data = utilizationTabData.data.inTraffic;\n        dataTemplate.data.datasets[1].data = utilizationTabData.data.outTraffic;\n        return React.createElement(\"div\", {\n          className: \"mt-25\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(RadioGroup, {\n          \"aria-label\": \"callTransferType\",\n          name: \"callTransferType\",\n          className: [classes.group, 'mx-5'].join(\" \"),\n          value: UtilizationTabSelectedTimeRange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, timeRangeValues.map(function (item, index) {\n          return React.createElement(FormControlLabel, {\n            className: \"width-33 pull-left mr-15\",\n            key: item,\n            value: item,\n            control: React.createElement(Radio, {\n              classes: {\n                root: classes.radio,\n                checked: classes.checked\n              },\n              onChange: _this2.handleTimeRangeChange,\n              checked: UtilizationTabSelectedTimeRange === item,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }),\n            label: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          });\n        })), React.createElement(Grid, {\n          container: true,\n          spacing: 24,\n          className: this.props.classes.test + \" ml-10 width-75\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(Line, {\n          className: \"ml-10 width-75\",\n          data: dataTemplate.data,\n          ref: \"chart\",\n          options: options,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })), UtilizationTabLoader ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(AppLoader, {\n          cardLoader: UtilizationTabLoader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        })) : null);\n      } else if (UtilizationTabLoader) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(AppLoader, {\n          cardLoader: UtilizationTabLoader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"mt-25\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(RadioGroup, {\n          \"aria-label\": \"callTransferType\",\n          name: \"callTransferType\",\n          className: [classes.group, 'mx-5'].join(\" \"),\n          value: UtilizationTabSelectedTimeRange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, timeRangeValues.map(function (item, index) {\n          return React.createElement(FormControlLabel, {\n            className: \"width-33 pull-left mr-15\",\n            key: item,\n            value: item,\n            control: React.createElement(Radio, {\n              classes: {\n                root: classes.radio,\n                checked: classes.checked\n              },\n              onChange: _this2.handleTimeRangeChange,\n              checked: UtilizationTabSelectedTimeRange === item,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154\n              },\n              __self: this\n            }),\n            label: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          });\n        })), \"No data found for Utilization\"));\n      }\n    }\n  }]);\n\n  return UtilizationSummaryTab;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUtilizationTabData: function fetchUtilizationTabData(selectedTimeRange) {\n      return dispatch(_fetchUtilizationTabData(selectedTimeRange));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    utilizationTabData: state.UtilizationTabData.utilizationTabApiResponse,\n    UtilizationTabSelectedTimeRange: state.UtilizationTabData.UtilizationTabSelectedTimeRange,\n    UtilizationTabLoader: state.UtilizationTabData.UtilizationTabLoader\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UtilizationSummaryTab));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/b2b-utilization-tab/utilization-summary-tab.smart.js"],"names":["React","Component","connect","Grid","fetchSRDetailsTabData","showSRHistoryTab","withStyles","openPreviousInteractionsDialog","AppLoader","Line","styles","Radio","RadioGroup","FormControlLabel","fetchUtilizationTabData","AppConstant","CircularProgress","UtilizationSummaryTab","props","state","handleTimeRangeChange","bind","event","target","value","dataTemplate","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","scales","yAxes","ticks","display","callback","index","scaleLabel","labelString","utilizationTabData","UtilizationTabSelectedTimeRange","UtilizationTabLoader","classes","timeRangeValues","UTILIZATION_TAB_TIME_RANGE_CURRENT","UTILIZATION_TAB_TIME_RANGE_7_DAYS","UTILIZATION_TAB_TIME_RANGE_30_DAYS","inTraffic","outTraffic","group","join","map","item","root","radio","checked","test","mapDispatchToProps","dispatch","selectedTimeRange","mapStateToProps","UtilizationTabData","utilizationTabApiResponse"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport '../../../index.css';\nimport { fetchSRDetailsTabData, showSRHistoryTab } from '../../../actions/sr-details-tab.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport { openPreviousInteractionsDialog } from '../../../actions/dialog.action';\nimport AppLoader from '../../common/AppLoader';\nimport { Line } from \"react-chartjs-2\";\nimport styles from './utilization-summary-tab.style';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {fetchUtilizationTabData} from '../../../actions/utilization-tab.action';\nimport { AppConstant } from '../../../constants/app.constant';\nimport { CircularProgress } from '@material-ui/core';\n\nclass UtilizationSummaryTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      'selectedTimeRange': 'Current Usage'\n    }\n    this.handleTimeRangeChange = this.handleTimeRangeChange.bind(this)\n  }\n  \n  componentDidMount() {\n  }\n\n  handleTimeRangeChange(event) {\n    this.props.fetchUtilizationTabData(event.target.value)\n  }\n\n  render() {\n\n    const dataTemplate = {\n      data: {\n        labels: null,\n        datasets: [\n          {\n            label: 'In Traffic',\n            fill: true,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(0,0,0,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: null\n          },\n          {\n            label: 'Out Traffic',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: null\n          }\n        ]\n      }\n    }\n\n    const options = {\n      scales: {\n        \n        yAxes: [{\n          ticks: {\n            display: true,\n            callback: function(label, index, labels) {\n              return label+' ';\n            }\n          },\n          scaleLabel: {\n              display: true,\n              labelString: 'Bandwidth Consumed in Kbps'\n          }\n        }],\n      }     \n    }\n\n    const { utilizationTabData, UtilizationTabSelectedTimeRange, UtilizationTabLoader } = this.props;\n    const { classes } = this.props;\n\n    const timeRangeValues = [AppConstant.UTILIZATION_TAB_TIME_RANGE_CURRENT, AppConstant.UTILIZATION_TAB_TIME_RANGE_7_DAYS, AppConstant.UTILIZATION_TAB_TIME_RANGE_30_DAYS];\n\n    if(utilizationTabData && utilizationTabData.data) {\n      dataTemplate.data.labels =  utilizationTabData.data.labels\n      dataTemplate.data.datasets[0].data =  utilizationTabData.data.inTraffic\n      dataTemplate.data.datasets[1].data =  utilizationTabData.data.outTraffic\n\n      return (\n        <div className=\"mt-25\">\n          <RadioGroup\n              aria-label=\"callTransferType\"\n              name=\"callTransferType\"\n              className={[classes.group, 'mx-5'].join(\" \")}\n              value={UtilizationTabSelectedTimeRange}\n          >\n              {timeRangeValues.map((item, index) => {\n                  return (\n                      <FormControlLabel className=\"width-33 pull-left mr-15\" key={item} value={item} control={\n                          <Radio classes={{\n                              root: classes.radio,\n                              checked: classes.checked,\n                          }} onChange={this.handleTimeRangeChange} checked={UtilizationTabSelectedTimeRange === item} />} label={item}\n                      />\n                  )\n              })}\n          </RadioGroup>\n          <Grid container spacing={24} className={(this.props.classes.test) + \" ml-10 width-75\"}>\n            <Line className=\"ml-10 width-75\" data={dataTemplate.data} ref=\"chart\" options={options} />\n          </Grid>\n          {UtilizationTabLoader ? <div><AppLoader cardLoader={UtilizationTabLoader} /></div> : null}\n        </div>\n      )\n    } else if(UtilizationTabLoader) {\n      return (<div><AppLoader cardLoader={UtilizationTabLoader} /></div>)\n    } else {\n      return (\n        <>\n        <div className=\"mt-25\">\n          <RadioGroup\n                aria-label=\"callTransferType\"\n                name=\"callTransferType\"\n                className={[classes.group, 'mx-5'].join(\" \")}\n                value={UtilizationTabSelectedTimeRange}>\n                {timeRangeValues.map((item, index) => {\n                    return (\n                        <FormControlLabel className=\"width-33 pull-left mr-15\" key={item} value={item} control={\n                            <Radio classes={{\n                                root: classes.radio,\n                                checked: classes.checked,\n                            }} onChange={this.handleTimeRangeChange} checked={UtilizationTabSelectedTimeRange === item} />} label={item}\n                        />\n                    )\n                })}\n            </RadioGroup>\n            \n            No data found for Utilization\n          </div>\n        {/* {UtilizationTabLoader ? <div><AppLoader cardLoader={UtilizationTabLoader} /></div> : null} */}\n        </>\n      )\n    }\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  fetchUtilizationTabData: (selectedTimeRange) => dispatch(fetchUtilizationTabData(selectedTimeRange))\n});\n\nconst mapStateToProps = state => {\n  return {\n    utilizationTabData: state.UtilizationTabData.utilizationTabApiResponse,\n    UtilizationTabSelectedTimeRange: state.UtilizationTabData.UtilizationTabSelectedTimeRange,\n    UtilizationTabLoader: state.UtilizationTabData.UtilizationTabLoader,\n  };\n}\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(withStyles(styles)(UtilizationSummaryTab));\n"]},"metadata":{},"sourceType":"module"}