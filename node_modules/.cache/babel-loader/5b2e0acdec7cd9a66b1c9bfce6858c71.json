{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nimport DisabledTaggingStatus from '../constants/disabled-tagging.enum';\nimport CookieManagerService from './cookie.service';\n\nvar SrTaskUpdateService =\n/*#__PURE__*/\nfunction () {\n  function SrTaskUpdateService() {\n    _classCallCheck(this, SrTaskUpdateService);\n  }\n\n  _createClass(SrTaskUpdateService, null, [{\n    key: \"fetchTaskFieldsRequest\",\n    value: function fetchTaskFieldsRequest(reqData) {\n      var caseName = reqData.caseName ? encodeURIComponent(reqData.caseName) : \"\";\n      var transactionId = reqData.transactionId || \"\";\n      var lsiNumber = reqData.lsiNumber || \"\";\n      var url = Config.contextPath + \"user/rest/v1.0/crm/sr/case/task/fields?caseName=\" + caseName + \"&transactionId=\" + transactionId + '&lsiNumber=' + lsiNumber;\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"fetchSrTaskUpdateCasesRequest\",\n    value: function fetchSrTaskUpdateCasesRequest(reqData) {\n      var transactionId = reqData.transactionId || \"\";\n      var srNumber = reqData.srNumber || '';\n      var url = Config.contextPath + \"user/rest/v1.0/crm/sr/cases?srNumber=\".concat(srNumber, \"&transactionId=\").concat(transactionId);\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"srTaskUpdateRequest\",\n    value: function srTaskUpdateRequest(reqData) {\n      var authDetails = CookieManagerService.getAuthDetails();\n      var data = {\n        channel: authDetails.channel,\n        lob: authDetails.lob\n      };\n      var reqDataObj = Object.assign({}, data, reqData);\n      var url = Config.contextPath + \"user/rest/v1.0/crm/sr/task\";\n      return CustomHttpService.post(url, reqDataObj, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"getTaskFieldsNameValuePairs\",\n    value: function getTaskFieldsNameValuePairs(taskFieldsInfo) {\n      var taskFieldsNameValuePairs = {};\n\n      for (var i = 0; i < taskFieldsInfo.length; i++) {\n        var tempObj = {\n          dataType: taskFieldsInfo[i].dataType,\n          name: taskFieldsInfo[i].columnName,\n          attributeName: taskFieldsInfo[i].attributeColumnName,\n          order: taskFieldsInfo[i].ordering,\n          value: taskFieldsInfo[i].defaultValue\n        };\n        taskFieldsNameValuePairs[taskFieldsInfo[i].columnName] = tempObj;\n      }\n\n      return taskFieldsNameValuePairs;\n    }\n  }, {\n    key: \"getDFFSource\",\n    value: function getDFFSource(type, multipleDynamicTaggingKey) {\n      switch (type) {\n        case CardLinkConstant.OUTSTANDING_CARD:\n          return DisabledTaggingStatus.SUB_HEADER_OUTSTANDING_SR_TAGGING;\n\n        case CardLinkConstant.MULTIPLE_DYNAMIC_TAGGING:\n          return DisabledTaggingStatus.MULTIPLE_DYNAMIC_TAGGING;\n\n        default:\n          break;\n      }\n    }\n  }]);\n\n  return SrTaskUpdateService;\n}();\n\nexport default SrTaskUpdateService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/task-update.service.js"],"names":["CustomHttpService","Config","EncodeDecodeType","CardLinkConstant","DisabledTaggingStatus","CookieManagerService","SrTaskUpdateService","reqData","caseName","encodeURIComponent","transactionId","lsiNumber","url","contextPath","get","DEFAULT","srNumber","authDetails","getAuthDetails","data","channel","lob","reqDataObj","Object","assign","post","taskFieldsInfo","taskFieldsNameValuePairs","i","length","tempObj","dataType","name","columnName","attributeName","attributeColumnName","order","ordering","value","defaultValue","type","multipleDynamicTaggingKey","OUTSTANDING_CARD","SUB_HEADER_OUTSTANDING_SR_TAGGING","MULTIPLE_DYNAMIC_TAGGING"],"mappings":"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","sourcesContent":["import CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nimport DisabledTaggingStatus from '../constants/disabled-tagging.enum';\nimport CookieManagerService from './cookie.service';\n\nclass SrTaskUpdateService {\n\n    static fetchTaskFieldsRequest(reqData) {\n        const caseName = reqData.caseName ? encodeURIComponent(reqData.caseName) : \"\";\n        const transactionId = reqData.transactionId || \"\";\n        const lsiNumber = reqData.lsiNumber || \"\";\n        const url = Config.contextPath + \"user/rest/v1.0/crm/sr/case/task/fields?caseName=\" + caseName + \"&transactionId=\" + transactionId + '&lsiNumber=' + lsiNumber;\n        return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static fetchSrTaskUpdateCasesRequest(reqData) {\n        const transactionId = reqData.transactionId || \"\";\n        const srNumber = reqData.srNumber || '';\n        const url = Config.contextPath + `user/rest/v1.0/crm/sr/cases?srNumber=${srNumber}&transactionId=${transactionId}`;\n        return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static srTaskUpdateRequest(reqData) {\n        let authDetails = CookieManagerService.getAuthDetails();\n        const data = {\n            channel: authDetails.channel,\n            lob: authDetails.lob,\n        };\n        const reqDataObj = Object.assign({}, data, reqData);\n        var url = Config.contextPath + \"user/rest/v1.0/crm/sr/task\";\n        return CustomHttpService.post(url, reqDataObj, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static getTaskFieldsNameValuePairs(taskFieldsInfo) {\n        const taskFieldsNameValuePairs = {};\n        for (let i = 0; i < taskFieldsInfo.length; i++) {\n            const tempObj = {\n                dataType: taskFieldsInfo[i].dataType,\n                name: taskFieldsInfo[i].columnName,\n                attributeName: taskFieldsInfo[i].attributeColumnName,\n                order: taskFieldsInfo[i].ordering,\n                value: taskFieldsInfo[i].defaultValue\n            }\n            taskFieldsNameValuePairs[taskFieldsInfo[i].columnName] = tempObj;\n        }\n        return taskFieldsNameValuePairs;\n    }\n\n    static getDFFSource(type, multipleDynamicTaggingKey) {\n        switch (type) {\n            case CardLinkConstant.OUTSTANDING_CARD:\n                return DisabledTaggingStatus.SUB_HEADER_OUTSTANDING_SR_TAGGING;\n            case CardLinkConstant.MULTIPLE_DYNAMIC_TAGGING:\n                return DisabledTaggingStatus.MULTIPLE_DYNAMIC_TAGGING;\n            default:\n                break;\n        }\n    }\n}\n\nexport default SrTaskUpdateService;\n"]},"metadata":{},"sourceType":"module"}