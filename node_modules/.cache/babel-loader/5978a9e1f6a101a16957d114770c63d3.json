{"ast":null,"code":"import UtilizationTabService from '../services/utilization-tab.service';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { openSnackbarRequest } from './snackbar.action';\nimport { UtilizationActionType } from \"../actiontype/utilization-tab.actiontype\";\nimport { AppConstant } from \"../constants/app.constant\";\nexport var fetchUtilizationTabData = function fetchUtilizationTabData(selectedTimeRange) {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (!state.customerInfo || !state.customerInfo.lsiNumberInput) {\n      return false;\n    }\n\n    var timeRange = AppConstant.UTILIZATION_TAB_TIME_RANGE_CURRENT;\n\n    if (selectedTimeRange) {\n      timeRange = selectedTimeRange;\n    }\n\n    dispatch(UpdateUtilizationTabApiTimeRange(timeRange));\n\n    if (state && state.UsageDetailsTabApiInfo) {\n      // if(state.UsageDetailsTabApiInfo.timeRange) {\n      //     timeRange = state.UsageDetailsTabApiInfo.timeRange\n      // }\n      if (state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse.cardContent) {\n        dispatch(UtilizationTabApiSuccess(state.UtilizationTabData.utilizationTabApiResponse));\n        return;\n      }\n    }\n\n    var snackbarMessage = {};\n    dispatch(fetchUtilizationDetailsApiLoading());\n    dispatch(UtilizationTabShowLoader());\n    UtilizationTabService.fetchUtilizationDataApi(state.customerInfo.lsiNumberInput, timeRange).then(function (response) {\n      dispatch(UtilizationTabHideLoader());\n\n      if (response && response.data && response.data.result && response.data.result.data) {\n        dispatch(UtilizationTabApiSuccess(response.data.result.data));\n        dispatch(setUtilizationData(response.data));\n      } else {\n        snackbarMessage = SnackbarMessages.UTILIZATION_NO_DATA;\n        dispatch(openSnackbarRequest(null, snackbarMessage));\n      }\n    }, function (error) {\n      dispatch(UtilizationTabHideLoader());\n      dispatch(UtilizationTabApiFailure(error));\n    });\n  };\n};\n\nvar setUtilizationData = function setUtilizationData(data) {\n  return function (dispatch, getState) {\n    var state = getState();\n\n    if (state && state.UtilizationTabData && state.UtilizationTabData.utilizationTabApiResponse) {\n      dispatch(UtilizationTabApiSuccess(data.result));\n    }\n  };\n};\n\nfunction fetchUtilizationDetailsApiLoading() {\n  return {\n    type: UtilizationActionType.DATA_TRAFFIC_UTILIZATION_REQUEST\n  };\n}\n\nfunction UtilizationTabApiSuccess(response, timeRange) {\n  return {\n    type: UtilizationActionType.DATA_TRAFFIC_UTILIZATION_SUCCESS,\n    payload: response,\n    timeRange: timeRange\n  };\n}\n\nfunction UtilizationTabApiFailure(error) {\n  return {\n    type: UtilizationActionType.DATA_TRAFFIC_UTILIZATION_FAILURE,\n    payload: error\n  };\n}\n\nfunction UtilizationTabShowLoader() {\n  return {\n    type: UtilizationActionType.SHOW_LOADER,\n    loader: true\n  };\n}\n\nfunction UtilizationTabHideLoader() {\n  return {\n    type: UtilizationActionType.HIDE_LOADER,\n    loader: false\n  };\n}\n\nfunction UpdateUtilizationTabApiTimeRange(timeRange) {\n  return {\n    type: UtilizationActionType.UPDATE_DATA_TRAFFIC_UTILIZATION_TIME_RANGE,\n    timeRange: timeRange\n  };\n}","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/actions/utilization-tab.action.js"],"names":["UtilizationTabService","SnackbarMessages","openSnackbarRequest","UtilizationActionType","AppConstant","fetchUtilizationTabData","selectedTimeRange","dispatch","getState","state","customerInfo","lsiNumberInput","timeRange","UTILIZATION_TAB_TIME_RANGE_CURRENT","UpdateUtilizationTabApiTimeRange","UsageDetailsTabApiInfo","usageDetailsTabApiResponse","cardContent","UtilizationTabApiSuccess","UtilizationTabData","utilizationTabApiResponse","snackbarMessage","fetchUtilizationDetailsApiLoading","UtilizationTabShowLoader","fetchUtilizationDataApi","then","response","UtilizationTabHideLoader","data","result","setUtilizationData","UTILIZATION_NO_DATA","error","UtilizationTabApiFailure","type","DATA_TRAFFIC_UTILIZATION_REQUEST","DATA_TRAFFIC_UTILIZATION_SUCCESS","payload","DATA_TRAFFIC_UTILIZATION_FAILURE","SHOW_LOADER","loader","HIDE_LOADER","UPDATE_DATA_TRAFFIC_UTILIZATION_TIME_RANGE"],"mappings":"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","sourcesContent":["import UtilizationTabService from '../services/utilization-tab.service';\nimport { SnackbarMessages } from '../constants/snackbar-messages';\nimport { openSnackbarRequest } from './snackbar.action';\nimport { UtilizationActionType } from \"../actiontype/utilization-tab.actiontype\";\nimport {AppConstant} from \"../constants/app.constant\";\n\n\nexport const fetchUtilizationTabData = selectedTimeRange => (dispatch, getState) => {\n\n    const state = getState();\n    if (!state.customerInfo || !state.customerInfo.lsiNumberInput) {\n        return false;\n    }\n    let timeRange = AppConstant.UTILIZATION_TAB_TIME_RANGE_CURRENT\n\n    if(selectedTimeRange) {\n        timeRange = selectedTimeRange\n    }\n\n    dispatch(UpdateUtilizationTabApiTimeRange(timeRange))\n\n    if (state && state.UsageDetailsTabApiInfo) {\n        // if(state.UsageDetailsTabApiInfo.timeRange) {\n        //     timeRange = state.UsageDetailsTabApiInfo.timeRange\n        // }\n        if(state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse && state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse.cardContent) {\n            dispatch(UtilizationTabApiSuccess(state.UtilizationTabData.utilizationTabApiResponse));\n            return;\n        }\n    }\n    let snackbarMessage = {}\n    dispatch(fetchUtilizationDetailsApiLoading());\n    dispatch(UtilizationTabShowLoader());\n    UtilizationTabService.fetchUtilizationDataApi(state.customerInfo.lsiNumberInput, timeRange).then(\n        response => {\n\n            dispatch(UtilizationTabHideLoader());\n            if (response && response.data && response.data.result && response.data.result.data) {\n                dispatch(UtilizationTabApiSuccess(response.data.result.data));\n                dispatch(setUtilizationData(response.data));\n            }\n            else {\n                snackbarMessage = SnackbarMessages.UTILIZATION_NO_DATA;\n                dispatch(openSnackbarRequest(null, snackbarMessage));\n            }\n        },\n        error => {\n            dispatch(UtilizationTabHideLoader());\n            dispatch(UtilizationTabApiFailure(error));\n        }\n    );\n}\n\nconst setUtilizationData = (data) => (dispatch, getState) => {\n    const state = getState();\n    if (state && state.UtilizationTabData && state.UtilizationTabData.utilizationTabApiResponse) {\n        dispatch(UtilizationTabApiSuccess(data.result));\n    }\n\n}\n\nfunction fetchUtilizationDetailsApiLoading() {\n    return {\n        type: UtilizationActionType.DATA_TRAFFIC_UTILIZATION_REQUEST\n    }\n}\nfunction UtilizationTabApiSuccess(response, timeRange) {\n    return {\n        type: UtilizationActionType.DATA_TRAFFIC_UTILIZATION_SUCCESS,\n        payload: response,\n        timeRange: timeRange\n    }\n}\nfunction UtilizationTabApiFailure(error) {\n    return {\n        type: UtilizationActionType.DATA_TRAFFIC_UTILIZATION_FAILURE,\n        payload: error\n    }\n}\n\nfunction UtilizationTabShowLoader() {\n    return {\n        type: UtilizationActionType.SHOW_LOADER,\n        loader: true\n    }\n}\n\nfunction UtilizationTabHideLoader() {\n    return {\n        type: UtilizationActionType.HIDE_LOADER,\n        loader: false\n    }\n}\n\nfunction UpdateUtilizationTabApiTimeRange(timeRange) {\n    return {\n        type: UtilizationActionType.UPDATE_DATA_TRAFFIC_UTILIZATION_TIME_RANGE,\n        timeRange\n    }\n}"]},"metadata":{},"sourceType":"module"}