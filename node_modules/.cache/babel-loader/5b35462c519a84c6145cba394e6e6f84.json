{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/prediction/prediction.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './prediction.style.css';\nimport { togglePredictionDisplay as _togglePredictionDisplay, fetchPredictionRequest as _fetchPredictionRequest } from '../../actions/prediction.action';\nimport FTRMessageDialog from '../shared/dialogs/ftr-message/ftr-message-dialog.smart';\nimport SRMessageDialog from '../shared/dialogs/sr-message/sr-message-dialog.smart';\nimport DFFInfo from '../common/dff-info/dff-info.smart';\nimport AutoPredictSuggestion from './auto-predict-suggestion/auto-predict-suggestion.smart';\nimport AutoPredictOne from './auto-predict-one/auto-predict-one.smart';\nimport AutoPredictTwo from './auto-predict-two/auto-predict-two.smart';\nimport ToggleAutoPredict from './toggle-auto-predict/toggle-auto-predict.dumb';\n\nvar Prediction =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Prediction, _Component);\n\n  function Prediction() {\n    var _this;\n\n    _classCallCheck(this, Prediction);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Prediction).call(this));\n    _this.toggleDisplay = _this.toggleDisplay.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // componentDidMount() {\n  //     this.props.fetchPredictionRequest();\n  // }\n\n\n  _createClass(Prediction, [{\n    key: \"toggleDisplay\",\n    value: function toggleDisplay() {\n      this.props.togglePredictionDisplay();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          displayPredictionWindow = _this$props.displayPredictionWindow,\n          ftrResponseObj = _this$props.ftrResponseObj,\n          srResponseObj = _this$props.srResponseObj,\n          dffResponseObj = _this$props.dffResponseObj,\n          displaySuggestion = _this$props.displaySuggestion;\n      return React.createElement(\"div\", {\n        className: displayPredictionWindow ? '' : 'hidden',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"prediction-wrapper\" + (!displaySuggestion ? '' : ' hidden'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(AutoPredictOne, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(AutoPredictTwo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"prediction-blocks width-half shadow-sprtr prediction-panel-hover pr-30 pl-30 pt-10\" + (ftrResponseObj ? '' : ' hidden'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(FTRMessageDialog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(AutoPredictSuggestion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(ToggleAutoPredict, {\n        from: \"close\",\n        toggleDisplay: this.toggleDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"prediction-blocks width-half shadow-sprtr prediction-panel-hover pr-30 pl-30 pt-10\" + (srResponseObj ? '' : ' hidden'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(SRMessageDialog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(AutoPredictSuggestion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(ToggleAutoPredict, {\n        from: \"close\",\n        toggleDisplay: this.toggleDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"prediction-blocks width-half pr-30 pb-30 pl-30 pt-60 shadow-sprtr prediction-panel-hover\" + (dffResponseObj && !srResponseObj ? '' : ' hidden'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(DFFInfo, {\n        textFieldClass: \"dff-text-field\",\n        scrollableAction: \" scrollable-actions\",\n        source: \"prediction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(ToggleAutoPredict, {\n        from: \"next\",\n        toggleDisplay: this.toggleDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"clear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(AutoPredictSuggestion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"overlay-mask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Prediction;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    predictionData: state.prediction.predictionData,\n    displayPredictionWindow: state.prediction.displayPredictionWindow,\n    displaySuggestion: state.prediction.displaySuggestion,\n    ftrResponseObj: state.prediction.ftrResponseObj,\n    srResponseObj: state.prediction.srResponseObj,\n    dffResponseObj: state.prediction.dffResponseObj\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    togglePredictionDisplay: function togglePredictionDisplay() {\n      return dispatch(_togglePredictionDisplay());\n    },\n    fetchPredictionRequest: function fetchPredictionRequest() {\n      return dispatch(_fetchPredictionRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Prediction);","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/prediction/prediction.smart.js"],"names":["React","Component","connect","togglePredictionDisplay","fetchPredictionRequest","FTRMessageDialog","SRMessageDialog","DFFInfo","AutoPredictSuggestion","AutoPredictOne","AutoPredictTwo","ToggleAutoPredict","Prediction","toggleDisplay","bind","props","displayPredictionWindow","ftrResponseObj","srResponseObj","dffResponseObj","displaySuggestion","mapStateToProps","state","predictionData","prediction","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './prediction.style.css';\nimport { togglePredictionDisplay, fetchPredictionRequest } from '../../actions/prediction.action';\nimport FTRMessageDialog from '../shared/dialogs/ftr-message/ftr-message-dialog.smart';\nimport SRMessageDialog from '../shared/dialogs/sr-message/sr-message-dialog.smart';\nimport DFFInfo from '../common/dff-info/dff-info.smart';\nimport AutoPredictSuggestion from './auto-predict-suggestion/auto-predict-suggestion.smart';\nimport AutoPredictOne from './auto-predict-one/auto-predict-one.smart';\nimport AutoPredictTwo from './auto-predict-two/auto-predict-two.smart';\nimport ToggleAutoPredict from './toggle-auto-predict/toggle-auto-predict.dumb';\n\nclass Prediction extends Component {\n\n    constructor() {\n        super();\n        this.toggleDisplay = this.toggleDisplay.bind(this);\n    }\n\n    // componentDidMount() {\n    //     this.props.fetchPredictionRequest();\n    // }\n\n    toggleDisplay() {\n        this.props.togglePredictionDisplay();\n    }\n\n    render() {\n        const { displayPredictionWindow, ftrResponseObj, srResponseObj, dffResponseObj, displaySuggestion } = this.props;\n        return (\n            <div className={displayPredictionWindow ? '' : 'hidden'}>\n                <div className={\"prediction-wrapper\" + (!displaySuggestion ? '' : ' hidden')}>\n                    <AutoPredictOne />\n\n                    <AutoPredictTwo />\n\n                    <div className={\"prediction-blocks width-half shadow-sprtr prediction-panel-hover pr-30 pl-30 pt-10\" + (ftrResponseObj ? '' : ' hidden')}>\n                        <FTRMessageDialog />\n\n                        <AutoPredictSuggestion />\n\n                        <ToggleAutoPredict from=\"close\" toggleDisplay={this.toggleDisplay} />\n                    </div>\n\n                    <div className={\"prediction-blocks width-half shadow-sprtr prediction-panel-hover pr-30 pl-30 pt-10\" + (srResponseObj ? '' : ' hidden')}>\n                        <SRMessageDialog />\n\n                        <AutoPredictSuggestion />\n\n                        <ToggleAutoPredict from=\"close\" toggleDisplay={this.toggleDisplay} />\n                    </div>\n\n                    <div className={\"prediction-blocks width-half pr-30 pb-30 pl-30 pt-60 shadow-sprtr prediction-panel-hover\" + (dffResponseObj && !srResponseObj ? '' : ' hidden')}>\n                        <DFFInfo textFieldClass='dff-text-field' scrollableAction=' scrollable-actions' source=\"prediction\" />\n\n                        <ToggleAutoPredict from=\"next\" toggleDisplay={this.toggleDisplay} />\n                    </div>\n\n                    <div className=\"clear\"></div>\n                </div>\n\n                <AutoPredictSuggestion />\n\n                <div className=\"overlay-mask\"></div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        predictionData: state.prediction.predictionData,\n        displayPredictionWindow: state.prediction.displayPredictionWindow,\n        displaySuggestion: state.prediction.displaySuggestion,\n        ftrResponseObj: state.prediction.ftrResponseObj,\n        srResponseObj: state.prediction.srResponseObj,\n        dffResponseObj: state.prediction.dffResponseObj,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    togglePredictionDisplay: () => dispatch(togglePredictionDisplay()),\n    fetchPredictionRequest: () => dispatch(fetchPredictionRequest())\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Prediction);\n"]},"metadata":{},"sourceType":"module"}