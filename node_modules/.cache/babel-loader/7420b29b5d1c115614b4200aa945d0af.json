{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\n\nvar LoginService =\n/*#__PURE__*/\nfunction () {\n  function LoginService() {\n    _classCallCheck(this, LoginService);\n  }\n\n  _createClass(LoginService, null, [{\n    key: \"fetchLoginApi\",\n    value: function fetchLoginApi(logindata) {\n      var config = {\n        headers: {\n          'Content-Type': \"application/x-www-form-urlencoded\"\n        }\n      };\n      var data = \"grant_type=password&username=\" + logindata[\"username\"] + \"&password=\" + btoa(logindata[\"password\"]) + \"&client_id=b2b&agentId=\" + logindata[\"username\"];\n      var url = Config.authPath + \"oauth/token\";\n      return CustomHttpService.post(url, data, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"loginDataHandler\",\n    value: function loginDataHandler(loginInfo) {\n      var access_token = loginInfo[\"access_token\"];\n      var token = loginInfo[\"token_type\"] && loginInfo[\"access_token\"] ? loginInfo[\"token_type\"] + loginInfo[\"access_token\"] : \"\";\n      var channel = \"\";\n\n      if (loginInfo[\"tokenData\"] && loginInfo[\"tokenData\"][\"channels\"] && loginInfo[\"tokenData\"][\"channels\"][0] && loginInfo[\"tokenData\"][\"channels\"][0][\"name\"]) {\n        channel = loginInfo[\"tokenData\"][\"channels\"][0][\"name\"];\n      }\n\n      var lob = loginInfo[\"tokenData\"] && loginInfo[\"tokenData\"][\"lob\"] ? loginInfo[\"tokenData\"][\"lob\"] : \"\";\n      var source = loginInfo[\"tokenData\"] && loginInfo[\"tokenData\"][\"source\"] ? loginInfo[\"tokenData\"][\"source\"] : \"\";\n      var agentId = loginInfo[\"tokenData\"] && loginInfo[\"tokenData\"][\"agentId\"] ? loginInfo[\"tokenData\"][\"agentId\"] : \"\";\n      var obj = {\n        token: token,\n        channel: channel,\n        lob: lob,\n        source: source,\n        agentId: agentId,\n        access_token: access_token\n      };\n      CookieManagerService.setItem(AppConstant.AUTH_DETAILS, JSON.stringify(obj));\n    }\n  }]);\n\n  return LoginService;\n}();\n\nexport default LoginService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/login.service.js"],"names":["CustomHttpService","Config","CookieManagerService","AppConstant","EncodeDecodeType","LoginService","logindata","config","headers","data","btoa","url","authPath","post","DEFAULT","loginInfo","access_token","token","channel","lob","source","agentId","obj","setItem","AUTH_DETAILS","JSON","stringify"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,uBAA9B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,OAAOC,gBAAP,MAA6B,kCAA7B;;IACMC,Y;;;;;;;;;kCAEmBC,S,EAAW;AAC5B,UAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADE,OAAf;AAKA,UAAMC,IAAI,GAAG,kCAAkCH,SAAS,CAAC,UAAD,CAA3C,GAA0D,YAA1D,GAAyEI,IAAI,CAACJ,SAAS,CAAC,UAAD,CAAV,CAA7E,GAAuG,yBAAvG,GAAmIA,SAAS,CAAC,UAAD,CAAzJ;AACA,UAAIK,GAAG,GAAGV,MAAM,CAACW,QAAP,GAAkB,aAA5B;AACA,aAAOZ,iBAAiB,CAACa,IAAlB,CAAuBF,GAAvB,EAA4BF,IAA5B,EAAkCF,MAAlC,EAA0CH,gBAAgB,CAACU,OAA3D,CAAP;AACH;;;qCAEuBC,S,EAAW;AAC/B,UAAMC,YAAY,GAAGD,SAAS,CAAC,cAAD,CAA9B;AACA,UAAME,KAAK,GAAGF,SAAS,CAAC,YAAD,CAAT,IAA2BA,SAAS,CAAC,cAAD,CAApC,GAAuDA,SAAS,CAAC,YAAD,CAAT,GAA0BA,SAAS,CAAC,cAAD,CAA1F,GAA6G,EAA3H;AACA,UAAIG,OAAO,GAAG,EAAd;;AACA,UAAIH,SAAS,CAAC,WAAD,CAAT,IAA0BA,SAAS,CAAC,WAAD,CAAT,CAAuB,UAAvB,CAA1B,IAAgEA,SAAS,CAAC,WAAD,CAAT,CAAuB,UAAvB,EAAmC,CAAnC,CAAhE,IAAyGA,SAAS,CAAC,WAAD,CAAT,CAAuB,UAAvB,EAAmC,CAAnC,EAAsC,MAAtC,CAA7G,EAA4J;AACxJG,QAAAA,OAAO,GAAGH,SAAS,CAAC,WAAD,CAAT,CAAuB,UAAvB,EAAmC,CAAnC,EAAsC,MAAtC,CAAV;AACH;;AACD,UAAMI,GAAG,GAAGJ,SAAS,CAAC,WAAD,CAAT,IAA0BA,SAAS,CAAC,WAAD,CAAT,CAAuB,KAAvB,CAA1B,GAA0DA,SAAS,CAAC,WAAD,CAAT,CAAuB,KAAvB,CAA1D,GAA0F,EAAtG;AACA,UAAMK,MAAM,GAAGL,SAAS,CAAC,WAAD,CAAT,IAA0BA,SAAS,CAAC,WAAD,CAAT,CAAuB,QAAvB,CAA1B,GAA6DA,SAAS,CAAC,WAAD,CAAT,CAAuB,QAAvB,CAA7D,GAAgG,EAA/G;AACA,UAAMM,OAAO,GAAGN,SAAS,CAAC,WAAD,CAAT,IAA0BA,SAAS,CAAC,WAAD,CAAT,CAAuB,SAAvB,CAA1B,GAA8DA,SAAS,CAAC,WAAD,CAAT,CAAuB,SAAvB,CAA9D,GAAkG,EAAlH;AACA,UAAMO,GAAG,GAAG;AACRL,QAAAA,KAAK,EAAEA,KADC;AAERC,QAAAA,OAAO,EAAEA,OAFD;AAGRC,QAAAA,GAAG,EAAEA,GAHG;AAIRC,QAAAA,MAAM,EAAEA,MAJA;AAKRC,QAAAA,OAAO,EAAEA,OALD;AAMRL,QAAAA,YAAY,EAAZA;AANQ,OAAZ;AAQAd,MAAAA,oBAAoB,CAACqB,OAArB,CAA6BpB,WAAW,CAACqB,YAAzC,EAAuDC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAvD;AACH;;;;;;AAGL,eAAejB,YAAf","sourcesContent":["import CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\n\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nclass LoginService {\n\n    static fetchLoginApi(logindata) {\n        const config = {\n            headers: {\n                'Content-Type': \"application/x-www-form-urlencoded\",\n            }\n        };\n        const data = \"grant_type=password&username=\" + logindata[\"username\"] + \"&password=\" + btoa(logindata[\"password\"]) + \"&client_id=b2b&agentId=\" + logindata[\"username\"];\n        var url = Config.authPath + \"oauth/token\";\n        return CustomHttpService.post(url, data, config, EncodeDecodeType.DEFAULT);\n    }\n\n    static loginDataHandler(loginInfo) {\n        const access_token = loginInfo[\"access_token\"];\n        const token = loginInfo[\"token_type\"] && loginInfo[\"access_token\"] ? loginInfo[\"token_type\"] + loginInfo[\"access_token\"] : \"\";\n        let channel = \"\";\n        if (loginInfo[\"tokenData\"] && loginInfo[\"tokenData\"][\"channels\"] && loginInfo[\"tokenData\"][\"channels\"][0] && loginInfo[\"tokenData\"][\"channels\"][0][\"name\"]) {\n            channel = loginInfo[\"tokenData\"][\"channels\"][0][\"name\"];\n        }\n        const lob = loginInfo[\"tokenData\"] && loginInfo[\"tokenData\"][\"lob\"] ? loginInfo[\"tokenData\"][\"lob\"] : \"\";\n        const source = loginInfo[\"tokenData\"] && loginInfo[\"tokenData\"][\"source\"] ? loginInfo[\"tokenData\"][\"source\"] : \"\";\n        const agentId = loginInfo[\"tokenData\"] && loginInfo[\"tokenData\"][\"agentId\"] ? loginInfo[\"tokenData\"][\"agentId\"] : \"\";\n        const obj = {\n            token: token,\n            channel: channel,\n            lob: lob,\n            source: source,\n            agentId: agentId,\n            access_token\n        };\n        CookieManagerService.setItem(AppConstant.AUTH_DETAILS, JSON.stringify(obj));\n    }\n}\n\nexport default LoginService;\n"]},"metadata":{},"sourceType":"module"}