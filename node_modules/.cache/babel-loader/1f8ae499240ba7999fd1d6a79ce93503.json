{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/route.component.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport App from './App';\nimport LoginPage from './login/login-page.smart';\nimport { connect } from \"react-redux\";\nimport { checkAuthToken } from \"../actions/authorization.actions\";\nimport { handleLogout } from \"../actions/login.action\";\nimport { withRouter } from 'react-router';\nimport AuthorizationStatus from \"../constants/authorization-status.enum\";\nimport UtilService from '../services/util.service';\n\nvar RouteComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RouteComponent, _Component);\n\n  function RouteComponent(props) {\n    var _this;\n\n    _classCallCheck(this, RouteComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RouteComponent).call(this, props));\n\n    _this.getPath = function () {\n      var _this$props = _this.props,\n          userAuthorized = _this$props.userAuthorized,\n          location = _this$props.location;\n      var path = location.pathname;\n\n      if (userAuthorized !== AuthorizationStatus.LOADING) {\n        path = userAuthorized === AuthorizationStatus.AUTHORIZED ? location.pathname : '/login' + location.search;\n      }\n\n      if (location.pathname === \"/login\") {\n        return \"/login\";\n      }\n\n      return path;\n    };\n\n    _this.props.history.listen(function (location, action) {\n      if (location.pathname === '/login') {// this.props.handleLogout()\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(RouteComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          location = _this$props2.location,\n          checkAuthToken = _this$props2.checkAuthToken;\n\n      if (location.pathname !== \"/login\" && location.pathname !== \"/\") {\n        checkAuthToken();\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (UtilService.isPlatformWindows()) {\n        var link = document.createElement('link');\n        link.id = 'id2';\n        link.rel = 'stylesheet';\n        link.href = \"\".concat(process.env.PUBLIC_URL, \"/assets/css/windows.css\");\n        document.head.appendChild(link);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var location = this.props.location;\n      var pathNew = this.getPath();\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, pathNew !== location.pathname && React.createElement(Redirect, {\n        to: pathNew,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        component: LoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/home\",\n        component: App,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), location.pathname !== '/login' && location.pathname !== '/home' && React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RouteComponent;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userAuthorized: state.userAuthorized\n  };\n};\n\nvar mapDispatchToProps = {\n  checkAuthToken: checkAuthToken\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RouteComponent));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/route.component.js"],"names":["React","Component","Switch","Route","Redirect","App","LoginPage","connect","checkAuthToken","handleLogout","withRouter","AuthorizationStatus","UtilService","RouteComponent","props","getPath","userAuthorized","location","path","pathname","LOADING","AUTHORIZED","search","history","listen","action","isPlatformWindows","link","document","createElement","id","rel","href","process","env","PUBLIC_URL","head","appendChild","pathNew","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport App from './App';\nimport LoginPage from './login/login-page.smart';\nimport { connect } from \"react-redux\";\nimport { checkAuthToken } from \"../actions/authorization.actions\"\nimport { handleLogout } from \"../actions/login.action\"\nimport { withRouter } from 'react-router'\nimport AuthorizationStatus from \"../constants/authorization-status.enum\"\nimport UtilService from '../services/util.service';\n\nclass RouteComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.props.history.listen((location, action) => {\n            if (location.pathname === '/login') {\n                // this.props.handleLogout()\n            }\n        });\n    }\n\n    componentDidMount() {\n        let { location, checkAuthToken } = this.props\n        if (location.pathname !== \"/login\" && location.pathname !== \"/\") {\n            checkAuthToken()\n        }\n\n\n    }\n\n    componentWillMount() {\n        if (UtilService.isPlatformWindows()) {\n            var link = document.createElement('link');\n            link.id = 'id2';\n            link.rel = 'stylesheet';\n            link.href = `${process.env.PUBLIC_URL}/assets/css/windows.css`\n            document.head.appendChild(link);\n        }\n    }\n\n\n    getPath = () => {\n        let { userAuthorized, location } = this.props;\n        let path = location.pathname\n        if (userAuthorized !== AuthorizationStatus.LOADING) {\n            path = userAuthorized === AuthorizationStatus.AUTHORIZED ? location.pathname : '/login' + location.search\n        }\n        if (location.pathname === \"/login\") {\n            return \"/login\"\n        }\n        return path\n    }\n\n\n    render() {\n\n        let { location } = this.props;\n        let pathNew = this.getPath()\n        return (\n            <Switch>\n                {pathNew !== location.pathname && <Redirect to={pathNew}></Redirect>}\n                <Route exact path='/login' component={LoginPage}></Route>\n                <Route exact path='/home' component={App}></Route>\n                {location.pathname !== '/login' && location.pathname !== '/home' && <Redirect to='/login' />}\n            </Switch>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        userAuthorized: state.userAuthorized\n    };\n};\n\nconst mapDispatchToProps = {\n    checkAuthToken,\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(RouteComponent));\n\n"]},"metadata":{},"sourceType":"module"}