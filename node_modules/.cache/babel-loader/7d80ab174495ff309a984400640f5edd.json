{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/uwq/ticket-filter/ticket-filter.smart.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ticket-filter.style';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { onApplyUWQFilter, resetUWQFilterHandler } from '../../../actions/universal-work-queue.action';\nimport { closeAppDialogRequest } from '../../../actions/app-dialog.action';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nexport var TicketFilter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TicketFilter, _Component);\n\n  function TicketFilter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TicketFilter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TicketFilter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$form = _this.form,\n          status = _this$form.status,\n          custSegment = _this$form.custSegment,\n          created = _this$form.created;\n      var obj = {\n        status: status.value,\n        custSegment: custSegment.value // created: created.value\n\n      };\n\n      _this.props.onApplyUWQFilter(obj);\n\n      _this.props.closeAppDialogRequest();\n    };\n\n    _this.onClickReset = function () {\n      _this.props.resetUWQFilterHandler();\n\n      _this.props.closeAppDialogRequest();\n    };\n\n    return _this;\n  }\n\n  _createClass(TicketFilter, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          filterObj = _this$props.filterObj,\n          status = _this$props.status,\n          custSegment = _this$props.custSegment;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        ref: function ref(form) {\n          return _this2.form = form;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        item: true,\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        className: classes.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(NativeSelect // value={status}\n      , {\n        defaultValue: status,\n        name: \"status\",\n        inputProps: {\n          'aria-label': 'age'\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Select\"), filterObj.status.map(function (item) {\n        return React.createElement(\"option\", {\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, item);\n      }))))), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        className: classes.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Customer Segment\"), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(NativeSelect // value={custSegment}\n      , {\n        defaultValue: custSegment,\n        name: \"custSegment\",\n        inputProps: {\n          'aria-label': 'age'\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Select\"), filterObj.customerSegment.map(function (item) {\n        return React.createElement(\"option\", {\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, item);\n      })))))), React.createElement(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.resetButton,\n        variant: \"contained\",\n        type: \"reset\",\n        onClick: this.onClickReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Clear\")), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.submitButton,\n        variant: \"contained\",\n        size: \"medium\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Apply\"))));\n    }\n  }]);\n\n  return TicketFilter;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    filterObj: state.uwq.filterObj,\n    status: state.uwq.filterForm.status,\n    custSegment: state.uwq.filterForm.custSegment\n  };\n};\n\nvar mapDispatchToProps = {\n  onApplyUWQFilter: onApplyUWQFilter,\n  resetUWQFilterHandler: resetUWQFilterHandler,\n  closeAppDialogRequest: closeAppDialogRequest\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TicketFilter));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/uwq/ticket-filter/ticket-filter.smart.js"],"names":["React","Component","withStyles","styles","connect","Grid","FormControl","NativeSelect","onApplyUWQFilter","resetUWQFilterHandler","closeAppDialogRequest","Button","TextField","TicketFilter","handleSubmit","e","preventDefault","form","status","custSegment","created","obj","value","props","onClickReset","classes","filterObj","row","formControl","map","item","customerSegment","resetButton","submitButton","mapStateToProps","state","uwq","filterForm","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './ticket-filter.style';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport { onApplyUWQFilter, resetUWQFilterHandler } from '../../../actions/universal-work-queue.action';\nimport { closeAppDialogRequest } from '../../../actions/app-dialog.action';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nexport class TicketFilter extends Component {\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { status, custSegment, created } = this.form;\n        const obj = {\n            status: status.value,\n            custSegment: custSegment.value,\n            // created: created.value\n        }\n        this.props.onApplyUWQFilter(obj);\n        this.props.closeAppDialogRequest();\n    }\n\n    onClickReset = () => {\n        this.props.resetUWQFilterHandler();\n        this.props.closeAppDialogRequest();\n    }\n\n    render() {\n        const { classes, filterObj, status, custSegment } = this.props;\n        return (\n            <form\n                onSubmit={this.handleSubmit}\n                ref={form => this.form = form}>\n                <Grid container item className={classes.form}>\n                    <Grid container item xs={12} className={classes.row}>\n                        <Grid item xs={6}>\n                            Status\n                        </Grid>\n                        <Grid item xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <NativeSelect\n                                    // value={status}\n                                    defaultValue={status}\n                                    name=\"status\"\n                                    inputProps={{ 'aria-label': 'age' }}\n                                    fullWidth\n                                >\n                                    <option value=\"\">Select</option>\n                                    {filterObj.status.map((item) => {\n                                        return (<option key={item}>{item}</option>)\n                                    })}\n                                </NativeSelect>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={12} className={classes.row}>\n                        <Grid item xs={6}>\n                            Customer Segment\n                        </Grid>\n                        <Grid item xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <NativeSelect\n                                    // value={custSegment}\n                                    defaultValue={custSegment}\n                                    name=\"custSegment\"\n                                    inputProps={{ 'aria-label': 'age' }}\n                                    fullWidth\n                                >\n                                    <option value=\"\">Select</option>\n                                    {filterObj.customerSegment.map((item) => {\n                                        return (<option key={item}>{item}</option>)\n                                    })}\n                                </NativeSelect>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    {/* <Grid container item xs={12} className={classes.row}>\n                        <Grid item xs={6}>\n                            Created\n                        </Grid>\n                        <Grid item xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    // id=\"date\"\n                                    // label=\"Birthday\"\n                                    name=\"created\"\n                                    type=\"date\"\n                                    defaultValue=\"2017-05-24\"\n                                    className={classes.textField}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </FormControl>\n                        </Grid>\n                    </Grid> */}\n                </Grid>\n                <Grid container item xs={12}>\n                    <Grid item xs={6}>\n                        <Button className={classes.resetButton} variant=\"contained\" type=\"reset\" onClick={this.onClickReset}>Clear</Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button className={classes.submitButton} variant=\"contained\" size=\"medium\" color=\"primary\" type=\"submit\">Apply</Button>\n                    </Grid>\n                </Grid>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        filterObj: state.uwq.filterObj,\n        status: state.uwq.filterForm.status,\n        custSegment: state.uwq.filterForm.custSegment\n    };\n};\n\nconst mapDispatchToProps = {\n    onApplyUWQFilter,\n    resetUWQFilterHandler,\n    closeAppDialogRequest\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(TicketFilter));\n"]},"metadata":{},"sourceType":"module"}