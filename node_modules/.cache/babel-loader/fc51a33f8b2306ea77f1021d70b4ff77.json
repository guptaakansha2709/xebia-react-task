{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var LocalStorageService =\n/*#__PURE__*/\nfunction () {\n  function LocalStorageService() {\n    _classCallCheck(this, LocalStorageService);\n  }\n\n  _createClass(LocalStorageService, null, [{\n    key: \"setRegistationInfo\",\n    value: function setRegistationInfo(myObj) {\n      debugger;\n      var a; //is anything in localstorage?\n\n      if (JSON.parse(_getItem('registationInfo')) === null) {\n        a = [];\n      } else {\n        // Parse the serialized data back into an array of objects\n        a = JSON.parse(localStorage.getItem('registationInfo'));\n      } // Push the new data (whether it be an object or anything else) onto the array\n\n\n      a.push(myObj); // Re-serialize the array back into a string and store it in localStorage\n\n      _setItem('registationInfo', JSON.stringify(a));\n    }\n  }, {\n    key: \"getRegistrationInfo\",\n    value: function getRegistrationInfo() {\n      var registationInfo = JSON.parse(localStorage._getItem(\"registationInfo\") || \"[]\");\n\n      if (registationInfo != null && registationInfo !== undefined && registationInfo) {\n        return registationInfo;\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return LocalStorageService;\n}();\n\nvar _setItem = function _setItem(key, value) {\n  debugger;\n  localStorage.setItem(key, value);\n};\n\nvar _getItem = function _getItem(key) {\n  return localStorage.getItem(key);\n};\n\nfunction _removeItem(key) {\n  localStorage.removeItem(key);\n}\n\nvar _getPromiseItem = function _getPromiseItem(key, value) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var _value = _getItem(key);\n\n      resolve(_value);\n    } catch (e) {\n      reject(null);\n    }\n  });\n};\n\nvar _setPromiseItem = function _setPromiseItem(key, value) {\n  return new Promise(function (resolve, reject) {\n    try {\n      _setItem(key, value);\n\n      resolve(true);\n    } catch (e) {\n      reject(false);\n    }\n  });\n};\n\nexport default LocalStorageService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/localstorage.service.js"],"names":["LocalStorageService","myObj","a","JSON","parse","_getItem","localStorage","getItem","push","_setItem","stringify","registationInfo","undefined","key","value","setItem","_removeItem","removeItem","_getPromiseItem","Promise","resolve","reject","e","_setPromiseItem"],"mappings":";;AAEA,WAAaA,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uCAE8BC,KAF9B,EAEqC;AAC7B;AACA,UAAIC,CAAJ,CAF6B,CAG7B;;AACA,UAAIC,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAAC,iBAAD,CAAnB,MAA4C,IAAhD,EAAsD;AAClDH,QAAAA,CAAC,GAAG,EAAJ;AACH,OAFD,MAEO;AACH;AACAA,QAAAA,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWE,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAJ;AACH,OAT4B,CAU7B;;;AACAL,MAAAA,CAAC,CAACM,IAAF,CAAOP,KAAP,EAX6B,CAY7B;;AACAQ,MAAAA,QAAQ,CAAC,iBAAD,EAAoBN,IAAI,CAACO,SAAL,CAAeR,CAAf,CAApB,CAAR;AAIH;AAnBL;AAAA;AAAA,0CAoBiC;AAEzB,UAAMS,eAAe,GAAGR,IAAI,CAACC,KAAL,CAAWE,YAAY,CAACD,QAAb,CAAsB,iBAAtB,KAA4C,IAAvD,CAAxB;;AACA,UAAIM,eAAe,IAAI,IAAnB,IAA2BA,eAAe,KAAKC,SAA/C,IAA4DD,eAAhE,EAAiF;AAC7E,eAAOA,eAAP;AACH,OAFD,MAEO;AACH,eAAO,IAAP;AACH;AACJ;AA5BL;;AAAA;AAAA;;AA+BA,IAAMF,QAAQ,GAAG,SAAXA,QAAW,CAACI,GAAD,EAAMC,KAAN,EAAgB;AAC7B;AACAR,EAAAA,YAAY,CAACS,OAAb,CAAqBF,GAArB,EAA0BC,KAA1B;AACH,CAHD;;AAKA,IAAMT,QAAQ,GAAG,SAAXA,QAAW,CAACQ,GAAD,EAAS;AACtB,SAAOP,YAAY,CAACC,OAAb,CAAqBM,GAArB,CAAP;AACH,CAFD;;AAIA,SAASG,WAAT,CAAqBH,GAArB,EAA0B;AACtBP,EAAAA,YAAY,CAACW,UAAb,CAAwBJ,GAAxB;AACH;;AACD,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACL,GAAD,EAAMC,KAAN,EAAgB;AACpC,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEpC,QAAI;AAEA,UAAMP,MAAK,GAAGT,QAAQ,CAACQ,GAAD,CAAtB;;AACAO,MAAAA,OAAO,CAACN,MAAD,CAAP;AACH,KAJD,CAIE,OAAOQ,CAAP,EAAU;AACRD,MAAAA,MAAM,CAAC,IAAD,CAAN;AACH;AACJ,GATM,CAAP;AAWH,CAZD;;AAaA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACV,GAAD,EAAMC,KAAN,EAAgB;AACpC,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAI;AACAZ,MAAAA,QAAQ,CAACI,GAAD,EAAMC,KAAN,CAAR;;AACAM,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAHD,CAGE,OAAOE,CAAP,EAAU;AACRD,MAAAA,MAAM,CAAC,KAAD,CAAN;AACH;AACJ,GAPM,CAAP;AAQH,CATD;;AAaA,eAAerB,mBAAf","sourcesContent":["\n\nexport class LocalStorageService {\n\n    static setRegistationInfo(myObj) {\n        debugger;\n        var a\n        //is anything in localstorage?\n        if (JSON.parse(_getItem('registationInfo')) === null) {\n            a = [];\n        } else {\n            // Parse the serialized data back into an array of objects\n            a = JSON.parse(localStorage.getItem('registationInfo'));\n        }\n        // Push the new data (whether it be an object or anything else) onto the array\n        a.push(myObj)\n        // Re-serialize the array back into a string and store it in localStorage\n        _setItem('registationInfo', JSON.stringify(a));\n\n\n\n    }\n    static getRegistrationInfo() {\n\n        const registationInfo = JSON.parse(localStorage._getItem(\"registationInfo\") || \"[]\");\n        if (registationInfo != null && registationInfo !== undefined && registationInfo) {\n            return registationInfo;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst _setItem = (key, value) => {\n    debugger;\n    localStorage.setItem(key, value);\n}\n\nconst _getItem = (key) => {\n    return localStorage.getItem(key);\n}\n\nfunction _removeItem(key) {\n    localStorage.removeItem(key);\n}\nconst _getPromiseItem = (key, value) => {\n    return new Promise((resolve, reject) => {\n\n        try {\n\n            const value = _getItem(key);\n            resolve(value);\n        } catch (e) {\n            reject(null);\n        }\n    });\n\n};\nconst _setPromiseItem = (key, value) => {\n    return new Promise((resolve, reject) => {\n        try {\n            _setItem(key, value);\n            resolve(true);\n        } catch (e) {\n            reject(false);\n        }\n    });\n};\n\n\n\nexport default LocalStorageService;"]},"metadata":{},"sourceType":"module"}