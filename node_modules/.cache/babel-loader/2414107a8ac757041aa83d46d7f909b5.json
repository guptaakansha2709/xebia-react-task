{"ast":null,"code":"import _toConsumableArray from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/login/login-form.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './login.style.css';\nimport Select from '@material-ui/core/Select';\nimport { fetchLoginData } from '../../actions/login.action';\nimport { withRouter } from 'react-router';\nimport { LocalStorageService } from '../../services/localstorage.service';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { openSnackbarRequest as _openSnackbarRequest } from '../../actions/snackbar.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './login.style';\nimport newId from '../../services/util.service';\nimport { Grid, Typography, ExpansionPanelDetails, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.fetchUserDataList = function () {\n      var userdata = JSON.parse(localStorage.getItem('registationInfo'));\n\n      if (userdata && userdata.length > 0) {\n        _this.setState({\n          userDataList: userdata\n        });\n      }\n    };\n\n    _this.handleChangeDepartmentType = function (event) {\n      _this.setState({\n        selectedDepartment: event.target.value\n      });\n    };\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.resetData = function () {\n      _this.setState({\n        fname: '',\n        lname: '',\n        emailid: '',\n        gender: '',\n        department: ''\n      });\n    };\n\n    _this.onSubmitHandler = function (event) {\n      event.preventDefault();\n      debugger;\n      var myObj = {\n        id: _this.id,\n        fname: _this.state.fname,\n        lname: _this.state.lname,\n        emailid: _this.state.emailid,\n        gender: _this.state.gender,\n        department: _this.state.selectedDepartment\n      };\n      console.log(\"myObj\", myObj);\n      LocalStorageService.setRegistationInfo(myObj);\n\n      _this.resetData();\n\n      _this.fetchUserDataList();\n    };\n\n    _this.state = {\n      fname: '',\n      lname: '',\n      emailid: '',\n      gender: '',\n      selectedDepartment: '',\n      id: '',\n      userDataList: []\n    };\n    _this.onSubmitHandler = _this.onSubmitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sortBy = _this.sortBy.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.id = newId();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchUserDataList();\n    }\n  }, {\n    key: \"compareBy\",\n    value: function compareBy(key) {\n      return function (a, b) {\n        if (a[key] < b[key]) return -1;\n        if (a[key] > b[key]) return 1;\n        return 0;\n      };\n    }\n  }, {\n    key: \"sortBy\",\n    value: function sortBy(event, key) {\n      event.preventDefault();\n      debugger;\n\n      if (this.state.userDataList && this.state.userDataList.length > 0) {\n        var arrayCopy = _toConsumableArray(this.state.userDataList);\n\n        arrayCopy.sort(this.compareBy(key));\n      } // this.setState({ userDataList: arrayCopy });\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var isEnabled = this.state.fname;\n      var departmentList = ['Engineering', 'Marketing', 'Finance', 'HR'];\n      var userList = this.state.userDataList || [];\n      console.log(\"userList\", userList);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"fname\",\n        placeholder: \"Enter first name\",\n        margin: \"normal\",\n        type: \"text\",\n        value: this.state.fname,\n        onChange: this.handleChange('fname'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"lname\",\n        placeholder: \"Enter Last Name\",\n        margin: \"normal\",\n        type: \"text\",\n        value: this.state.lname,\n        onChange: this.handleChange('lname'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"emailid\",\n        placeholder: \"Enter EmailId\",\n        margin: \"normal\",\n        type: \"email\",\n        value: this.state.emailid,\n        onChange: this.handleChange('emailid'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"gender\",\n        placeholder: \"Enter gender\",\n        margin: \"normal\",\n        type: \"text\",\n        value: this.state.gender,\n        onChange: this.handleChange('gender'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"channel-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Department\"), React.createElement(Select, {\n        value: this.state.selectedDepartment,\n        onChange: this.handleChangeDepartmentType,\n        input: React.createElement(Input, {\n          name: \"selectedDepartment\",\n          id: \"channel-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Department Type\"), departmentList.map(function (type) {\n        return React.createElement(MenuItem, {\n          key: type,\n          value: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, type);\n      }))), React.createElement(FormControl, {\n        className: \"pull-right loginButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        value: \"Submit\",\n        disabled: !isEnabled,\n        variant: \"contained\",\n        size: \"large\",\n        color: \"primary\",\n        onClick: this.onSubmitHandler(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Register\"))), React.createElement(Grid, {\n        container: true,\n        spacing: 32,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        className: \"th-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        width: \"33%\",\n        className: \"table-cell-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Index\"))), React.createElement(TableCell, {\n        onChange: function onChange(event) {\n          return _this2.sortBy(event, 'fname');\n        },\n        width: \"34%\",\n        className: \"table-cell-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"First Name\"))), React.createElement(TableCell, {\n        width: \"33%\",\n        className: \"table-cell-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Last name\"))), React.createElement(TableCell, {\n        width: \"33%\",\n        className: \"table-cell-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Email\"), \" \")), React.createElement(TableCell, {\n        width: \"33%\",\n        className: \"table-cell-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Gender\"), \" \")), React.createElement(TableCell, {\n        width: \"33%\",\n        className: \"table-cell-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Department\"), \" \")))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, userList && userList !== undefined && userList.length > 0 && userList.map(function (item, index) {\n        return React.createElement(TableRow, {\n          key: index,\n          className: classes.row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          width: \"34%\",\n          className: \"table-cell-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, index, \".\"), React.createElement(TableCell, {\n          width: \"34%\",\n          className: \"table-cell-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, item.fname || 'NA'), React.createElement(TableCell, {\n          width: \"34%\",\n          className: \"table-cell-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, item.lname || 'NA'), React.createElement(TableCell, {\n          width: \"34%\",\n          className: \"table-cell-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, item.emailid || 'NA'), React.createElement(TableCell, {\n          width: \"34%\",\n          className: \"table-cell-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, item.gender || 'NA'), React.createElement(TableCell, {\n          width: \"34%\",\n          className: \"table-cell-padding\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, item.department || 'NA'));\n      }))))))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    openSnackbarRequest: function openSnackbarRequest(data) {\n      return dispatch(_openSnackbarRequest(data));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginForm)));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/login/login-form.smart.js"],"names":["React","Component","connect","TextField","FormControl","Button","Input","InputLabel","MenuItem","Select","fetchLoginData","withRouter","LocalStorageService","HashRouter","Router","Route","Redirect","openSnackbarRequest","withStyles","styles","newId","Grid","Typography","ExpansionPanelDetails","Table","TableHead","TableBody","TableRow","TableCell","LoginForm","props","fetchUserDataList","userdata","JSON","parse","localStorage","getItem","length","setState","userDataList","handleChangeDepartmentType","event","selectedDepartment","target","value","handleChange","prop","resetData","fname","lname","emailid","gender","department","onSubmitHandler","preventDefault","myObj","id","state","console","log","setRegistationInfo","bind","sortBy","key","a","b","arrayCopy","sort","compareBy","classes","isEnabled","departmentList","userList","formControl","map","type","undefined","item","index","row","mapDispatchToProps","dispatch","data","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './login.style.css'; import Select from '@material-ui/core/Select';\nimport { fetchLoginData } from '../../actions/login.action';\nimport { withRouter } from 'react-router'\nimport { LocalStorageService } from '../../services/localstorage.service';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { openSnackbarRequest } from '../../actions/snackbar.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './login.style';\nimport newId from '../../services/util.service';\nimport {\n    Grid, Typography, ExpansionPanelDetails, Table, TableHead, TableBody, TableRow, TableCell\n} from '@material-ui/core';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { fname: '', lname: '', emailid: '', gender: '', selectedDepartment: '', id: '', userDataList: [] };\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.sortBy = this.sortBy.bind(this);\n\n    }\n    componentWillMount() {\n        this.id = newId();\n    }\n    componentDidMount() {\n        this.fetchUserDataList()\n\n    }\n    fetchUserDataList = () => {\n        let userdata = JSON.parse(localStorage.getItem('registationInfo'));\n        if (userdata && userdata.length > 0) {\n            this.setState({ userDataList: userdata });\n        }\n    };\n\n    handleChangeDepartmentType = event => {\n        this.setState({ selectedDepartment: event.target.value });\n    };\n\n    handleChange = prop => event => {\n        this.setState({ [prop]: event.target.value });\n    };\n\n    resetData = () => {\n        this.setState({\n            fname: '',\n            lname: '',\n            emailid: '',\n            gender: '',\n            department: '',\n        })\n    };\n\n\n    onSubmitHandler = (event) => {\n        event.preventDefault();\n        debugger;\n        const myObj = {\n            id: this.id,\n            fname: this.state.fname,\n            lname: this.state.lname,\n            emailid: this.state.emailid,\n            gender: this.state.gender,\n            department: this.state.selectedDepartment\n        }\n        console.log(\"myObj\", myObj);\n        LocalStorageService.setRegistationInfo(myObj);\n        this.resetData();\n        this.fetchUserDataList();\n    }\n    compareBy(key) {\n        return function (a, b) {\n            if (a[key] < b[key]) return -1;\n            if (a[key] > b[key]) return 1;\n            return 0;\n        };\n    }\n\n    sortBy(event, key) {\n        event.preventDefault();\n        debugger;\n        if (this.state.userDataList && this.state.userDataList.length > 0) {\n            let arrayCopy = [...this.state.userDataList];\n            arrayCopy.sort(this.compareBy(key));\n        }\n\n        // this.setState({ userDataList: arrayCopy });\n    }\n\n    render() {\n\n        const { classes } = this.props;\n        const isEnabled = this.state.fname;\n\n        const departmentList = ['Engineering', 'Marketing', 'Finance', 'HR'];\n        let userList = this.state.userDataList || [];\n        console.log(\"userList\", userList)\n\n        return (\n            <div>\n\n                <form onSubmit={this.onSubmitHandler}>\n                    <FormControl fullWidth>\n                        <TextField\n                            label=\"fname\"\n                            placeholder=\"Enter first name\"\n                            margin=\"normal\"\n                            type=\"text\"\n                            value={this.state.fname}\n                            onChange={this.handleChange('fname')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth>\n                        <TextField\n                            label=\"lname\"\n                            placeholder=\"Enter Last Name\"\n                            margin=\"normal\"\n                            type=\"text\"\n                            value={this.state.lname}\n                            onChange={this.handleChange('lname')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth>\n                        <TextField\n                            label=\"emailid\"\n                            placeholder=\"Enter EmailId\"\n                            margin=\"normal\"\n                            type=\"email\"\n                            value={this.state.emailid}\n                            onChange={this.handleChange('emailid')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth>\n                        <TextField\n                            label=\"gender\"\n                            placeholder=\"Enter gender\"\n                            margin=\"normal\"\n                            type=\"text\"\n                            value={this.state.gender}\n                            onChange={this.handleChange('gender')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel htmlFor=\"channel-simple\">Department</InputLabel>\n                        <Select\n                            value={this.state.selectedDepartment}\n                            onChange={this.handleChangeDepartmentType}\n                            input={<Input name=\"selectedDepartment\" id=\"channel-simple\" />}\n                        >\n\n                            <MenuItem value=\"\">Department Type</MenuItem>\n                            {\n                                departmentList.map(type => {\n                                    return (\n                                        <MenuItem key={type} value={type}>{type}</MenuItem>\n                                    )\n                                })\n                            }\n                        </Select>\n                    </FormControl>\n\n\n                    <FormControl className=\"pull-right loginButton\">\n                        <Button type=\"submit\" value=\"Submit\" disabled={!isEnabled} variant=\"contained\" size=\"large\" color=\"primary\" onClick={this.onSubmitHandler()}>Register</Button>\n                    </FormControl>\n                </form>\n\n                <Grid container spacing={32}>\n                    <Grid item xs={12}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow className=\"th-height\">\n                                            <TableCell width=\"33%\" className=\"table-cell-padding\"><Typography component=\"h4\"><strong>Index</strong></Typography></TableCell>\n                                            <TableCell\n                                                onChange={event => this.sortBy(event, 'fname')}\n                                                width=\"34%\" className=\"table-cell-padding\"><Typography component=\"h4\"><strong>First Name</strong></Typography></TableCell>\n                                            <TableCell width=\"33%\" className=\"table-cell-padding\"><Typography component=\"h4\"><strong>Last name</strong></Typography></TableCell>\n                                            <TableCell width=\"33%\" className=\"table-cell-padding\"><Typography component=\"h4\"><strong>Email</strong> </Typography></TableCell>\n                                            <TableCell width=\"33%\" className=\"table-cell-padding\"><Typography component=\"h4\"><strong>Gender</strong> </Typography></TableCell>\n                                            <TableCell width=\"33%\" className=\"table-cell-padding\"><Typography component=\"h4\"><strong>Department</strong> </Typography></TableCell>\n                                        </TableRow>\n                                    </TableHead>\n\n                                    <TableBody>\n                                        {userList && userList !== undefined && userList.length > 0 && userList.map((item, index) => {\n                                            return (\n                                                <TableRow key={index} className={classes.row}>\n                                                    <TableCell width=\"34%\" className=\"table-cell-padding\">{index}.</TableCell>\n                                                    <TableCell width=\"34%\" className=\"table-cell-padding\">{item.fname || 'NA'}</TableCell>\n                                                    <TableCell width=\"34%\" className=\"table-cell-padding\">{item.lname || 'NA'}</TableCell>\n                                                    <TableCell width=\"34%\" className=\"table-cell-padding\">{item.emailid || 'NA'}</TableCell>\n                                                    <TableCell width=\"34%\" className=\"table-cell-padding\">{item.gender || 'NA'}</TableCell>\n                                                    <TableCell width=\"34%\" className=\"table-cell-padding\">{item.department || 'NA'}</TableCell>\n                                                </TableRow>\n                                            )\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n\n    openSnackbarRequest: data => dispatch(openSnackbarRequest(data)),\n});\nconst mapStateToProps = state => {\n    return {\n\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginForm)));"]},"metadata":{},"sourceType":"module"}