{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nimport DisabledTaggingStatus from '../constants/disabled-tagging.enum';\nimport { DFFConstant } from '../constants/dff.constant';\n\nvar DFFService =\n/*#__PURE__*/\nfunction () {\n  function DFFService() {\n    _classCallCheck(this, DFFService);\n  }\n\n  _createClass(DFFService, null, [{\n    key: \"fetchDFFRequest\",\n    value: function fetchDFFRequest(reqData) {\n      var authDetails = CookieManagerService.getAuthDetails();\n      var type = reqData.type ? encodeURIComponent(reqData.type) : \"\";\n      var subType = reqData.subType ? encodeURIComponent(reqData.subType) : \"\";\n      var agentId = authDetails.agentId || \"\";\n      var transactionId = reqData.transactionId || \"\";\n      var channel = authDetails.channel || \"\";\n      var url = Config.contextPath + \"user/rest/v1.0/dff/type?type=\" + type + \"&subType=\" + subType + \"&agentId=\" + agentId + \"&transactionId=\" + transactionId + \"&channel=\" + channel;\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"fetchClaimDFFRequest\",\n    value: function fetchClaimDFFRequest(reqData) {\n      var authDetails = CookieManagerService.getAuthDetails();\n      var subType = reqData.subType ? encodeURIComponent(reqData.subType) : \"\";\n      var agentId = authDetails.agentId || \"\";\n      var transactionId = reqData.transactionId || \"\";\n      var url = Config.contextPath + \"user/rest/v1.0/dff/form?formType=\" + subType + \"&agentId=\" + agentId + \"&transactionId=\" + transactionId;\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"getDFFNameValuePairs\",\n    value: function getDFFNameValuePairs(dffInfo) {\n      var dffNameValuePairs = {};\n\n      for (var i = 0; i < dffInfo.length; i++) {\n        var tempObj = {\n          dataType: dffInfo[i].dataType,\n          name: dffInfo[i].name,\n          order: dffInfo[i].ordering,\n          value: dffInfo[i].defaultValue\n        };\n        dffNameValuePairs[dffInfo[i].name] = tempObj;\n      }\n\n      return dffNameValuePairs;\n    }\n  }, {\n    key: \"getClaimDFFNameValuePairs\",\n    value: function getClaimDFFNameValuePairs(dffInfo) {\n      var dffNameValuePairs = {};\n\n      for (var i = 0; i < dffInfo.length; i++) {\n        dffNameValuePairs[dffInfo[i].name] = \"\";\n\n        if (dffInfo[i].name === DFFConstant.INCIDENT_DISPOSITION) {\n          dffNameValuePairs[dffInfo[i].name] = \"Liquid damage\";\n        }\n      }\n\n      return dffNameValuePairs;\n    }\n  }, {\n    key: \"manageClaimDFFinfo\",\n    value: function manageClaimDFFinfo(dffInfo) {\n      for (var i = 0; i < dffInfo.length; i++) {\n        if (dffInfo[i].possibleValues && dffInfo[i].possibleValues instanceof Object) {\n          dffInfo[i][\"values\"] = Object.keys(dffInfo[i].possibleValues);\n        }\n      }\n\n      return dffInfo;\n    }\n  }, {\n    key: \"manageDFFValues\",\n    value: function manageDFFValues(dffNameValuePairs) {\n      for (var key in dffNameValuePairs) {\n        if (dffNameValuePairs[key][\"dataType\"] && (dffNameValuePairs[key][\"dataType\"].toLowerCase() === \"date\" || dffNameValuePairs[key][\"dataType\"].toLowerCase() === \"datetime\") && dffNameValuePairs[key][\"value\"]) {\n          var d = new Date(dffNameValuePairs[key][\"value\"]);\n          dffNameValuePairs[key][\"value\"] = d.getTime();\n        }\n      }\n\n      return dffNameValuePairs;\n    }\n  }, {\n    key: \"getDFFSource\",\n    value: function getDFFSource(type, multipleDynamicTaggingKey) {\n      switch (type) {\n        case CardLinkConstant.OUTSTANDING_CARD:\n          return DisabledTaggingStatus.SUB_HEADER_OUTSTANDING_SR_TAGGING;\n\n        case CardLinkConstant.MULTIPLE_DYNAMIC_TAGGING:\n          return DisabledTaggingStatus.MULTIPLE_DYNAMIC_TAGGING;\n\n        default:\n          break;\n      }\n    }\n  }]);\n\n  return DFFService;\n}();\n\nexport default DFFService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/fetch-dff.service.js"],"names":["CustomHttpService","Config","EncodeDecodeType","CookieManagerService","CardLinkConstant","DisabledTaggingStatus","DFFConstant","DFFService","reqData","authDetails","getAuthDetails","type","encodeURIComponent","subType","agentId","transactionId","channel","url","contextPath","get","DEFAULT","dffInfo","dffNameValuePairs","i","length","tempObj","dataType","name","order","ordering","value","defaultValue","INCIDENT_DISPOSITION","possibleValues","Object","keys","key","toLowerCase","d","Date","getTime","multipleDynamicTaggingKey","OUTSTANDING_CARD","SUB_HEADER_OUTSTANDING_SR_TAGGING","MULTIPLE_DYNAMIC_TAGGING"],"mappings":"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","sourcesContent":["import CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { CardLinkConstant } from '../constants/card-link.constant';\nimport DisabledTaggingStatus from '../constants/disabled-tagging.enum';\nimport { DFFConstant } from '../constants/dff.constant';\n\nclass DFFService {\n\n    static fetchDFFRequest(reqData) {\n        let authDetails = CookieManagerService.getAuthDetails();\n        const type = reqData.type ? encodeURIComponent(reqData.type) : \"\";\n        const subType = reqData.subType ? encodeURIComponent(reqData.subType) : \"\";\n        const agentId = authDetails.agentId || \"\";\n        const transactionId = reqData.transactionId || \"\";\n        const channel = authDetails.channel || \"\";\n        const url = Config.contextPath + \"user/rest/v1.0/dff/type?type=\" + type + \"&subType=\" + subType + \"&agentId=\" + agentId + \"&transactionId=\" + transactionId + \"&channel=\" + channel;\n        return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static fetchClaimDFFRequest(reqData) {\n        let authDetails = CookieManagerService.getAuthDetails();\n        const subType = reqData.subType ? encodeURIComponent(reqData.subType) : \"\";\n        const agentId = authDetails.agentId || \"\";\n        const transactionId = reqData.transactionId || \"\";\n        const url = Config.contextPath + \"user/rest/v1.0/dff/form?formType=\" + subType + \"&agentId=\" + agentId + \"&transactionId=\" + transactionId;\n        return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static getDFFNameValuePairs(dffInfo) {\n        const dffNameValuePairs = {};\n        for (let i = 0; i < dffInfo.length; i++) {\n            const tempObj = {\n                dataType: dffInfo[i].dataType,\n                name: dffInfo[i].name,\n                order: dffInfo[i].ordering,\n                value: dffInfo[i].defaultValue\n            }\n            dffNameValuePairs[dffInfo[i].name] = tempObj;\n        }\n        return dffNameValuePairs;\n    }\n\n    static getClaimDFFNameValuePairs(dffInfo) {\n        const dffNameValuePairs = {};\n        for (let i = 0; i < dffInfo.length; i++) {\n            dffNameValuePairs[dffInfo[i].name] = \"\";\n            if (dffInfo[i].name === DFFConstant.INCIDENT_DISPOSITION) {\n                dffNameValuePairs[dffInfo[i].name] = \"Liquid damage\";\n            }\n        }\n        return dffNameValuePairs;\n    }\n\n    static manageClaimDFFinfo(dffInfo) {\n        for (let i = 0; i < dffInfo.length; i++) {\n            if (dffInfo[i].possibleValues && dffInfo[i].possibleValues instanceof Object) {\n                dffInfo[i][\"values\"] = Object.keys(dffInfo[i].possibleValues);\n            }\n        }\n        return dffInfo;\n    }\n\n    static manageDFFValues(dffNameValuePairs) {\n        for (let key in dffNameValuePairs) {\n            if (dffNameValuePairs[key][\"dataType\"] && (dffNameValuePairs[key][\"dataType\"].toLowerCase() === \"date\" || dffNameValuePairs[key][\"dataType\"].toLowerCase() === \"datetime\") && dffNameValuePairs[key][\"value\"]) {\n                const d = new Date(dffNameValuePairs[key][\"value\"]);\n                dffNameValuePairs[key][\"value\"] = d.getTime();\n            }\n        }\n        return dffNameValuePairs;\n    }\n\n    static getDFFSource(type, multipleDynamicTaggingKey) {\n        switch (type) {\n            case CardLinkConstant.OUTSTANDING_CARD:\n                return DisabledTaggingStatus.SUB_HEADER_OUTSTANDING_SR_TAGGING;\n            case CardLinkConstant.MULTIPLE_DYNAMIC_TAGGING:\n                return DisabledTaggingStatus.MULTIPLE_DYNAMIC_TAGGING;\n            default:\n                break;\n        }\n    }\n}\n\nexport default DFFService;\n"]},"metadata":{},"sourceType":"module"}