{"ast":null,"code":"import _defineProperty from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/sr-details/create-sr-notes/create-sr-notes.smart.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport styles from './create-sr-notes.style';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { Grid } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { updateCreateNoteFormValues, resetCreateNoteForm, createNewNote } from '../../../../actions/sr-details-tab.action';\n\nvar CreateSRNotes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateSRNotes, _Component);\n\n  function CreateSRNotes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateSRNotes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateSRNotes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (evt, key) {\n      var _this$props = _this.props,\n          createNoteForm = _this$props.createNoteForm,\n          noteDetailsCharacterLimit = _this$props.noteDetailsCharacterLimit,\n          noteDescriptionCharacterLimit = _this$props.noteDescriptionCharacterLimit;\n\n      var createNoteFormData = _objectSpread({}, createNoteForm, _defineProperty({}, key, evt && evt.target && evt.target.value ? evt.target.value : ''));\n\n      if (key === 'noteDetails' && createNoteFormData[key].length > noteDetailsCharacterLimit) {\n        createNoteFormData[key] = createNoteFormData[key].substring(0, noteDetailsCharacterLimit);\n      } else if (key === 'description' && createNoteFormData[key].length > noteDescriptionCharacterLimit) {\n        createNoteFormData[key] = createNoteFormData[key].substring(0, noteDescriptionCharacterLimit);\n      }\n\n      _this.props.updateCreateNoteFormValues(createNoteFormData);\n    };\n\n    _this.resetForm = function () {\n      _this.props.resetCreateNoteForm();\n    };\n\n    _this.createNote = function () {\n      _this.props.createNewNote();\n    };\n\n    _this.componentWillUnmount = function () {\n      _this.resetForm();\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateSRNotes, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          notesTypeList = _this$props2.notesTypeList,\n          createNoteForm = _this$props2.createNoteForm,\n          noteDetailsCharacterLimit = _this$props2.noteDetailsCharacterLimit,\n          noteDescriptionCharacterLimit = _this$props2.noteDescriptionCharacterLimit;\n      return React.createElement(\"form\", {\n        className: classes.root,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        className: \"bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Note Type* :\"), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: createNoteForm.noteType,\n        onChange: function onChange(evt) {\n          return _this2.handleChange(evt, 'noteType');\n        },\n        style: {\n          width: '40%'\n        },\n        displayEmpty: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Select\"), notesTypeList && notesTypeList.map(function (item) {\n        return React.createElement(MenuItem, {\n          key: item,\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, item);\n      }))))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        className: \"bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Note Description* :\"), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        value: createNoteForm.description,\n        onChange: function onChange(evt) {\n          return _this2.handleChange(evt, 'description');\n        },\n        helperText: \"\".concat(createNoteForm.description.length, \" / \").concat(noteDescriptionCharacterLimit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          height: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        className: \"bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Note Details  :\"), React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        fullWidth: true,\n        multiline: true,\n        maxLength: 4,\n        rowsMax: \"4\",\n        value: createNoteForm.noteDetails,\n        onChange: function onChange(evt) {\n          return _this2.handleChange(evt, 'noteDetails');\n        },\n        helperText: \"\".concat(createNoteForm.noteDetails.length, \" / \").concat(noteDetailsCharacterLimit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: 20,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"reset\",\n        variant: \"outlined\",\n        color: \"primary\",\n        className: classes.button + \" mr-10\",\n        onClick: this.resetForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: !createNoteForm.noteType || !createNoteForm.description,\n        className: classes.button,\n        onClick: this.createNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Create Note\"))));\n    }\n  }]);\n\n  return CreateSRNotes;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notesTypeList: state.SRDetailsTabApiInfo.notesTypeList,\n    createNoteForm: state.SRDetailsTabApiInfo.createNoteForm,\n    noteDetailsCharacterLimit: state.SRDetailsTabApiInfo.noteDetailsCharacterLimit,\n    noteDescriptionCharacterLimit: state.SRDetailsTabApiInfo.noteDescriptionCharacterLimit\n  };\n};\n\nvar mapDispatchToProps = {\n  updateCreateNoteFormValues: updateCreateNoteFormValues,\n  resetCreateNoteForm: resetCreateNoteForm,\n  createNewNote: createNewNote\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CreateSRNotes));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/sr-details/create-sr-notes/create-sr-notes.smart.js"],"names":["React","Component","withStyles","connect","styles","MenuItem","Select","Grid","Radio","RadioGroup","FormControlLabel","TextField","Button","updateCreateNoteFormValues","resetCreateNoteForm","createNewNote","CreateSRNotes","handleChange","evt","key","props","createNoteForm","noteDetailsCharacterLimit","noteDescriptionCharacterLimit","createNoteFormData","target","value","length","substring","resetForm","createNote","componentWillUnmount","classes","notesTypeList","root","formControl","noteType","width","map","item","description","height","noteDetails","marginTop","textAlign","button","mapStateToProps","state","SRDetailsTabApiInfo","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport styles from './create-sr-notes.style';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { Grid } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { updateCreateNoteFormValues, resetCreateNoteForm, createNewNote } from '../../../../actions/sr-details-tab.action';\n\nclass CreateSRNotes extends Component {\n\n    handleChange = (evt, key) => {\n        const { createNoteForm, noteDetailsCharacterLimit, noteDescriptionCharacterLimit } = this.props;\n        const createNoteFormData = {\n            ...createNoteForm,\n            [key]: evt && evt.target && evt.target.value ? evt.target.value : ''\n        }\n        if (key === 'noteDetails' && createNoteFormData[key].length > noteDetailsCharacterLimit) {\n            createNoteFormData[key] = createNoteFormData[key].substring(0, noteDetailsCharacterLimit);\n        } else if (key === 'description' && createNoteFormData[key].length > noteDescriptionCharacterLimit) {\n            createNoteFormData[key] = createNoteFormData[key].substring(0, noteDescriptionCharacterLimit);\n        }\n        this.props.updateCreateNoteFormValues(createNoteFormData);\n    }\n\n    resetForm = () => {\n        this.props.resetCreateNoteForm();\n    }\n\n    createNote = () => {\n        this.props.createNewNote();\n    }\n\n    componentWillUnmount = () => {\n        this.resetForm();\n    }\n\n\n    render() {\n        const { classes, notesTypeList, createNoteForm, noteDetailsCharacterLimit, noteDescriptionCharacterLimit } = this.props;\n        return (\n            <form className={classes.root} autoComplete=\"off\">\n                <Grid container>\n                    <Grid item xs={12}>\n                        <Grid container className={classes.formControl}>\n                            <Grid item xs={2} className=\"bold\">\n                                Note Type* :\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Select\n                                    value={createNoteForm.noteType}\n                                    onChange={(evt) => this.handleChange(evt, 'noteType')}\n                                    style={{ width: '40%' }}\n                                    displayEmpty\n                                >\n                                    <MenuItem value=\"\">Select</MenuItem>\n                                    {notesTypeList && notesTypeList.map((item) => <MenuItem key={item} value={item}>{item}</MenuItem>)}\n                                </Select>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    {/* <Grid item xs={12}>\n                        <Grid container className={classes.formControl}>\n                            <Grid item xs={2} className=\"bold\">\n                                Visibility :\n                            </Grid>\n                            <Grid item xs={10}>\n                                <RadioGroup row name=\"visibility\" value={createNoteForm.visibility} onChange={(evt) => this.handleChange(evt, 'visibility')}>\n                                    <FormControlLabel value=\"Public\" control={<Radio color=\"primary\" />} label=\"Public\" />\n                                    <FormControlLabel value=\"Private\" control={<Radio color=\"primary\" />} label=\"Private\" />\n                                    <FormControlLabel value=\"Publish\" control={<Radio color=\"primary\" />} label=\"Publish\" />\n                                </RadioGroup>\n                            </Grid>\n                        </Grid>\n                    </Grid> */}\n                    <Grid item xs={12}>\n                        <Grid container className={classes.formControl}>\n                            <Grid item xs={2} className=\"bold\">\n                                Note Description* :\n                            </Grid>\n                            <Grid item xs={10}>\n                                <TextField\n                                    fullWidth\n                                    value={createNoteForm.description}\n                                    onChange={(evt) => this.handleChange(evt, 'description')}\n                                    helperText={`${createNoteForm.description.length} / ${noteDescriptionCharacterLimit}`}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} style={{ height: 100 }}>\n                        <Grid container className={classes.formControl}>\n                            <Grid item xs={2} className=\"bold\">\n                                Note Details  :\n                            </Grid>\n                            <Grid item xs={10}>\n                                <TextField\n                                    fullWidth\n                                    multiline\n                                    maxLength={4}\n                                    rowsMax=\"4\"\n                                    value={createNoteForm.noteDetails}\n                                    onChange={(evt) => this.handleChange(evt, 'noteDetails')}\n                                    helperText={`${createNoteForm.noteDetails.length} / ${noteDetailsCharacterLimit}`}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} style={{ marginTop: 20, textAlign: 'center' }}>\n                        <Button type=\"reset\" variant=\"outlined\" color=\"primary\" className={classes.button + \" mr-10\"} onClick={this.resetForm}>\n                            Reset\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" disabled={!createNoteForm.noteType || !createNoteForm.description} className={classes.button} onClick={this.createNote}>\n                            Create Note\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        notesTypeList: state.SRDetailsTabApiInfo.notesTypeList,\n        createNoteForm: state.SRDetailsTabApiInfo.createNoteForm,\n        noteDetailsCharacterLimit: state.SRDetailsTabApiInfo.noteDetailsCharacterLimit,\n        noteDescriptionCharacterLimit: state.SRDetailsTabApiInfo.noteDescriptionCharacterLimit\n    };\n};\n\nconst mapDispatchToProps = {\n    updateCreateNoteFormValues,\n    resetCreateNoteForm,\n    createNewNote\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CreateSRNotes));"]},"metadata":{},"sourceType":"module"}