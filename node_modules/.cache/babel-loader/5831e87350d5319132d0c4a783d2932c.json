{"ast":null,"code":"import _objectSpread from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/shared/dialogs/auth-matrix-dialog/auth-matrix-dialog.smart.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport CustomButton from '../../custom-button/custom-button.dumb';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Grid from '@material-ui/core/Grid';\nimport ScenarioService from '../../../../services/scenario.service';\nimport { onAuthenticationComplete, onAuthenticationFailed } from '../../../../actions/update-customer-data.actions';\n\nvar AuthMatrixDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthMatrixDialog, _Component);\n\n  function AuthMatrixDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AuthMatrixDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AuthMatrixDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      billingAddress: '',\n      billPlanRental: '',\n      emailAddress: '',\n      alternateContact: '',\n      paymentMode: '',\n      paymentPlanName: '',\n      payment: ''\n    };\n\n    _this.getAuthFields = function () {\n      var fields = [{\n        title: 'Billing Address',\n        value: _this.state.billingAddress,\n        gridsize: 12\n      }, {\n        title: 'Last Payment Amount',\n        value: _this.state.payment,\n        gridsize: 6\n      }, {\n        title: 'Email Address',\n        value: _this.state.emailAddress,\n        gridsize: 6\n      }, {\n        title: 'ALTERNATE PHONE',\n        value: _this.state.alternateContact,\n        gridsize: 6\n      }, {\n        title: 'BILL PLAN RENTAL (APPROX)',\n        value: _this.state.billPlanRental,\n        gridsize: 6\n      }];\n      return fields;\n    };\n\n    _this.onAuthenticationFailed = function () {\n      _this.props.closeDialogRequest();\n\n      _this.props.onAuthenticationFailed();\n    };\n\n    _this.onAuthentication = function () {\n      _this.props.onAuthenticationComplete();\n\n      _this.props.closeDialogRequest();\n    };\n\n    return _this;\n  }\n\n  _createClass(AuthMatrixDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ScenarioService.getAuthMatrix().then(function (res) {\n        if (res && res.data && res.data.result && typeof res.data.result === \"object\" && Object.keys(res.data.result).length > 0) {\n          _this2.setState(_objectSpread({}, _this2.state, res.data.result));\n        }\n      }).catch(function (err) {// console.log(err)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var AuthFields = this.getAuthFields(); // console.log(this.props)\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, AuthFields.map(function (item, index) {\n        return React.createElement(Grid, {\n          key: index,\n          item: true,\n          xs: item.gridsize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"color-grey fs-12 text-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, item.title), React.createElement(\"p\", {\n          className: \"color-light-black mt-5 text-left fs-14 \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, item.value));\n      })), React.createElement(\"p\", {\n        className: \"color-grey fs-12 text-left pt-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Customer needs to answer at least two questions. Do not share the answers with the customer.\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(CustomButton, {\n        title: \"NOT AUTHENTICATE\",\n        onClick: this.onAuthenticationFailed,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(CustomButton, {\n        title: \"AUTHENTICATE\",\n        onClick: this.onAuthentication,\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AuthMatrixDialog;\n}(Component);\n\nvar mapDispatchToProps = {\n  onAuthenticationComplete: onAuthenticationComplete,\n  onAuthenticationFailed: onAuthenticationFailed\n};\nexport default connect(null, mapDispatchToProps)(withStyles()(AuthMatrixDialog));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/shared/dialogs/auth-matrix-dialog/auth-matrix-dialog.smart.js"],"names":["React","Component","withStyles","connect","CustomButton","DialogActions","Grid","ScenarioService","onAuthenticationComplete","onAuthenticationFailed","AuthMatrixDialog","state","billingAddress","billPlanRental","emailAddress","alternateContact","paymentMode","paymentPlanName","payment","getAuthFields","fields","title","value","gridsize","props","closeDialogRequest","onAuthentication","getAuthMatrix","then","res","data","result","Object","keys","length","setState","catch","err","AuthFields","map","item","index","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport CustomButton from '../../custom-button/custom-button.dumb';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Grid from '@material-ui/core/Grid';\nimport ScenarioService from '../../../../services/scenario.service';\nimport { onAuthenticationComplete, onAuthenticationFailed } from '../../../../actions/update-customer-data.actions'\n\nclass AuthMatrixDialog extends Component {\n\n    state = {\n        billingAddress: '',\n        billPlanRental: '',\n        emailAddress: '',\n        alternateContact: '',\n        paymentMode: '',\n        paymentPlanName: '',\n        payment: '',\n    }\n\n    componentDidMount() {\n        ScenarioService.getAuthMatrix().then(res => {\n            if (res && res.data && res.data.result && typeof (res.data.result) === \"object\" && Object.keys(res.data.result).length > 0) {\n                this.setState({ ...this.state, ...res.data.result })\n            }\n\n        }).catch(err => {\n            // console.log(err)\n        })\n    }\n    getAuthFields = () => {\n        let fields = [\n            {\n                title: 'Billing Address',\n                value: this.state.billingAddress,\n                gridsize: 12\n            },\n            {\n                title: 'Last Payment Amount',\n                value: this.state.payment,\n                gridsize: 6\n            },\n            {\n                title: 'Email Address',\n                value: this.state.emailAddress,\n                gridsize: 6\n            },\n            {\n                title: 'ALTERNATE PHONE',\n                value: this.state.alternateContact,\n                gridsize: 6\n            },\n            {\n                title: 'BILL PLAN RENTAL (APPROX)',\n                value: this.state.billPlanRental,\n                gridsize: 6\n            },\n        ]\n\n        return fields\n    }\n\n\n    onAuthenticationFailed = () => {\n        this.props.closeDialogRequest()\n        this.props.onAuthenticationFailed()\n    }\n\n    onAuthentication = () => {\n        this.props.onAuthenticationComplete()\n        this.props.closeDialogRequest()\n    }\n\n    render() {\n        const AuthFields = this.getAuthFields()\n        // console.log(this.props)\n        return (\n            <div>\n                <div>\n                    <Grid container spacing={24}>\n                        {AuthFields.map((item, index) => (\n                            <Grid key={index} item xs={item.gridsize}>\n                                <p className=\"color-grey fs-12 text-left\">{item.title}</p>\n                                <p className=\"color-light-black mt-5 text-left fs-14 \">{item.value}</p>\n                            </Grid>\n                        ))}\n                    </Grid>\n                    <p className=\"color-grey fs-12 text-left pt-30\">Customer needs to answer at least two questions. Do not share the answers with the customer.</p>\n                    {/* <p className=\"color-grey fs-12 text-left\"></p> */}\n                </div>\n                <DialogActions>\n                    <CustomButton title=\"NOT AUTHENTICATE\" onClick={this.onAuthenticationFailed} color=\"red\" />\n                    <CustomButton title=\"AUTHENTICATE\" onClick={this.onAuthentication} color=\"green\" />\n                </DialogActions>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = {\n    onAuthenticationComplete,\n    onAuthenticationFailed\n}\nexport default connect(null, mapDispatchToProps)(withStyles()(AuthMatrixDialog))"]},"metadata":{},"sourceType":"module"}