{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/scenario/scenario.smart.js\";\nimport React, { Component, Fragment } from 'react';\nimport { scenarioSRHandler as _scenarioSRHandler, scenarioFTRHandler as _scenarioFTRHandler, handleChoiceButtonClick as _handleChoiceButtonClick, handleScenarioBackButtonClick as _handleScenarioBackButtonClick, claimDFFHandler as _claimDFFHandler, updateCurrentScenarioId as _updateCurrentScenarioId, editScenarioNotes as _editScenarioNotes, handleFeatureLink as _handleFeatureLink, scenarioTaskUpdateHandler as _scenarioTaskUpdateHandler } from '../../actions/scenario.action';\nimport { connect } from 'react-redux';\nimport ScenarioDescription from './scenario-description/scenario-description.dumb';\nimport ScenarioChoice from './scenario-choice/scenario-choice';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport NavigateBefore from '@material-ui/icons/NavigateBefore';\nimport ArrowRight from '@material-ui/icons/ArrowRight';\nimport { openSnackbarRequest as _openSnackbarRequest } from '../../actions/snackbar.action';\nimport { showLoader as _showLoader, hideLoader as _hideLoader } from '../../actions/app.action';\nimport styles from './scenario.style';\nimport LeapCalendar from './leap-calendar/leap-calendar.smart';\nimport Leap from './leap/leap.smart';\n\nvar Scenario =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scenario, _Component);\n\n  function Scenario() {\n    var _this;\n\n    _classCallCheck(this, Scenario);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scenario).call(this));\n\n    _this.onNotesChange = function (event) {\n      _this.props.editScenarioNotes(event.target.value);\n    };\n\n    _this.onCrmCodeClick = _this.onCrmCodeClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.openScenarioFromDescLink = _this.openScenarioFromDescLink.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Scenario, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.fetchScenarioRequest();\n    }\n  }, {\n    key: \"onChoiceBtnClicked\",\n    value: function onChoiceBtnClicked(choiceData) {\n      this.props.handleChoiceButtonClick(choiceData);\n    }\n  }, {\n    key: \"goPreviousStep\",\n    value: function goPreviousStep() {\n      this.props.handleScenarioBackButtonClick();\n    }\n  }, {\n    key: \"onCrmCodeClick\",\n    value: function onCrmCodeClick() {\n      var _this$props = this.props,\n          crmCode = _this$props.crmCode,\n          updateSrTaskCaseName = _this$props.updateSrTaskCaseName;\n\n      if (crmCode) {\n        if (crmCode.indexOf(\"SR>\") !== -1) {\n          this.scenarioSRHandler();\n        } else if (crmCode.indexOf(\"FTR>\") !== -1) {\n          this.scenarioFTRHandler();\n        } else if (crmCode.toLowerCase().indexOf(\">claim>\") !== -1) {\n          this.claimDFFHandler();\n        }\n      } else if (updateSrTaskCaseName) {\n        this.scenarioTaskUpdateHandler();\n      }\n    }\n  }, {\n    key: \"scenarioFTRHandler\",\n    value: function scenarioFTRHandler() {\n      this.props.scenarioFTRHandler();\n    }\n  }, {\n    key: \"scenarioSRHandler\",\n    value: function scenarioSRHandler() {\n      this.props.scenarioSRHandler();\n    }\n  }, {\n    key: \"scenarioTaskUpdateHandler\",\n    value: function scenarioTaskUpdateHandler() {\n      this.props.scenarioTaskUpdateHandler();\n    }\n  }, {\n    key: \"claimDFFHandler\",\n    value: function claimDFFHandler() {\n      this.props.claimDFFHandler();\n    }\n  }, {\n    key: \"openScenarioFromDescLink\",\n    value: function openScenarioFromDescLink(scenarioId) {\n      this.props.updateCurrentScenarioId(scenarioId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          breadcrumbChoices = _this$props2.breadcrumbChoices,\n          scenarioDescription = _this$props2.scenarioDescription,\n          choiceList = _this$props2.choiceList,\n          scenarioNotes = _this$props2.scenarioNotes,\n          crmCode = _this$props2.crmCode,\n          updateSrTaskCaseName = _this$props2.updateSrTaskCaseName,\n          crmButtonText = _this$props2.crmButtonText,\n          stepLevelConfig = _this$props2.stepLevelConfig,\n          isLeapEnable = _this$props2.isLeapEnable;\n      var displayCalender = stepLevelConfig && stepLevelConfig.displayCalender ? stepLevelConfig.displayCalender : false;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-grey pt-20 pr-20 pb-20 pl-20\" + (isLeapEnable ? ' hidden' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.backBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(NavigateBefore, {\n        className: breadcrumbChoices.length <= 1 ? \"hidden\" : \"\",\n        onClick: this.goPreviousStep.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(ScenarioDescription, {\n        handleFeatureLink: this.props.handleFeatureLink,\n        openScenarioFromDescLink: this.openScenarioFromDescLink,\n        scenarioDescription: scenarioDescription,\n        class: classes.scenarioDesc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: displayCalender ? '' : ' hidden',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(LeapCalendar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(ScenarioChoice, {\n        choiceList: choiceList,\n        onChoiceClick: function onChoiceClick(choiceObj) {\n          return _this2.onChoiceBtnClicked(choiceObj);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: isLeapEnable ? '' : 'hidden',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Leap, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.onCrmCodeClick,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, crmButtonText, \" \", React.createElement(ArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(TextField, {\n        id: \"outlined-bare\",\n        className: classes.textField,\n        value: crmCode || updateSrTaskCaseName,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputProps: {\n          readOnly: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Notes \", React.createElement(ArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(TextField, {\n        id: \"outlined-bare\",\n        className: classes.textField,\n        value: scenarioNotes,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputProps: {\n          readOnly: false,\n          onChange: this.onNotesChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Scenario;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentScenarioInfo: state.scenario.currentScenarioInfo,\n    scenarioStatus: state.scenario.scenarioStatus,\n    breadcrumbChoices: state.scenario.breadcrumbChoices,\n    scenarioSystemCheckList: state.scenario.scenarioSystemCheckList,\n    scenarioDescription: state.scenario.scenarioDescription,\n    choiceList: state.scenario.choiceList,\n    crmCode: state.scenario.crmCode,\n    updateSrTaskCaseName: state.scenario.updateSrTaskCaseName,\n    crmButtonText: state.scenario.crmButtonText,\n    scenarioNotes: state.scenario.scenarioNotes,\n    smsTemplate: state.scenario.smsTemplate,\n    stepLevelConfig: state.scenario.stepLevelConfig,\n    isLeapEnable: state.scenario.isLeapEnable\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleChoiceButtonClick: function handleChoiceButtonClick(choiceData) {\n      return dispatch(_handleChoiceButtonClick(choiceData));\n    },\n    openSnackbarRequest: function openSnackbarRequest(data, msg) {\n      return dispatch(_openSnackbarRequest(data, msg));\n    },\n    handleScenarioBackButtonClick: function handleScenarioBackButtonClick() {\n      return dispatch(_handleScenarioBackButtonClick());\n    },\n    showLoader: function showLoader() {\n      return dispatch(_showLoader());\n    },\n    hideLoader: function hideLoader() {\n      return dispatch(_hideLoader());\n    },\n    scenarioSRHandler: function scenarioSRHandler() {\n      return dispatch(_scenarioSRHandler());\n    },\n    scenarioFTRHandler: function scenarioFTRHandler() {\n      return dispatch(_scenarioFTRHandler());\n    },\n    claimDFFHandler: function claimDFFHandler() {\n      return dispatch(_claimDFFHandler());\n    },\n    updateCurrentScenarioId: function updateCurrentScenarioId(scenarioId) {\n      return dispatch(_updateCurrentScenarioId(scenarioId));\n    },\n    editScenarioNotes: function editScenarioNotes(notes) {\n      return dispatch(_editScenarioNotes(notes));\n    },\n    handleFeatureLink: function handleFeatureLink(featureName) {\n      return dispatch(_handleFeatureLink(featureName));\n    },\n    scenarioTaskUpdateHandler: function scenarioTaskUpdateHandler() {\n      return dispatch(_scenarioTaskUpdateHandler());\n    }\n  };\n};\n\nScenario.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Scenario));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/scenario/scenario.smart.js"],"names":["React","Component","Fragment","scenarioSRHandler","scenarioFTRHandler","handleChoiceButtonClick","handleScenarioBackButtonClick","claimDFFHandler","updateCurrentScenarioId","editScenarioNotes","handleFeatureLink","scenarioTaskUpdateHandler","connect","ScenarioDescription","ScenarioChoice","PropTypes","withStyles","Button","TextField","NavigateBefore","ArrowRight","openSnackbarRequest","showLoader","hideLoader","styles","LeapCalendar","Leap","Scenario","onNotesChange","event","props","target","value","onCrmCodeClick","bind","openScenarioFromDescLink","choiceData","crmCode","updateSrTaskCaseName","indexOf","toLowerCase","scenarioId","classes","breadcrumbChoices","scenarioDescription","choiceList","scenarioNotes","crmButtonText","stepLevelConfig","isLeapEnable","displayCalender","backBtn","length","goPreviousStep","scenarioDesc","choiceObj","onChoiceBtnClicked","button","textField","readOnly","onChange","mapStateToProps","state","currentScenarioInfo","scenario","scenarioStatus","scenarioSystemCheckList","smsTemplate","mapDispatchToProps","dispatch","data","msg","notes","featureName","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,iBAAiB,IAAjBA,kBADF,EAEEC,kBAAkB,IAAlBA,mBAFF,EAGEC,uBAAuB,IAAvBA,wBAHF,EAIEC,6BAA6B,IAA7BA,8BAJF,EAKEC,eAAe,IAAfA,gBALF,EAMEC,uBAAuB,IAAvBA,wBANF,EAOEC,iBAAiB,IAAjBA,kBAPF,EAQEC,iBAAiB,IAAjBA,kBARF,EASEC,yBAAyB,IAAzBA,0BATF,QAUO,+BAVP;AAWA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,kDAAhC;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,SAASC,mBAAmB,IAAnBA,oBAAT,QAAoC,+BAApC;AACA,SAASC,UAAU,IAAVA,WAAT,EAAqBC,UAAU,IAAVA,WAArB,QAAuC,0BAAvC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;IAEMC,Q;;;;;AAEJ,sBAAc;AAAA;;AAAA;;AACZ;;AADY,UAuDdC,aAvDc,GAuDE,UAACC,KAAD,EAAW;AACzB,YAAKC,KAAL,CAAWrB,iBAAX,CAA6BoB,KAAK,CAACE,MAAN,CAAaC,KAA1C;AACD,KAzDa;;AAEZ,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AACA,UAAKC,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BD,IAA9B,uDAAhC;AAHY;AAIb;;;;wCAEmB,CAClB;AACD;;;uCAEkBE,U,EAAY;AAC7B,WAAKN,KAAL,CAAWzB,uBAAX,CAAmC+B,UAAnC;AACD;;;qCAEgB;AACf,WAAKN,KAAL,CAAWxB,6BAAX;AACD;;;qCAGgB;AAAA,wBAC2B,KAAKwB,KADhC;AAAA,UACPO,OADO,eACPA,OADO;AAAA,UACEC,oBADF,eACEA,oBADF;;AAGf,UAAID,OAAJ,EAAa;AACX,YAAIA,OAAO,CAACE,OAAR,CAAgB,KAAhB,MAA2B,CAAC,CAAhC,EAAmC;AACjC,eAAKpC,iBAAL;AACD,SAFD,MAEO,IAAIkC,OAAO,CAACE,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAAjC,EAAoC;AACzC,eAAKnC,kBAAL;AACD,SAFM,MAEA,IAAIiC,OAAO,CAACG,WAAR,GAAsBD,OAAtB,CAA8B,SAA9B,MAA6C,CAAC,CAAlD,EAAqD;AAC1D,eAAKhC,eAAL;AACD;AACF,OARD,MAQO,IAAG+B,oBAAH,EAAyB;AAC9B,aAAK3B,yBAAL;AACD;AACF;;;yCAEoB;AACnB,WAAKmB,KAAL,CAAW1B,kBAAX;AACD;;;wCAEmB;AAClB,WAAK0B,KAAL,CAAW3B,iBAAX;AACD;;;gDAE2B;AAC1B,WAAK2B,KAAL,CAAWnB,yBAAX;AACD;;;sCAEiB;AAChB,WAAKmB,KAAL,CAAWvB,eAAX;AACD;;;6CAEwBkC,U,EAAY;AACnC,WAAKX,KAAL,CAAWtB,uBAAX,CAAmCiC,UAAnC;AACD;;;6BAMQ;AAAA;;AAAA,yBAC6J,KAAKX,KADlK;AAAA,UACCY,OADD,gBACCA,OADD;AAAA,UACUC,iBADV,gBACUA,iBADV;AAAA,UAC6BC,mBAD7B,gBAC6BA,mBAD7B;AAAA,UACkDC,UADlD,gBACkDA,UADlD;AAAA,UAC8DC,aAD9D,gBAC8DA,aAD9D;AAAA,UAC6ET,OAD7E,gBAC6EA,OAD7E;AAAA,UACsFC,oBADtF,gBACsFA,oBADtF;AAAA,UAC4GS,aAD5G,gBAC4GA,aAD5G;AAAA,UAC2HC,eAD3H,gBAC2HA,eAD3H;AAAA,UAC4IC,YAD5I,gBAC4IA,YAD5I;AAEP,UAAMC,eAAe,GAAGF,eAAe,IAAIA,eAAe,CAACE,eAAnC,GAAqDF,eAAe,CAACE,eAArE,GAAuF,KAA/G;AACA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE,qCAAqCD,YAAY,GAAG,SAAH,GAAe,EAAhE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACS,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAER,iBAAiB,CAACS,MAAlB,IAA4B,CAA5B,GAAgC,QAAhC,GAA2C,EAAtE;AAA0E,QAAA,OAAO,EAAE,KAAKC,cAAL,CAAoBnB,IAApB,CAAyB,IAAzB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,mBAAD;AAAqB,QAAA,iBAAiB,EAAE,KAAKJ,KAAL,CAAWpB,iBAAnD;AAAsE,QAAA,wBAAwB,EAAE,KAAKyB,wBAArG;AAA+H,QAAA,mBAAmB,EAAES,mBAApJ;AAAyK,QAAA,KAAK,EAAEF,OAAO,CAACY,YAAxL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAK,QAAA,SAAS,EAAGJ,eAAe,GAAG,EAAH,GAAQ,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,EAQE,oBAAC,cAAD;AAAgB,QAAA,UAAU,EAAEL,UAA5B;AAAwC,QAAA,aAAa,EAAE,uBAAAU,SAAS;AAAA,iBAAI,MAAI,CAACC,kBAAL,CAAwBD,SAAxB,CAAJ;AAAA,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,EAYE;AAAK,QAAA,SAAS,EAAGN,YAAY,GAAG,EAAH,GAAQ,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAZF,EAiBE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE,KAAKhB,cAA1D;AAA0E,QAAA,SAAS,EAAES,OAAO,CAACe,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,aADH,OACkB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADlB,CADF,EAIE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,eADL;AAEE,QAAA,SAAS,EAAEL,OAAO,CAACgB,SAFrB;AAGE,QAAA,KAAK,EAAErB,OAAO,IAAIC,oBAHpB;AAIE,QAAA,MAAM,EAAC,QAJT;AAKE,QAAA,OAAO,EAAC,UALV;AAME,QAAA,UAAU,EAAE;AACVqB,UAAAA,QAAQ,EAAE;AADA,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,SAAS,EAAEjB,OAAO,CAACe,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,CADF,EAIE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,eADL;AAEE,QAAA,SAAS,EAAEf,OAAO,CAACgB,SAFrB;AAGE,QAAA,KAAK,EAAEZ,aAHT;AAIE,QAAA,MAAM,EAAC,QAJT;AAKE,QAAA,OAAO,EAAC,UALV;AAME,QAAA,UAAU,EAAE;AACVa,UAAAA,QAAQ,EAAE,KADA;AAEVC,UAAAA,QAAQ,EAAE,KAAKhC;AAFL,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAjBF,CAjBF,CADF;AAsDD;;;;EAtHoB3B,S;;AAyHvB,IAAM4D,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,mBAAmB,EAAED,KAAK,CAACE,QAAN,CAAeD,mBAD/B;AAELE,IAAAA,cAAc,EAAEH,KAAK,CAACE,QAAN,CAAeC,cAF1B;AAGLtB,IAAAA,iBAAiB,EAAEmB,KAAK,CAACE,QAAN,CAAerB,iBAH7B;AAILuB,IAAAA,uBAAuB,EAAEJ,KAAK,CAACE,QAAN,CAAeE,uBAJnC;AAKLtB,IAAAA,mBAAmB,EAAEkB,KAAK,CAACE,QAAN,CAAepB,mBAL/B;AAMLC,IAAAA,UAAU,EAAEiB,KAAK,CAACE,QAAN,CAAenB,UANtB;AAOLR,IAAAA,OAAO,EAAEyB,KAAK,CAACE,QAAN,CAAe3B,OAPnB;AAQLC,IAAAA,oBAAoB,EAAEwB,KAAK,CAACE,QAAN,CAAe1B,oBARhC;AASLS,IAAAA,aAAa,EAAEe,KAAK,CAACE,QAAN,CAAejB,aATzB;AAULD,IAAAA,aAAa,EAAEgB,KAAK,CAACE,QAAN,CAAelB,aAVzB;AAWLqB,IAAAA,WAAW,EAAEL,KAAK,CAACE,QAAN,CAAeG,WAXvB;AAYLnB,IAAAA,eAAe,EAAEc,KAAK,CAACE,QAAN,CAAehB,eAZ3B;AAaLC,IAAAA,YAAY,EAAEa,KAAK,CAACE,QAAN,CAAef;AAbxB,GAAP;AAeD,CAhBD;;AAkBA,IAAMmB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtChE,IAAAA,uBAAuB,EAAE,iCAAA+B,UAAU;AAAA,aAAIiC,QAAQ,CAAChE,wBAAuB,CAAC+B,UAAD,CAAxB,CAAZ;AAAA,KADG;AAEtCf,IAAAA,mBAAmB,EAAE,6BAACiD,IAAD,EAAOC,GAAP;AAAA,aAAeF,QAAQ,CAAChD,oBAAmB,CAACiD,IAAD,EAAOC,GAAP,CAApB,CAAvB;AAAA,KAFiB;AAGtCjE,IAAAA,6BAA6B,EAAE;AAAA,aAAM+D,QAAQ,CAAC/D,8BAA6B,EAA9B,CAAd;AAAA,KAHO;AAItCgB,IAAAA,UAAU,EAAE;AAAA,aAAM+C,QAAQ,CAAC/C,WAAU,EAAX,CAAd;AAAA,KAJ0B;AAKtCC,IAAAA,UAAU,EAAE;AAAA,aAAM8C,QAAQ,CAAC9C,WAAU,EAAX,CAAd;AAAA,KAL0B;AAMtCpB,IAAAA,iBAAiB,EAAE;AAAA,aAAMkE,QAAQ,CAAClE,kBAAiB,EAAlB,CAAd;AAAA,KANmB;AAOtCC,IAAAA,kBAAkB,EAAE;AAAA,aAAMiE,QAAQ,CAACjE,mBAAkB,EAAnB,CAAd;AAAA,KAPkB;AAQtCG,IAAAA,eAAe,EAAE;AAAA,aAAM8D,QAAQ,CAAC9D,gBAAe,EAAhB,CAAd;AAAA,KARqB;AAStCC,IAAAA,uBAAuB,EAAE,iCAACiC,UAAD;AAAA,aAAgB4B,QAAQ,CAAC7D,wBAAuB,CAACiC,UAAD,CAAxB,CAAxB;AAAA,KATa;AAUtChC,IAAAA,iBAAiB,EAAE,2BAAC+D,KAAD;AAAA,aAAWH,QAAQ,CAAC5D,kBAAiB,CAAC+D,KAAD,CAAlB,CAAnB;AAAA,KAVmB;AAWtC9D,IAAAA,iBAAiB,EAAE,2BAAC+D,WAAD;AAAA,aAAiBJ,QAAQ,CAAC3D,kBAAiB,CAAC+D,WAAD,CAAlB,CAAzB;AAAA,KAXmB;AAYtC9D,IAAAA,yBAAyB,EAAE;AAAA,aAAM0D,QAAQ,CAAC1D,0BAAyB,EAA1B,CAAd;AAAA;AAZW,GAAL;AAAA,CAAnC;;AAeAgB,QAAQ,CAAC+C,SAAT,GAAqB;AACnBhC,EAAAA,OAAO,EAAE3B,SAAS,CAAC4D,MAAV,CAAiBC;AADP,CAArB;AAIA,eAAehE,OAAO,CAACiD,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CpD,UAAU,CAACQ,MAAD,CAAV,CAAmBG,QAAnB,CAA7C,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {\n  scenarioSRHandler,\n  scenarioFTRHandler,\n  handleChoiceButtonClick,\n  handleScenarioBackButtonClick,\n  claimDFFHandler,\n  updateCurrentScenarioId,\n  editScenarioNotes,\n  handleFeatureLink,\n  scenarioTaskUpdateHandler\n} from '../../actions/scenario.action';\nimport { connect } from 'react-redux';\nimport ScenarioDescription from './scenario-description/scenario-description.dumb';\nimport ScenarioChoice from './scenario-choice/scenario-choice';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport NavigateBefore from '@material-ui/icons/NavigateBefore';\nimport ArrowRight from '@material-ui/icons/ArrowRight';\nimport { openSnackbarRequest } from '../../actions/snackbar.action';\nimport { showLoader, hideLoader } from '../../actions/app.action';\nimport styles from './scenario.style';\nimport LeapCalendar from './leap-calendar/leap-calendar.smart';\nimport Leap from './leap/leap.smart';\n\nclass Scenario extends Component {\n\n  constructor() {\n    super();\n    this.onCrmCodeClick = this.onCrmCodeClick.bind(this);\n    this.openScenarioFromDescLink = this.openScenarioFromDescLink.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fetchScenarioRequest();\n  }\n\n  onChoiceBtnClicked(choiceData) {\n    this.props.handleChoiceButtonClick(choiceData);\n  }\n\n  goPreviousStep() {\n    this.props.handleScenarioBackButtonClick();\n  }\n\n\n  onCrmCodeClick() {\n    const { crmCode, updateSrTaskCaseName } = this.props;\n\n    if (crmCode) {\n      if (crmCode.indexOf(\"SR>\") !== -1) {\n        this.scenarioSRHandler();\n      } else if (crmCode.indexOf(\"FTR>\") !== -1) {\n        this.scenarioFTRHandler();\n      } else if (crmCode.toLowerCase().indexOf(\">claim>\") !== -1) {\n        this.claimDFFHandler();\n      }\n    } else if(updateSrTaskCaseName) {\n      this.scenarioTaskUpdateHandler();\n    }\n  }\n\n  scenarioFTRHandler() {\n    this.props.scenarioFTRHandler();\n  }\n\n  scenarioSRHandler() {\n    this.props.scenarioSRHandler();\n  }\n\n  scenarioTaskUpdateHandler() {\n    this.props.scenarioTaskUpdateHandler();\n  }\n\n  claimDFFHandler() {\n    this.props.claimDFFHandler();\n  }\n\n  openScenarioFromDescLink(scenarioId) {\n    this.props.updateCurrentScenarioId(scenarioId);\n  }\n\n  onNotesChange = (event) => {\n    this.props.editScenarioNotes(event.target.value)\n  }\n\n  render() {\n    const { classes, breadcrumbChoices, scenarioDescription, choiceList, scenarioNotes, crmCode, updateSrTaskCaseName, crmButtonText, stepLevelConfig, isLeapEnable } = this.props;\n    const displayCalender = stepLevelConfig && stepLevelConfig.displayCalender ? stepLevelConfig.displayCalender : false;\n    return (\n      <Fragment>\n        <div className={\"bg-grey pt-20 pr-20 pb-20 pl-20\" + (isLeapEnable ? ' hidden' : '')}>\n          <div className={classes.backBtn}>\n            <NavigateBefore className={breadcrumbChoices.length <= 1 ? \"hidden\" : \"\"} onClick={this.goPreviousStep.bind(this)} />\n          </div>\n          <ScenarioDescription handleFeatureLink={this.props.handleFeatureLink} openScenarioFromDescLink={this.openScenarioFromDescLink} scenarioDescription={scenarioDescription} class={classes.scenarioDesc} />\n          <div className={(displayCalender ? '' : ' hidden')}>\n            <LeapCalendar></LeapCalendar>\n          </div>\n          <ScenarioChoice choiceList={choiceList} onChoiceClick={choiceObj => this.onChoiceBtnClicked(choiceObj)} />\n        </div>\n\n        <div className={(isLeapEnable ? '' : 'hidden')}>\n          <Leap></Leap>\n        </div>\n\n\n        <div className=\"mt-10\">\n          <div className=\"mb-10\">\n            <Button variant=\"contained\" color=\"primary\" onClick={this.onCrmCodeClick} className={classes.button}>\n              {crmButtonText} <ArrowRight />\n            </Button>\n            <TextField\n              id=\"outlined-bare\"\n              className={classes.textField}\n              value={crmCode || updateSrTaskCaseName}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputProps={{\n                readOnly: true,\n              }}\n            />\n          </div>\n\n          <div>\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n              Notes <ArrowRight />\n            </Button>\n            <TextField\n              id=\"outlined-bare\"\n              className={classes.textField}\n              value={scenarioNotes}\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputProps={{\n                readOnly: false,\n                onChange: this.onNotesChange\n              }}\n            />\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentScenarioInfo: state.scenario.currentScenarioInfo,\n    scenarioStatus: state.scenario.scenarioStatus,\n    breadcrumbChoices: state.scenario.breadcrumbChoices,\n    scenarioSystemCheckList: state.scenario.scenarioSystemCheckList,\n    scenarioDescription: state.scenario.scenarioDescription,\n    choiceList: state.scenario.choiceList,\n    crmCode: state.scenario.crmCode,\n    updateSrTaskCaseName: state.scenario.updateSrTaskCaseName,\n    crmButtonText: state.scenario.crmButtonText,\n    scenarioNotes: state.scenario.scenarioNotes,\n    smsTemplate: state.scenario.smsTemplate,\n    stepLevelConfig: state.scenario.stepLevelConfig,\n    isLeapEnable: state.scenario.isLeapEnable\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  handleChoiceButtonClick: choiceData => dispatch(handleChoiceButtonClick(choiceData)),\n  openSnackbarRequest: (data, msg) => dispatch(openSnackbarRequest(data, msg)),\n  handleScenarioBackButtonClick: () => dispatch(handleScenarioBackButtonClick()),\n  showLoader: () => dispatch(showLoader()),\n  hideLoader: () => dispatch(hideLoader()),\n  scenarioSRHandler: () => dispatch(scenarioSRHandler()),\n  scenarioFTRHandler: () => dispatch(scenarioFTRHandler()),\n  claimDFFHandler: () => dispatch(claimDFFHandler()),\n  updateCurrentScenarioId: (scenarioId) => dispatch(updateCurrentScenarioId(scenarioId)),\n  editScenarioNotes: (notes) => dispatch(editScenarioNotes(notes)),\n  handleFeatureLink: (featureName) => dispatch(handleFeatureLink(featureName)),\n  scenarioTaskUpdateHandler: () => dispatch(scenarioTaskUpdateHandler())\n});\n\nScenario.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Scenario));"]},"metadata":{},"sourceType":"module"}