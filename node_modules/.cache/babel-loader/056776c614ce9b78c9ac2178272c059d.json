{"ast":null,"code":"import _objectSpread from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/shared/dialogs/feedback-dialog/feedback-tab-panel.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../dialog-style';\nimport { submitFeedbackDialogData as _submitFeedbackDialogData, updateCheckedFields as _updateCheckedFields, updateFeedbackTypes as _updateFeedbackTypes, updateSelectedTab as _updateSelectedTab } from '../../../../actions/feedback-dialog.action';\nimport { closeFeedbackDialog as _closeFeedbackDialog } from '../../../../actions/dialog.action';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { RadioGroup, Radio, TextField, FormControlLabel } from '@material-ui/core';\n\nvar FeedbackTabPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FeedbackTabPanel, _Component);\n\n  function FeedbackTabPanel(props) {\n    var _this;\n\n    _classCallCheck(this, FeedbackTabPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeedbackTabPanel).call(this, props));\n\n    _this.handleChangeRadioButton = function (radioButton, feedbackTypeKey) {\n      return function (event) {\n        var feedbackTypes = _this.props.feedbackTypes;\n\n        for (var i = 0; i < feedbackTypes.length; i++) {\n          if (feedbackTypes[i].key === feedbackTypeKey) {\n            for (var j = 0; j < feedbackTypes[i].subProblems.length; j++) {\n              if (feedbackTypes[i].subProblems[j].key === radioButton) {\n                if (feedbackTypes[i].subProblems[j].status === event.target.value) {\n                  feedbackTypes[i].subProblems[j] = _objectSpread({}, feedbackTypes[i].subProblems[j], {\n                    status: null\n                  });\n                  event.target.checked = false;\n                } else {\n                  feedbackTypes[i].subProblems[j] = _objectSpread({}, feedbackTypes[i].subProblems[j], {\n                    status: event.target.value\n                  });\n                }\n              }\n            }\n          }\n        }\n\n        _this.props.updateFeedbackTypes(feedbackTypes);\n      };\n    };\n\n    _this.handleCommentsChange = function (children) {\n      return function (event) {\n        var feedbackTypes = _this.props.feedbackTypes;\n        children.comments = event.target.value;\n\n        for (var i = 0; i < feedbackTypes.length; i++) {\n          if (feedbackTypes[i].key === children.key) {\n            feedbackTypes[i] = children;\n          }\n        }\n\n        _this.props.updateFeedbackTypes(feedbackTypes);\n      };\n    };\n\n    _this.handleChangeRadioButton = _this.handleChangeRadioButton.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FeedbackTabPanel, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          selectedTab = _this$props.selectedTab,\n          classes = _this$props.classes,\n          feedbackTypes = _this$props.feedbackTypes,\n          checkedValues = _this$props.checkedValues;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, feedbackTypes.map(function (children) {\n        return children.checked && React.createElement(Grid, {\n          container: true,\n          className: selectedTab !== children.key ? \"hidden\" : \"\",\n          key: children.problemAt,\n          spacing: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          component: \"div\",\n          role: \"tabpanel\",\n          hidden: selectedTab !== children.key,\n          id: \"scrollable-auto-tabpanel-\".concat(children.key),\n          \"aria-labelledby\": \"scrollable-auto-tab-\".concat(children.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(Paper, {\n          className: \"padding-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 0,\n          className: \"inline-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), React.createElement(Grid, {\n          item: true,\n          className: \"inline-flex text-center\",\n          xs: 7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, children.issueTypes.map(function (issues) {\n          return React.createElement(Typography, {\n            key: issues,\n            className: \"pt-15 width-half m-auto-imp\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, issues);\n        }))), children.checked && children.subProblems.map(function (option) {\n          return React.createElement(Grid, {\n            container: true,\n            spacing: 0,\n            key: option.key,\n            className: \"inline-flex width-100\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            xs: 5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            className: \"inline-flex padding-12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, option.name)), React.createElement(Grid, {\n            item: true,\n            xs: 7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(RadioGroup, {\n            key: option.key,\n            \"aria-label\": children.problemAt,\n            name: children.problemAt,\n            value: option.status,\n            className: classes.group + \" inline-block text-center\",\n            onClick: _this2.handleChangeRadioButton(option.key, children.key),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, children.issueTypes.map(function (issues) {\n            return React.createElement(FormControlLabel, {\n              key: issues,\n              labelPlacement: \"top\",\n              className: \"width-half m-0-important pl-10\",\n              value: issues,\n              control: React.createElement(Radio, {\n                checked: issues === option.status ? true : false,\n                className: \"m-0-important\",\n                color: \"primary\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 101\n                },\n                __self: this\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            });\n          }))));\n        }), React.createElement(Grid, {\n          container: true,\n          spacing: 0,\n          className: \"inline-flex width-100\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          className: \"inline-flex padding-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Comments\")), React.createElement(Grid, {\n          item: true,\n          xs: 7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"outlined-bare\",\n          fullWidth: true,\n          className: classes.textField + \" pt-5 pb-5\",\n          onChange: _this2.handleCommentsChange(children),\n          margin: \"normal\",\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        })))));\n      }));\n    }\n  }]);\n\n  return FeedbackTabPanel;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    submitFeedbackDialogData: function submitFeedbackDialogData(data) {\n      return dispatch(_submitFeedbackDialogData(data));\n    },\n    closeFeedbackDialog: function closeFeedbackDialog(data) {\n      return dispatch(_closeFeedbackDialog(data));\n    },\n    updateCheckedFields: function updateCheckedFields(data) {\n      return dispatch(_updateCheckedFields(data));\n    },\n    updateFeedbackTypes: function updateFeedbackTypes(data) {\n      return dispatch(_updateFeedbackTypes(data));\n    },\n    updateSelectedTab: function updateSelectedTab(data) {\n      return dispatch(_updateSelectedTab(data));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    feedbackDialogStatus: state.dialogInfo.feedbackDialogStatus,\n    feedbackDialogTitle: state.dialogInfo.feedbackDialogTitle,\n    feedbackCallApiResponse: state.feedbackCallInfo.feedbackCallApiResponse,\n    checkedValues: state.b2bFeedbackData.checkedTabs,\n    feedbackTypes: state.b2bFeedbackData.feedbackTypes,\n    selectedTab: state.b2bFeedbackData.selectedTab\n  };\n};\n\nFeedbackTabPanel.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FeedbackTabPanel));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/shared/dialogs/feedback-dialog/feedback-tab-panel.smart.js"],"names":["React","Component","connect","PropTypes","withStyles","styles","submitFeedbackDialogData","updateCheckedFields","updateFeedbackTypes","updateSelectedTab","closeFeedbackDialog","Paper","Grid","Typography","RadioGroup","Radio","TextField","FormControlLabel","FeedbackTabPanel","props","handleChangeRadioButton","radioButton","feedbackTypeKey","event","feedbackTypes","i","length","key","j","subProblems","status","target","value","checked","handleCommentsChange","children","comments","bind","selectedTab","classes","checkedValues","map","problemAt","issueTypes","issues","option","name","group","textField","mapDispatchToProps","dispatch","data","mapStateToProps","state","feedbackDialogStatus","dialogInfo","feedbackDialogTitle","feedbackCallApiResponse","feedbackCallInfo","b2bFeedbackData","checkedTabs","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from '../dialog-style'\nimport { submitFeedbackDialogData, updateCheckedFields, updateFeedbackTypes, updateSelectedTab } from '../../../../actions/feedback-dialog.action';\nimport { closeFeedbackDialog } from '../../../../actions/dialog.action';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { RadioGroup, Radio, TextField, FormControlLabel} from '@material-ui/core';\n\nclass FeedbackTabPanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleChangeRadioButton = this.handleChangeRadioButton.bind(this);\n    }\n\n    handleChangeRadioButton = (radioButton, feedbackTypeKey) => event => {\n        let feedbackTypes = this.props.feedbackTypes;\n        for(var i=0; i< feedbackTypes.length; i++) {\n            if (feedbackTypes[i].key === feedbackTypeKey) {\n                for(var j=0; j< feedbackTypes[i].subProblems.length; j++) {\n                    if ( feedbackTypes[i].subProblems[j].key === radioButton ) {\n                        if (feedbackTypes[i].subProblems[j].status === event.target.value) {\n                            feedbackTypes[i].subProblems[j] = {\n                                ...feedbackTypes[i].subProblems[j],\n                                status: null\n                            }\n                            event.target.checked = false;\n                        } else {\n                            feedbackTypes[i].subProblems[j] = {\n                                ...feedbackTypes[i].subProblems[j],\n                                status: event.target.value\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.props.updateFeedbackTypes(feedbackTypes);\n    }\n\n    handleCommentsChange = (children) => event => {\n        let feedbackTypes = this.props.feedbackTypes;\n        children.comments = event.target.value;\n        for(var i=0; i< feedbackTypes.length; i++) {\n            if (feedbackTypes[i].key === children.key) {\n                feedbackTypes[i] = children;\n            }\n        }\n        this.props.updateFeedbackTypes(feedbackTypes);\n    }\n\n    render(){\n        const { selectedTab, classes, feedbackTypes, checkedValues} = this.props;\n        return (\n            <div>\n            {   \n                feedbackTypes.map(children => (\n                children.checked && \n                <Grid container className={(selectedTab!==children.key? \"hidden\":\"\")} key={children.problemAt} spacing={0}>\n                    <Typography\n                        component=\"div\"\n                        role=\"tabpanel\"\n                        hidden={selectedTab !== children.key}\n                        id={`scrollable-auto-tabpanel-${children.key}`}\n                        aria-labelledby={`scrollable-auto-tab-${children.key}`}\n                    >\n                    </Typography>\n                    <Paper className=\"padding-10\">\n                        <Grid container spacing={0} className=\"inline-flex\">\n                            <Grid item xs={5}>\n                            </Grid>\n                            <Grid item className=\"inline-flex text-center\" xs={7}>\n                                {children.issueTypes.map(issues => (\n                                    <Typography key={issues} className=\"pt-15 width-half m-auto-imp\">{issues}</Typography>\n                                ))}\n                            </Grid>\n                        </Grid>\n                        {children.checked && \n                            children.subProblems.map(option => (\n                            <Grid container spacing={0} key={option.key} className=\"inline-flex width-100\">\n                                <Grid item xs={5}>\n                                    <Typography className=\"inline-flex padding-12\">\n                                        {option.name}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={7}>\n                                    <RadioGroup\n                                        key={option.key} \n                                        aria-label={children.problemAt}\n                                        name={children.problemAt}\n                                        value={option.status}\n                                        className={classes.group + \" inline-block text-center\"}\n                                        onClick={this.handleChangeRadioButton(option.key, children.key)}\n                                        >\n                                        {children.issueTypes.map(issues => (\n                                                <FormControlLabel key={issues} labelPlacement=\"top\" className=\"width-half m-0-important pl-10\" value={issues} control={\n                                                        <Radio checked={issues===option.status ? true : false} className=\"m-0-important\" color=\"primary\"/>\n                                                } \n                                                />\n                                        ))}\n                                    </RadioGroup>\n                                </Grid>\n                            </Grid>\n                        ))}\n                        <Grid container spacing={0} className=\"inline-flex width-100\">\n                            <Grid item xs={5}>\n                                    <Typography className=\"inline-flex padding-12\">\n                                        Comments\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={7}>\n                                <TextField\n                                    id=\"outlined-bare\"\n                                    fullWidth\n                                    className={classes.textField + \" pt-5 pb-5\"}\n                                    onChange={this.handleCommentsChange(children)}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                />\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    submitFeedbackDialogData: data => dispatch(submitFeedbackDialogData(data)),\n    closeFeedbackDialog: data => dispatch(closeFeedbackDialog(data)),\n    updateCheckedFields: data => dispatch(updateCheckedFields(data)),\n    updateFeedbackTypes: data => dispatch(updateFeedbackTypes(data)), \n    updateSelectedTab: data => dispatch(updateSelectedTab(data))\n});\nconst mapStateToProps = state => {\n    return {\n        feedbackDialogStatus: state.dialogInfo.feedbackDialogStatus,\n        feedbackDialogTitle: state.dialogInfo.feedbackDialogTitle,\n        feedbackCallApiResponse: state.feedbackCallInfo.feedbackCallApiResponse,\n        checkedValues: state.b2bFeedbackData.checkedTabs,\n        feedbackTypes: state.b2bFeedbackData.feedbackTypes,\n        selectedTab: state.b2bFeedbackData.selectedTab\n    };\n}\n\nFeedbackTabPanel.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(withStyles(styles)(FeedbackTabPanel));"]},"metadata":{},"sourceType":"module"}