{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport queryString from 'querystring';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\n\nvar SRDetailsTabService =\n/*#__PURE__*/\nfunction () {\n  function SRDetailsTabService() {\n    _classCallCheck(this, SRDetailsTabService);\n  }\n\n  _createClass(SRDetailsTabService, null, [{\n    key: \"fetchSRDetailsTabApi\",\n    value: function fetchSRDetailsTabApi() {\n      var config = {\n        headers: {\n          'Content-Type': \"application/x-www-form-urlencoded\"\n        }\n      };\n      var authDetails = CookieManagerService.getAuthDetails();\n      var lob = authDetails && authDetails['lob'] ? authDetails['lob'] : null;\n      var msisdn = CookieManagerService.getItem(AppConstant.MSISDN);\n      var lsiNumber = CookieManagerService.getItem(AppConstant.LSI_NUMBER);\n      var transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID);\n      var url = Config.contextPath + \"user/rest/v1.0/srHistory/fetchMultipleSRDetails/v2.0?transactionId=\" + transactionId + \"&lsiNumber=\" + lsiNumber;\n      return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"fetchSRNoteDetailsApi\",\n    value: function fetchSRNoteDetailsApi(noteId) {\n      var transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID);\n      var url = \"\".concat(Config.contextPath, \"user/rest/v1.0/crm/sr/note/details?transactionId=\").concat(transactionId, \"&noteId=\").concat(noteId);\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"onSRNotesDetailsRequest\",\n    value: function onSRNotesDetailsRequest(srNo) {\n      var config = {\n        headers: {\n          'Content-Type': \"application/x-www-form-urlencoded\"\n        }\n      }; // const authDetails = CookieManagerService.getAuthDetails();\n      // const lob = authDetails && authDetails['lob'] ? authDetails['lob'] : null;\n      // const msisdn = CookieManagerService.getItem(AppConstant.MSISDN);\n      // const srNumber = CookieManagerService.getItem(AppConstant.SR_NUMBER);\n\n      var transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID);\n      var url = Config.contextPath + \"user/rest/v1.0/srHistory/fetchSRDetails/v2.0?transactionId=\" + transactionId + \"&srNumber=\" + srNo;\n      return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"onCreateNewSRNoteRequest\",\n    value: function onCreateNewSRNoteRequest(formData, srNo) {\n      var config = {\n        headers: {\n          'Content-Type': \"application/json\"\n        }\n      };\n      var transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID); // var fd = new FormData();\n      // fd.append('srNumber', srNo);\n      // fd.append('noteDetails', formData['noteDetails']);\n      // fd.append('noteType', formData['noteType']);\n      // fd.append('noteDescription', formData['description']);\n      // fd.append('transactionId', transactionId);\n\n      var noteDetails = formData[\"noteDetails\"];\n      var noteDescription = formData['description'];\n\n      if (noteDetails) {\n        noteDetails += '';\n        noteDetails = noteDetails.replace(/\\n/g, \"\\\\n\");\n        noteDetails = noteDetails.replace(/\"/g, \"\\\\\\\"\");\n      } else {\n        noteDetails = '';\n      }\n\n      noteDetails = encodeURI(noteDetails);\n\n      if (noteDescription) {\n        noteDescription += '';\n        noteDescription = noteDescription.replace(/\\n/g, \"\\\\n\");\n        noteDescription = noteDescription.replace(/\"/g, \"\\\\\\\"\");\n      } else {\n        noteDescription = '';\n      }\n\n      noteDescription = encodeURI(noteDescription);\n      var reqBody = {\n        srNumber: srNo,\n        noteType: formData[\"noteType\"],\n        noteDetails: noteDetails,\n        noteDescription: noteDescription // const json = {}\n        // fd.forEach(function (value, prop) {\n        //     json[prop] = value\n        // })\n        // // convert json to urlencoded query string\n        // // SOURCE: https://stackoverflow.com/a/37562814 (comments)\n        // const formBody = Object.keys(json).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(json[key])).join('&')\n        // var url = Config.contextPath + \"user/rest/v1.0/crm/sr/note\";\n\n      };\n      var url = \"\".concat(Config.contextPath, \"user/rest/v1.0/crm/sr/note?transactionId=\").concat(transactionId); // return CustomHttpService.post(url, queryString.stringify(reqBody), config, EncodeDecodeType.DEFAULT);\n\n      return CustomHttpService.post(url, reqBody, config, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"reOpenResolvedSr\",\n    value: function reOpenResolvedSr(srNumber) {\n      var config = {\n        headers: {\n          'Content-Type': \"application/x-www-form-urlencoded\"\n        }\n      };\n      var transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID);\n      var formData = new FormData();\n      formData.append('srNumber', srNumber);\n      formData.append('transactionId', transactionId);\n      var url = \"\".concat(Config.contextPath, \"user/rest/v1.0/crm/sr/reopen\");\n      return CustomHttpService.post(url, formData, config, EncodeDecodeType.DEFAULT);\n    }\n  }]);\n\n  return SRDetailsTabService;\n}();\n\nexport default SRDetailsTabService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/sr-details-tab.service.js"],"names":["CustomHttpService","Config","CookieManagerService","AppConstant","queryString","EncodeDecodeType","SRDetailsTabService","config","headers","authDetails","getAuthDetails","lob","msisdn","getItem","MSISDN","lsiNumber","LSI_NUMBER","transactionId","TRANSACTION_ID","url","contextPath","get","DEFAULT","noteId","srNo","formData","noteDetails","noteDescription","replace","encodeURI","reqBody","srNumber","noteType","post","FormData","append"],"mappings":"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","sourcesContent":["import CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\nimport queryString from 'querystring';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\n\nclass SRDetailsTabService {\n    static fetchSRDetailsTabApi() {\n        const config = {\n            headers: {\n                'Content-Type': \"application/x-www-form-urlencoded\",\n            }\n        };\n        const authDetails = CookieManagerService.getAuthDetails();\n        const lob = authDetails && authDetails['lob'] ? authDetails['lob'] : null;\n        const msisdn = CookieManagerService.getItem(AppConstant.MSISDN);\n        const lsiNumber = CookieManagerService.getItem(AppConstant.LSI_NUMBER);\n        const transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID);\n        var url = Config.contextPath + \"user/rest/v1.0/srHistory/fetchMultipleSRDetails/v2.0?transactionId=\" + transactionId + \"&lsiNumber=\" + lsiNumber;\n        return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n\n    static fetchSRNoteDetailsApi(noteId) {\n        const transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID);\n        var url = `${Config.contextPath}user/rest/v1.0/crm/sr/note/details?transactionId=${transactionId}&noteId=${noteId}`;\n        return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n\n    static onSRNotesDetailsRequest(srNo) {\n        const config = {\n            headers: {\n                'Content-Type': \"application/x-www-form-urlencoded\",\n            }\n        };\n        // const authDetails = CookieManagerService.getAuthDetails();\n        // const lob = authDetails && authDetails['lob'] ? authDetails['lob'] : null;\n        // const msisdn = CookieManagerService.getItem(AppConstant.MSISDN);\n        // const srNumber = CookieManagerService.getItem(AppConstant.SR_NUMBER);\n        const transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID);\n        var url = Config.contextPath + \"user/rest/v1.0/srHistory/fetchSRDetails/v2.0?transactionId=\" + transactionId + \"&srNumber=\" + srNo;\n        return CustomHttpService.get(url, config, EncodeDecodeType.DEFAULT);\n    }\n\n    static onCreateNewSRNoteRequest(formData, srNo) {\n        const config = {\n            headers: {\n                'Content-Type': \"application/json\",\n            }\n        };\n        const transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID);\n        // var fd = new FormData();\n        // fd.append('srNumber', srNo);\n        // fd.append('noteDetails', formData['noteDetails']);\n        // fd.append('noteType', formData['noteType']);\n        // fd.append('noteDescription', formData['description']);\n        // fd.append('transactionId', transactionId);\n\n        let noteDetails = formData[\"noteDetails\"]\n        let noteDescription = formData['description']\n\n        if(noteDetails) {\n            noteDetails += ''\n            noteDetails = noteDetails.replace(/\\n/g, \"\\\\n\");\n            noteDetails = noteDetails.replace(/\"/g, \"\\\\\\\"\");\n        } else {\n            noteDetails = ''\n        }\n\n        noteDetails = encodeURI(noteDetails)\n\n        if(noteDescription) {\n            noteDescription += ''\n            noteDescription = noteDescription.replace(/\\n/g, \"\\\\n\");\n            noteDescription = noteDescription.replace(/\"/g, \"\\\\\\\"\");\n        } else {\n            noteDescription = ''\n        }\n\n        noteDescription = encodeURI(noteDescription)\n\n        const reqBody = {\n            srNumber: srNo,\n            noteType: formData[\"noteType\"],\n            noteDetails,\n            noteDescription\n        }\n\n        // const json = {}\n        // fd.forEach(function (value, prop) {\n        //     json[prop] = value\n        // })\n\n        // // convert json to urlencoded query string\n        // // SOURCE: https://stackoverflow.com/a/37562814 (comments)\n        // const formBody = Object.keys(json).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(json[key])).join('&')\n\n        // var url = Config.contextPath + \"user/rest/v1.0/crm/sr/note\";\n        var url = `${Config.contextPath}user/rest/v1.0/crm/sr/note?transactionId=${transactionId}`;\n        // return CustomHttpService.post(url, queryString.stringify(reqBody), config, EncodeDecodeType.DEFAULT);\n        return CustomHttpService.post(url, reqBody, config, EncodeDecodeType.DEFAULT);\n    }\n    \n\n    static reOpenResolvedSr(srNumber) {\n        const config = {\n            headers: {\n                'Content-Type': \"application/x-www-form-urlencoded\",\n            }\n        };\n\n        const transactionId = CookieManagerService.getItem(AppConstant.TRANSACTION_ID);\n\n        let formData = new FormData();\n        formData.append('srNumber', srNumber);\n        formData.append('transactionId', transactionId);\n\n        var url = `${Config.contextPath}user/rest/v1.0/crm/sr/reopen`;\n        return CustomHttpService.post(url, formData, config, EncodeDecodeType.DEFAULT);\n    }\n\n}\n\nexport default SRDetailsTabService;\n"]},"metadata":{},"sourceType":"module"}