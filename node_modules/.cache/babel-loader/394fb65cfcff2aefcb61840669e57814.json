{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/dff-info/dff-info.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './dff-info.style';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateDFFNameValuePairs as _updateDFFNameValuePairs, dffSubmitRequest as _dffSubmitRequest, updateDFFNotes as _updateDFFNotes } from '../../../actions/dff.action';\nimport Button from '@material-ui/core/Button';\nimport { setProspectCircle as _setProspectCircle } from '../../../actions/customer-info.action';\nimport FormValidatorService from '../../../services/form-validator.service';\nimport { openSnackbarRequest as _openSnackbarRequest } from '../../../actions/snackbar.action';\nimport { DFFConstant } from '../../../constants/dff.constant';\nimport { fetchArcIssueCircle as _fetchArcIssueCircle, fetchArcIssueCity as _fetchArcIssueCity, fetchArcIssueLocation as _fetchArcIssueLocation, fetchArcIssueStoreNameAddr as _fetchArcIssueStoreNameAddr } from '../../../actions/arc-issue-dialog.action';\n\nvar DFFInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DFFInfo, _Component);\n\n  function DFFInfo() {\n    var _this;\n\n    _classCallCheck(this, DFFInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DFFInfo).call(this));\n    _this.selectedState = \"\";\n    _this.selectedCity = \"\";\n\n    _this.onSelectProspectCircle = function (event) {\n      _this.props.setProspectCircle(event.target.value);\n    };\n\n    _this.onChangeDFFNotes = function (event) {\n      _this.props.updateDFFNotes(event.target.value);\n    };\n\n    _this.onSubmitDFF = _this.onSubmitDFF.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DFFInfo, [{\n    key: \"onChangeFieldValue\",\n    value: function onChangeFieldValue(event, item) {\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.props.updateDFFNameValuePairs({\n        id: item.name,\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"onChangeStateFieldValue\",\n    value: function onChangeStateFieldValue(event, item) {\n      this.selectedState = event.target.value;\n      this.onChangeFieldValue(event, item);\n      this.props.fetchArcIssueCity(event.target.value);\n    }\n  }, {\n    key: \"onChangeCityFieldValue\",\n    value: function onChangeCityFieldValue(event, item) {\n      this.selectedCity = event.target.value;\n      this.onChangeFieldValue(event, item);\n      this.props.fetchArcIssueLocation(event.target.value, this.selectedState);\n    }\n  }, {\n    key: \"onChangeLocationFieldValue\",\n    value: function onChangeLocationFieldValue(event, item) {\n      this.onChangeFieldValue(event, item);\n      this.props.fetchArcIssueStoreNameAddr(this.selectedState, this.selectedCity, event.target.value);\n    }\n  }, {\n    key: \"onSubmitDFF\",\n    value: function onSubmitDFF() {\n      var _this$props = this.props,\n          dffInfo = _this$props.dffInfo,\n          dffNameValuePairs = _this$props.dffNameValuePairs;\n      var errMessage = FormValidatorService.validateDFF(dffInfo, dffNameValuePairs);\n\n      if (errMessage) {\n        this.props.openSnackbarRequest(null, errMessage);\n      } else {\n        this.props.dffSubmitRequest(this.props.source);\n      }\n    }\n  }, {\n    key: \"disableField\",\n    value: function disableField(item) {\n      if (item && item.autoFilled) {\n        return true;\n      } else if (item && item.name && (item.name.toUpperCase() === DFFConstant.CAPTURE_LOCATION_FIELD || item.name.toUpperCase() === DFFConstant.CUSTOMER_LAT_LONG_FIELD)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isDFFContainsState\",\n    value: function isDFFContainsState(dff) {\n      if (this.props.stateList && !this.props.stateList.length) {\n        var keys = dff ? Object.keys(dff) : [];\n\n        if (keys && keys.length) {\n          for (var k = 0; k < keys.length; k++) {\n            if (keys[k].toLowerCase() === DFFConstant.STATE_FIELD) {\n              this.props.fetchArcIssueCircle();\n              break;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"manageDisplayDffTextField\",\n    value: function manageDisplayDffTextField(item) {\n      if (item && item.dataType === 'text' && item.name && item.name.toLowerCase() !== DFFConstant.STATE_FIELD && item.name.toLowerCase() !== DFFConstant.CITY_FIELD && item.name.toLowerCase() !== DFFConstant.LOCATION_FIELD && item.name.toLowerCase() !== DFFConstant.ARC_FIELD) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"manageDisplayDffComboField\",\n    value: function manageDisplayDffComboField(item) {\n      if (item && item.dataType === 'combo' && item.name && item.name.toLowerCase() !== DFFConstant.STATE_FIELD && item.name.toLowerCase() !== DFFConstant.CITY_FIELD && item.name.toLowerCase() !== DFFConstant.LOCATION_FIELD && item.name.toLowerCase() !== DFFConstant.ARC_FIELD) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          dffInfo = _this$props2.dffInfo,\n          dffNameValuePairs = _this$props2.dffNameValuePairs,\n          dffNotes = _this$props2.dffNotes,\n          textFieldClass = _this$props2.textFieldClass,\n          scrollableAction = _this$props2.scrollableAction,\n          stateList = _this$props2.stateList,\n          citiesList = _this$props2.citiesList,\n          locationList = _this$props2.locationList,\n          arcStores = _this$props2.arcStores; // this.isDFFContainsState(dffNameValuePairs);\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return event.preventDefault();\n        },\n        className: classes.container + (scrollableAction || \"\"),\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, dffInfo.map(function (item, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          required: item.mandatoryFlag === 'Y' ? true : false,\n          id: item.name,\n          label: item.displayName,\n          className: textFieldClass + (_this2.manageDisplayDffTextField(item) ? '' : ' hidden '),\n          value: dffNameValuePairs[item.name].value,\n          onChange: function onChange(e) {\n            return _this2.onChangeFieldValue(e, item);\n          },\n          margin: \"normal\",\n          disabled: _this2.disableField(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          required: item.mandatoryFlag === 'Y' ? true : false,\n          id: item.name,\n          label: item.displayName,\n          type: \"date\",\n          className: textFieldClass + (item && item.dataType === 'date' ? '' : ' hidden '),\n          value: dffNameValuePairs[item.name].value,\n          onChange: function onChange(e) {\n            return _this2.onChangeFieldValue(e, item);\n          },\n          InputLabelProps: {\n            shrink: true\n          },\n          margin: \"normal\",\n          disabled: _this2.disableField(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          required: item.mandatoryFlag === 'Y' ? true : false,\n          id: item.name,\n          label: item.displayName,\n          type: \"datetime-local\",\n          className: textFieldClass + (item && item.dataType === 'datetime' ? '' : ' hidden '),\n          value: dffNameValuePairs[item.name].value,\n          onChange: function onChange(e) {\n            return _this2.onChangeFieldValue(e, item);\n          },\n          InputLabelProps: {\n            shrink: true\n          },\n          margin: \"normal\",\n          disabled: _this2.disableField(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          required: item.mandatoryFlag === 'Y' ? true : false,\n          id: item.name,\n          label: item.displayName,\n          value: dffNameValuePairs[item.name].value,\n          onChange: function onChange(e) {\n            return _this2.onChangeFieldValue(e, item);\n          },\n          type: \"number\",\n          className: textFieldClass + (item && item.dataType === 'number' ? '' : ' hidden '),\n          margin: \"normal\",\n          disabled: _this2.disableField(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }), React.createElement(TextField, {\n          required: item.mandatoryFlag === 'Y' ? true : false,\n          select: true,\n          id: item.name,\n          label: item.displayName,\n          className: textFieldClass + (_this2.manageDisplayDffComboField(item) ? '' : ' hidden '),\n          value: dffNameValuePairs[item.name].value,\n          onChange: function onChange(e) {\n            return _this2.onChangeFieldValue(e, item);\n          },\n          SelectProps: {\n            MenuProps: {\n              className: classes.menu\n            }\n          },\n          margin: \"normal\",\n          disabled: _this2.disableField(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(MenuItem, {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"Select\")), item.values && item.values.map(function (option) {\n          return React.createElement(MenuItem, {\n            key: option,\n            value: option,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }, option);\n        })), React.createElement(TextField, {\n          required: item.mandatoryFlag === 'Y' ? true : false,\n          select: true,\n          id: item.name,\n          label: item.displayName,\n          className: textFieldClass + (item && item.name && item.name.toLowerCase() === DFFConstant.STATE_FIELD ? '' : ' hidden '),\n          value: dffNameValuePairs[item.name].value,\n          onChange: function onChange(e) {\n            return _this2.onChangeStateFieldValue(e, item);\n          },\n          SelectProps: {\n            MenuProps: {\n              className: classes.menu\n            }\n          },\n          margin: \"normal\",\n          disabled: _this2.disableField(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(MenuItem, {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Select\")), stateList && stateList.length && stateList.map(function (option) {\n          return React.createElement(MenuItem, {\n            key: option,\n            value: option,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215\n            },\n            __self: this\n          }, option);\n        })), React.createElement(TextField, {\n          required: item.mandatoryFlag === 'Y' ? true : false,\n          select: true,\n          id: item.name,\n          label: item.displayName,\n          className: textFieldClass + (item && item.name && item.name.toLowerCase() === DFFConstant.CITY_FIELD ? '' : ' hidden '),\n          value: dffNameValuePairs[item.name].value,\n          onChange: function onChange(e) {\n            return _this2.onChangeCityFieldValue(e, item);\n          },\n          SelectProps: {\n            MenuProps: {\n              className: classes.menu\n            }\n          },\n          margin: \"normal\",\n          disabled: _this2.disableField(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(MenuItem, {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, \"Select\")), citiesList && citiesList.length && citiesList.map(function (option) {\n          return React.createElement(MenuItem, {\n            key: option,\n            value: option,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, option);\n        })), React.createElement(TextField, {\n          required: item.mandatoryFlag === 'Y' ? true : false,\n          select: true,\n          id: item.name,\n          label: item.displayName,\n          className: textFieldClass + (item && item.name && item.name.toLowerCase() === DFFConstant.LOCATION_FIELD ? '' : ' hidden '),\n          value: dffNameValuePairs[item.name].value,\n          onChange: function onChange(e) {\n            return _this2.onChangeLocationFieldValue(e, item);\n          },\n          SelectProps: {\n            MenuProps: {\n              className: classes.menu\n            }\n          },\n          margin: \"normal\",\n          disabled: _this2.disableField(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(MenuItem, {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Select\")), locationList && locationList.length && locationList.map(function (option) {\n          return React.createElement(MenuItem, {\n            key: option,\n            value: option,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }, option);\n        })), React.createElement(TextField, {\n          required: item.mandatoryFlag === 'Y' ? true : false,\n          select: true,\n          id: item.name,\n          label: item.displayName,\n          className: textFieldClass + (item && item.name && item.name.toLowerCase() === DFFConstant.ARC_FIELD ? '' : ' hidden '),\n          value: dffNameValuePairs[item.name].value,\n          onChange: function onChange(e) {\n            return _this2.onChangeFieldValue(e, item);\n          },\n          SelectProps: {\n            MenuProps: {\n              className: classes.menu\n            }\n          },\n          margin: \"normal\",\n          disabled: _this2.disableField(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(MenuItem, {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, \"Select\")), arcStores && arcStores.length && arcStores.map(function (option) {\n          return React.createElement(MenuItem, {\n            key: option.storeAddress,\n            value: option.storeAddress,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          }, option.storeAddress);\n        })));\n      }), React.createElement(TextField, {\n        label: \"Notes\",\n        className: textFieldClass,\n        value: dffNotes,\n        onChange: this.onChangeDFFNotes,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.btnContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-primary\",\n        onClick: this.onSubmitDFF,\n        variant: \"contained\",\n        size: \"medium\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return DFFInfo;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dffInfo: state.dff.dffInfo,\n    dffNameValuePairs: state.dff.dffNameValuePairs,\n    customerInfo: state.customerInfo.customerInfo,\n    prospectCircle: state.customerInfo.prospectCircle,\n    dffNotes: state.dff.dffNotes,\n    stateList: state.arcIssueInfo.fetchArcIssueCircleApiResponse,\n    citiesList: state.arcIssueInfo.fetchArcIssueCityApiResponse,\n    locationList: state.arcIssueInfo.fetchArcIssueLocationApiResponse,\n    arcStores: state.arcIssueInfo.fetchArcStoreNameAddrApiResponse\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateDFFNameValuePairs: function updateDFFNameValuePairs(id, value) {\n      return dispatch(_updateDFFNameValuePairs(id, value));\n    },\n    dffSubmitRequest: function dffSubmitRequest(source) {\n      return dispatch(_dffSubmitRequest(source));\n    },\n    setProspectCircle: function setProspectCircle(value) {\n      return dispatch(_setProspectCircle(value));\n    },\n    openSnackbarRequest: function openSnackbarRequest(err, msg) {\n      return dispatch(_openSnackbarRequest(err, msg));\n    },\n    updateDFFNotes: function updateDFFNotes(value) {\n      return dispatch(_updateDFFNotes(value));\n    },\n    fetchArcIssueCircle: function fetchArcIssueCircle() {\n      return dispatch(_fetchArcIssueCircle());\n    },\n    fetchArcIssueCity: function fetchArcIssueCity(value) {\n      return dispatch(_fetchArcIssueCity(value));\n    },\n    fetchArcIssueLocation: function fetchArcIssueLocation(city, state) {\n      return dispatch(_fetchArcIssueLocation(city, state));\n    },\n    fetchArcIssueStoreNameAddr: function fetchArcIssueStoreNameAddr(state, city, location) {\n      return dispatch(_fetchArcIssueStoreNameAddr(state, city, location));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, {\n  withTheme: true\n})(DFFInfo));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/common/dff-info/dff-info.smart.js"],"names":["React","Component","connect","withStyles","styles","TextField","MenuItem","updateDFFNameValuePairs","dffSubmitRequest","updateDFFNotes","Button","setProspectCircle","FormValidatorService","openSnackbarRequest","DFFConstant","fetchArcIssueCircle","fetchArcIssueCity","fetchArcIssueLocation","fetchArcIssueStoreNameAddr","DFFInfo","selectedState","selectedCity","onSelectProspectCircle","event","props","target","value","onChangeDFFNotes","onSubmitDFF","bind","item","preventDefault","id","name","onChangeFieldValue","dffInfo","dffNameValuePairs","errMessage","validateDFF","source","autoFilled","toUpperCase","CAPTURE_LOCATION_FIELD","CUSTOMER_LAT_LONG_FIELD","dff","stateList","length","keys","Object","k","toLowerCase","STATE_FIELD","dataType","CITY_FIELD","LOCATION_FIELD","ARC_FIELD","classes","dffNotes","textFieldClass","scrollableAction","citiesList","locationList","arcStores","container","map","index","mandatoryFlag","displayName","manageDisplayDffTextField","e","disableField","shrink","manageDisplayDffComboField","MenuProps","className","menu","values","option","onChangeStateFieldValue","onChangeCityFieldValue","onChangeLocationFieldValue","storeAddress","btnContainer","mapStateToProps","state","customerInfo","prospectCircle","arcIssueInfo","fetchArcIssueCircleApiResponse","fetchArcIssueCityApiResponse","fetchArcIssueLocationApiResponse","fetchArcStoreNameAddrApiResponse","mapDispatchToProps","dispatch","err","msg","city","location","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './dff-info.style';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { updateDFFNameValuePairs, dffSubmitRequest, updateDFFNotes } from '../../../actions/dff.action';\nimport Button from '@material-ui/core/Button';\nimport { setProspectCircle } from '../../../actions/customer-info.action';\nimport FormValidatorService from '../../../services/form-validator.service';\nimport { openSnackbarRequest } from '../../../actions/snackbar.action';\nimport { DFFConstant } from '../../../constants/dff.constant';\nimport { fetchArcIssueCircle, fetchArcIssueCity, fetchArcIssueLocation, fetchArcIssueStoreNameAddr } from '../../../actions/arc-issue-dialog.action';\n\nclass DFFInfo extends Component {\n    selectedState = \"\";\n    selectedCity = \"\";\n    constructor() {\n        super();\n        this.onSubmitDFF = this.onSubmitDFF.bind(this);\n    }\n\n    onChangeFieldValue(event, item) {\n        if (event) {\n            event.preventDefault();\n        }\n        this.props.updateDFFNameValuePairs({ id: item.name, value: event.target.value });\n    }\n\n    onChangeStateFieldValue(event, item) {\n        this.selectedState = event.target.value;\n        this.onChangeFieldValue(event, item);\n        this.props.fetchArcIssueCity(event.target.value);\n    }\n\n    onChangeCityFieldValue(event, item) {\n        this.selectedCity = event.target.value;\n        this.onChangeFieldValue(event, item);\n        this.props.fetchArcIssueLocation(event.target.value, this.selectedState);\n    }\n\n    onChangeLocationFieldValue(event, item) {\n        this.onChangeFieldValue(event, item);\n        this.props.fetchArcIssueStoreNameAddr(this.selectedState, this.selectedCity, event.target.value);\n    }\n\n    onSelectProspectCircle = (event) => {\n        this.props.setProspectCircle(event.target.value);\n    }\n\n    onSubmitDFF() {\n        const { dffInfo, dffNameValuePairs } = this.props;\n        const errMessage = FormValidatorService.validateDFF(dffInfo, dffNameValuePairs);\n        if (errMessage) {\n            this.props.openSnackbarRequest(null, errMessage);\n        } else {\n            this.props.dffSubmitRequest(this.props.source);\n        }\n    }\n\n    onChangeDFFNotes = event => {\n        this.props.updateDFFNotes(event.target.value);\n    }\n\n    disableField(item) {\n        if (item && item.autoFilled) {\n            return true;\n        } else if (item && item.name && (item.name.toUpperCase() === DFFConstant.CAPTURE_LOCATION_FIELD || item.name.toUpperCase() === DFFConstant.CUSTOMER_LAT_LONG_FIELD)) {\n            return true;\n        }\n        return false;\n    }\n\n    isDFFContainsState(dff) {\n        if (this.props.stateList && !this.props.stateList.length) {\n            const keys = dff ? Object.keys(dff) : [];\n            if (keys && keys.length) {\n                for (let k = 0; k < keys.length; k++) {\n                    if (keys[k].toLowerCase() === DFFConstant.STATE_FIELD) {\n                        this.props.fetchArcIssueCircle();\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    manageDisplayDffTextField(item) {\n        if (item && item.dataType === 'text'\n            && item.name && item.name.toLowerCase() !== DFFConstant.STATE_FIELD\n            && item.name.toLowerCase() !== DFFConstant.CITY_FIELD\n            && item.name.toLowerCase() !== DFFConstant.LOCATION_FIELD\n            && item.name.toLowerCase() !== DFFConstant.ARC_FIELD) {\n            return true;\n        }\n        return false;\n    }\n\n    manageDisplayDffComboField(item) {\n        if (item && item.dataType === 'combo' && item.name\n            && item.name.toLowerCase() !== DFFConstant.STATE_FIELD\n            && item.name.toLowerCase() !== DFFConstant.CITY_FIELD\n            && item.name.toLowerCase() !== DFFConstant.LOCATION_FIELD\n            && item.name.toLowerCase() !== DFFConstant.ARC_FIELD) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        const { classes, dffInfo, dffNameValuePairs, dffNotes, textFieldClass, scrollableAction, stateList, citiesList, locationList, arcStores } = this.props;\n        // this.isDFFContainsState(dffNameValuePairs);\n        return (\n            <React.Fragment>\n                <form onSubmit={event => event.preventDefault()} className={classes.container + (scrollableAction || \"\")} noValidate autoComplete=\"off\">\n\n\n                    {dffInfo.map((item, index) => {\n                        return (\n                            <React.Fragment key={index}>\n                                <TextField\n                                    required={(item.mandatoryFlag === 'Y' ? true : false)}\n                                    id={item.name}\n                                    label={item.displayName}\n                                    className={textFieldClass + (this.manageDisplayDffTextField(item) ? '' : ' hidden ')}\n                                    value={dffNameValuePairs[item.name].value}\n                                    onChange={(e) => this.onChangeFieldValue(e, item)}\n                                    margin=\"normal\"\n                                    disabled={this.disableField(item)}\n                                />\n                                <TextField\n                                    required={(item.mandatoryFlag === 'Y' ? true : false)}\n                                    id={item.name}\n                                    label={item.displayName}\n                                    type=\"date\"\n                                    className={textFieldClass + (item && item.dataType === 'date' ? '' : ' hidden ')}\n                                    value={dffNameValuePairs[item.name].value}\n                                    onChange={(e) => this.onChangeFieldValue(e, item)}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    margin=\"normal\"\n                                    disabled={this.disableField(item)}\n                                />\n                                <TextField\n                                    required={(item.mandatoryFlag === 'Y' ? true : false)}\n                                    id={item.name}\n                                    label={item.displayName}\n                                    type=\"datetime-local\"\n                                    className={textFieldClass + (item && item.dataType === 'datetime' ? '' : ' hidden ')}\n                                    value={dffNameValuePairs[item.name].value}\n                                    onChange={(e) => this.onChangeFieldValue(e, item)}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    margin=\"normal\"\n                                    disabled={this.disableField(item)}\n                                />\n                                <TextField\n                                    required={(item.mandatoryFlag === 'Y' ? true : false)}\n                                    id={item.name}\n                                    label={item.displayName}\n                                    value={dffNameValuePairs[item.name].value}\n                                    onChange={(e) => this.onChangeFieldValue(e, item)}\n                                    type=\"number\"\n                                    className={textFieldClass + (item && item.dataType === 'number' ? '' : ' hidden ')}\n                                    margin=\"normal\"\n                                    disabled={this.disableField(item)}\n                                />\n                                <TextField\n                                    required={(item.mandatoryFlag === 'Y' ? true : false)}\n                                    select\n                                    id={item.name}\n                                    label={item.displayName}\n                                    className={textFieldClass + (this.manageDisplayDffComboField(item) ? '' : ' hidden ')}\n                                    value={dffNameValuePairs[item.name].value}\n                                    onChange={(e) => this.onChangeFieldValue(e, item)}\n                                    SelectProps={{\n                                        MenuProps: {\n                                            className: classes.menu,\n                                        },\n                                    }}\n                                    margin=\"normal\"\n                                    disabled={this.disableField(item)}\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>Select</em>\n                                    </MenuItem>\n                                    {item.values && item.values.map(option => (\n                                        <MenuItem key={option} value={option}>\n                                            {option}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                                <TextField\n                                    required={(item.mandatoryFlag === 'Y' ? true : false)}\n                                    select\n                                    id={item.name}\n                                    label={item.displayName}\n                                    className={textFieldClass + (item && item.name && item.name.toLowerCase() === DFFConstant.STATE_FIELD ? '' : ' hidden ')}\n                                    value={dffNameValuePairs[item.name].value}\n                                    onChange={(e) => this.onChangeStateFieldValue(e, item)}\n                                    SelectProps={{\n                                        MenuProps: {\n                                            className: classes.menu,\n                                        },\n                                    }}\n                                    margin=\"normal\"\n                                    disabled={this.disableField(item)}\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>Select</em>\n                                    </MenuItem>\n                                    {stateList && stateList.length && stateList.map(option => (\n                                        <MenuItem key={option} value={option}>\n                                            {option}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                                <TextField\n                                    required={(item.mandatoryFlag === 'Y' ? true : false)}\n                                    select\n                                    id={item.name}\n                                    label={item.displayName}\n                                    className={textFieldClass + (item && item.name && item.name.toLowerCase() === DFFConstant.CITY_FIELD ? '' : ' hidden ')}\n                                    value={dffNameValuePairs[item.name].value}\n                                    onChange={(e) => this.onChangeCityFieldValue(e, item)}\n                                    SelectProps={{\n                                        MenuProps: {\n                                            className: classes.menu,\n                                        },\n                                    }}\n                                    margin=\"normal\"\n                                    disabled={this.disableField(item)}\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>Select</em>\n                                    </MenuItem>\n                                    {citiesList && citiesList.length && citiesList.map(option => (\n                                        <MenuItem key={option} value={option}>\n                                            {option}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                                <TextField\n                                    required={(item.mandatoryFlag === 'Y' ? true : false)}\n                                    select\n                                    id={item.name}\n                                    label={item.displayName}\n                                    className={textFieldClass + (item && item.name && item.name.toLowerCase() === DFFConstant.LOCATION_FIELD ? '' : ' hidden ')}\n                                    value={dffNameValuePairs[item.name].value}\n                                    onChange={(e) => this.onChangeLocationFieldValue(e, item)}\n                                    SelectProps={{\n                                        MenuProps: {\n                                            className: classes.menu,\n                                        },\n                                    }}\n                                    margin=\"normal\"\n                                    disabled={this.disableField(item)}\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>Select</em>\n                                    </MenuItem>\n                                    {locationList && locationList.length && locationList.map(option => (\n                                        <MenuItem key={option} value={option}>\n                                            {option}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                                <TextField\n                                    required={(item.mandatoryFlag === 'Y' ? true : false)}\n                                    select\n                                    id={item.name}\n                                    label={item.displayName}\n                                    className={textFieldClass + (item && item.name && item.name.toLowerCase() === DFFConstant.ARC_FIELD ? '' : ' hidden ')}\n                                    value={dffNameValuePairs[item.name].value}\n                                    onChange={(e) => this.onChangeFieldValue(e, item)}\n                                    SelectProps={{\n                                        MenuProps: {\n                                            className: classes.menu,\n                                        },\n                                    }}\n                                    margin=\"normal\"\n                                    disabled={this.disableField(item)}\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>Select</em>\n                                    </MenuItem>\n                                    {arcStores && arcStores.length && arcStores.map(option => (\n                                        <MenuItem key={option.storeAddress} value={option.storeAddress}>\n                                            {option.storeAddress}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </React.Fragment>\n                        )\n                    })}\n\n                    <TextField\n                        label=\"Notes\"\n                        className={textFieldClass}\n                        value={dffNotes}\n                        onChange={this.onChangeDFFNotes}\n                        margin=\"normal\"\n                    />\n                </form>\n                <div className={classes.btnContainer}>\n                    <Button className=\"btn-primary\" onClick={this.onSubmitDFF} variant=\"contained\" size=\"medium\" color=\"primary\">\n                        Submit\n                    </Button>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dffInfo: state.dff.dffInfo,\n        dffNameValuePairs: state.dff.dffNameValuePairs,\n        customerInfo: state.customerInfo.customerInfo,\n        prospectCircle: state.customerInfo.prospectCircle,\n        dffNotes: state.dff.dffNotes,\n        stateList: state.arcIssueInfo.fetchArcIssueCircleApiResponse,\n        citiesList: state.arcIssueInfo.fetchArcIssueCityApiResponse,\n        locationList: state.arcIssueInfo.fetchArcIssueLocationApiResponse,\n        arcStores: state.arcIssueInfo.fetchArcStoreNameAddrApiResponse,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    updateDFFNameValuePairs: (id, value) => dispatch(updateDFFNameValuePairs(id, value)),\n    dffSubmitRequest: (source) => dispatch(dffSubmitRequest(source)),\n    setProspectCircle: value => dispatch(setProspectCircle(value)),\n    openSnackbarRequest: (err, msg) => dispatch(openSnackbarRequest(err, msg)),\n    updateDFFNotes: value => dispatch(updateDFFNotes(value)),\n    fetchArcIssueCircle: () => dispatch(fetchArcIssueCircle()),\n    fetchArcIssueCity: value => dispatch(fetchArcIssueCity(value)),\n    fetchArcIssueLocation: (city, state) => dispatch(fetchArcIssueLocation(city, state)),\n    fetchArcIssueStoreNameAddr: (state, city, location) => dispatch(fetchArcIssueStoreNameAddr(state, city, location)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(DFFInfo));"]},"metadata":{},"sourceType":"module"}