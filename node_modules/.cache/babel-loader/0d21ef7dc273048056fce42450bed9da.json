{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/sr-details/sr-notes-details/sr-notes-details.smart.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport styles from './sr-notes-details.style';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { fetchSRNotesDetails, fetchSRNoteDetailsData } from '../../../../actions/sr-details-tab.action';\nimport Collapse from '@material-ui/core/Collapse';\nimport UtilService from '../../../../services/util.service';\nimport { Grid } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nvar SRNotesDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SRNotesDetails, _Component);\n\n  function SRNotesDetails(props) {\n    var _this;\n\n    _classCallCheck(this, SRNotesDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SRNotesDetails).call(this, props));\n\n    _this.onChangeCategory = function (evt) {\n      _this.setState({\n        selectedCategory: evt.target.value\n      });\n    };\n\n    _this.handleRowExpansion = function (index) {\n      var srNotesTableExpandedRow = _this.state.srNotesTableExpandedRow;\n      var value = !srNotesTableExpandedRow[index];\n      srNotesTableExpandedRow = [];\n      srNotesTableExpandedRow[index] = value;\n\n      _this.setState({\n        srNotesTableExpandedRow: srNotesTableExpandedRow\n      });\n    };\n\n    _this.fetchNoteDetails = function (index, noteId) {\n      var srNotesContents = _this.props.srNotesContents;\n      var srNoteDetailFlag = _this.state.srNoteDetailFlag;\n      var value = srNoteDetailFlag && srNoteDetailFlag[index];\n      srNoteDetailFlag = [];\n      srNoteDetailFlag[index] = !value;\n      if (srNoteDetailFlag[index] && !(srNotesContents && srNotesContents[noteId])) _this.props.fetchSRNoteDetailsData(noteId);\n\n      _this.setState({\n        srNoteDetailFlag: srNoteDetailFlag\n      });\n    };\n\n    _this.state = {\n      srNotesTableExpandedRow: [],\n      srNoteDetailFlag: [],\n      selectedCategory: 'all'\n    };\n    return _this;\n  }\n\n  _createClass(SRNotesDetails, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          srNotesDetails = _this$props.srNotesDetails,\n          srNotesContents = _this$props.srNotesContents;\n      var _this$state = this.state,\n          srNotesTableExpandedRow = _this$state.srNotesTableExpandedRow,\n          selectedCategory = _this$state.selectedCategory;\n      var uniqueType = UtilService.getUniqueValueList(srNotesDetails, 'createdBy');\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: srNotesDetails && srNotesDetails.length ? '' : 'hidden',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        style: {\n          width: '30%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Note\"), React.createElement(TableCell, {\n        style: {\n          width: '25%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Creation Date/Time\"), React.createElement(TableCell, {\n        style: {\n          width: '20%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Resource Name\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"OLM ID\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Note Type\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, srNotesDetails && srNotesDetails.map(function (row, index) {\n        return React.createElement(React.Fragment, {\n          key: row.notesId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(TableRow, {\n          onClick: function onClick() {\n            return _this2.handleRowExpansion(index);\n          },\n          className: selectedCategory !== 'all' && selectedCategory !== row.createdBy ? 'hidden' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: \"position-relative\",\n          style: {\n            width: '30%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.cell,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.cellOverflow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, row.description))), React.createElement(TableCell, {\n          style: {\n            width: '25%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, UtilService.dateFormat_DD_MMM_YYYY_HH_MM(row.createdDate)), React.createElement(TableCell, {\n          style: {\n            width: '20%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, row.attribute && row.attribute[1] && row.attribute[1].value || ''), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, row.createdBy), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, row.type || '')), React.createElement(TableRow, {\n          className: selectedCategory !== 'all' && selectedCategory !== row.createdBy || !srNotesTableExpandedRow[index] ? 'hidden' : '',\n          style: {\n            background: '#FEFFE1'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          colSpan: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Collapse, {\n          in: srNotesTableExpandedRow[index] ? true : false,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          className: classes.details,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, row.description, \" \", React.createElement(\"span\", {\n          onClick: function onClick() {\n            return _this2.fetchNoteDetails(index, row.notesId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"u\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, _this2.state.srNoteDetailFlag && _this2.state.srNoteDetailFlag[index] ? 'Show less' : 'Show more', \" \")), _this2.state.srNoteDetailFlag && _this2.state.srNoteDetailFlag[index] && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, srNotesContents[row.notesId])))));\n      })))), React.createElement(\"div\", {\n        className: srNotesDetails && srNotesDetails.length ? 'hidden' : 'not-found',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Data Not Available\"));\n    }\n  }]);\n\n  return SRNotesDetails;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    srNotesDetails: state.SRDetailsTabApiInfo.srNotesDetails,\n    srNotesContents: state.SRDetailsTabApiInfo.srNotesContents\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchSRNotesDetails: fetchSRNotesDetails,\n  fetchSRNoteDetailsData: fetchSRNoteDetailsData\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SRNotesDetails));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/sr-details/sr-notes-details/sr-notes-details.smart.js"],"names":["React","Component","withStyles","connect","styles","Table","TableBody","TableCell","TableHead","TableRow","fetchSRNotesDetails","fetchSRNoteDetailsData","Collapse","UtilService","Grid","Select","MenuItem","InputLabel","FormControl","SRNotesDetails","props","onChangeCategory","evt","setState","selectedCategory","target","value","handleRowExpansion","index","srNotesTableExpandedRow","state","fetchNoteDetails","noteId","srNotesContents","srNoteDetailFlag","classes","srNotesDetails","uniqueType","getUniqueValueList","root","length","formControl","width","map","row","notesId","createdBy","cell","cellOverflow","description","dateFormat_DD_MMM_YYYY_HH_MM","createdDate","attribute","type","background","details","mapStateToProps","SRDetailsTabApiInfo","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport styles from './sr-notes-details.style';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { fetchSRNotesDetails, fetchSRNoteDetailsData } from '../../../../actions/sr-details-tab.action';\nimport Collapse from '@material-ui/core/Collapse';\nimport UtilService from '../../../../services/util.service';\nimport { Grid } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nclass SRNotesDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            srNotesTableExpandedRow: [],\n            srNoteDetailFlag: [],\n            selectedCategory: 'all'\n        }\n    }\n\n    onChangeCategory = (evt) => {\n        this.setState({ selectedCategory: evt.target.value })\n    }\n\n    handleRowExpansion = (index) => {\n        let { srNotesTableExpandedRow } = this.state;\n        const value = !srNotesTableExpandedRow[index];\n        srNotesTableExpandedRow = [];\n        srNotesTableExpandedRow[index] = value;\n        this.setState({ srNotesTableExpandedRow });\n    }\n\n    fetchNoteDetails = (index, noteId) => {\n        const { srNotesContents } = this.props;\n        let { srNoteDetailFlag } = this.state;\n        const value = srNoteDetailFlag && srNoteDetailFlag[index]\n        srNoteDetailFlag = [];\n        srNoteDetailFlag[index] = !value;\n\n        if(srNoteDetailFlag[index] && !(srNotesContents && srNotesContents[noteId]))\n            this.props.fetchSRNoteDetailsData(noteId)\n\n        this.setState({srNoteDetailFlag});\n    }\n\n    render() {\n        const { classes, srNotesDetails, srNotesContents} = this.props;\n        const { srNotesTableExpandedRow, selectedCategory } = this.state;\n        const uniqueType = UtilService.getUniqueValueList(srNotesDetails, 'createdBy');\n\n        return (\n            <div className={classes.root}>\n                <div className={srNotesDetails && srNotesDetails.length ? '' : 'hidden'}>\n                    <Grid container className={classes.formControl}>\n                        <Grid item xs={10}>\n\n                        </Grid>\n                        {/* <Grid item xs={2} className={classes.cetagoryFilter}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel>Category</InputLabel>\n                            <Select\n                                value={selectedCategory}\n                                onChange={this.onChangeCategory}\n                            >\n                                <MenuItem value=\"all\">All</MenuItem>\n                                {uniqueType && uniqueType.map((item) => <MenuItem key={item} value={item}>{item}</MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </Grid> */}\n                    </Grid>\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell style={{ width: '30%' }}>Note</TableCell>\n                                <TableCell style={{ width: '25%' }}>Creation Date/Time</TableCell>\n                                <TableCell style={{ width: '20%' }}>Resource Name</TableCell>\n                                <TableCell>OLM ID</TableCell>\n                                <TableCell>Note Type</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {srNotesDetails && srNotesDetails.map((row, index) => (\n                                <React.Fragment key={row.notesId}>\n                                    <TableRow onClick={() => this.handleRowExpansion(index)} className={selectedCategory !== 'all' && selectedCategory !== row.createdBy ? 'hidden' : ''}>\n                                        <TableCell className=\"position-relative\" style={{ width: '30%' }}>\n                                            <div className={classes.cell}>\n                                                <div className={classes.cellOverflow}>\n                                                    {row.description}\n                                                </div>\n                                            </div>\n                                        </TableCell>\n                                        <TableCell style={{ width: '25%' }}>{UtilService.dateFormat_DD_MMM_YYYY_HH_MM(row.createdDate)}</TableCell>\n                                        {/* <TableCell style={{ width: '20%' }}>{row.resourceName || ''}</TableCell> */}\n                                        <TableCell style={{ width: '20%' }}>{(row.attribute && row.attribute[1] && row.attribute[1].value )|| ''}</TableCell>\n                                        <TableCell>{row.createdBy}</TableCell>\n                                        <TableCell>{row.type || ''}</TableCell>\n                                    </TableRow>\n                                    <TableRow className={((selectedCategory !== 'all' && selectedCategory !== row.createdBy) || !srNotesTableExpandedRow[index]) ? 'hidden' : ''} style={{ background: '#FEFFE1' }}>\n                                        <TableCell colSpan={12}>\n                                            <Collapse in={srNotesTableExpandedRow[index] ? true : false} timeout=\"auto\" unmountOnExit className={classes.details}>\n                                                {row.description} <span onClick={() => this.fetchNoteDetails(index, row.notesId)}>\n                                                                    <u>{ (this.state.srNoteDetailFlag && this.state.srNoteDetailFlag[index])?  'Show less'  : 'Show more' } </u>\n                                                                  </span>\n                                                {this.state.srNoteDetailFlag && this.state.srNoteDetailFlag[index] && <div>{srNotesContents[row.notesId]}</div>}\n                                            </Collapse>\n                                        </TableCell>\n                                    </TableRow>\n                                </React.Fragment>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </div>\n                <div className={srNotesDetails && srNotesDetails.length ? 'hidden' : 'not-found'}>\n                    Data Not Available\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        srNotesDetails: state.SRDetailsTabApiInfo.srNotesDetails,\n        srNotesContents: state.SRDetailsTabApiInfo.srNotesContents\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchSRNotesDetails,\n    fetchSRNoteDetailsData\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(SRNotesDetails));"]},"metadata":{},"sourceType":"module"}