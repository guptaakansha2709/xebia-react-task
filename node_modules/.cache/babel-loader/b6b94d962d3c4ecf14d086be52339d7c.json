{"ast":null,"code":"import _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\n\nvar BillCompareService =\n/*#__PURE__*/\nfunction () {\n  function BillCompareService() {\n    _classCallCheck(this, BillCompareService);\n  }\n\n  _createClass(BillCompareService, null, [{\n    key: \"fetchInvoiceRequest\",\n    value: function fetchInvoiceRequest(reqData) {\n      var transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n      var url = Config.contextPath + \"user/rest/v1.0/invoices?transactionId=\" + transactionId;\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"fetchBillRequest\",\n    value: function fetchBillRequest(reqData) {\n      var transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n      var authDetails = CookieManagerService.getAuthDetails();\n      var channel = authDetails && authDetails['channel'] ? authDetails['channel'] : null;\n      var url = Config.contextPath + \"user/rest/v1.0/compare/bills?transactionId=\" + transactionId + \"&month=\" + reqData[\"currentBillCycle\"] + \"&compareToMonth=\" + reqData[\"previousBillCycle\"] + \"&channel=\" + channel;\n      return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n    }\n  }, {\n    key: \"getBillComparisonData\",\n    value: function getBillComparisonData(pData) {\n      var arr = [];\n      var comparatorLateFees = null;\n      var comparatorTaxes = null;\n      var comparatorPreviousBalance = null;\n      var adjustments = null;\n      var netflixCharges = null;\n      var emiCharges = null;\n\n      for (var pKey in pData) {\n        if (pKey !== \"Taxes\" && pKey !== \"Late Fees\" && pKey !== \"Previous Amount\" && pKey !== \"Adjustments\" && pKey !== \"cardLinks\" && pKey !== \"Netflix Charges\" && pKey !== \"EMI Charges\" && pData[pKey] instanceof Object) {\n          var cData = pData[pKey];\n          var pObj = {\n            name: pKey,\n            values: [0.00, 0.00, 0.00, 0.00, 0.00, 0.00],\n            items: [],\n            difference: 0.00\n          };\n\n          for (var cKey in cData) {\n            if (cData[cKey] instanceof Object) {\n              var cObj = {\n                name: cKey.replace(\"Bill Plan Charges\", \"\"),\n                values: [] // difference : isNaN(cData[cKey][\"difference\"]) ? cData[cKey][\"difference\"] : Math.round(cData[cKey][\"difference\"])\n\n              };\n              this.setValuesForComparison(cObj.values, cData[cKey]);\n              cObj.difference = (cObj.values[2] !== \"--\" ? cObj.values[2] : 0) - (cObj.values[5] !== \"--\" ? cObj.values[5] : 0);\n              pObj.items.push(cObj);\n            }\n          }\n\n          if (pObj.items.length) {\n            for (var k = 0; k < pObj.items.length; k++) {\n              var itemValues = pObj.items[k].values;\n\n              for (var i = 0; i < itemValues.length; i++) {\n                if (parseFloat(itemValues[i])) {\n                  pObj.values[i] = pObj.values[i] + parseFloat(itemValues[i]);\n                }\n              }\n\n              pObj.difference = pObj.difference + parseFloat(pObj.items[k].difference);\n            }\n          }\n\n          arr.push(pObj);\n        } else if (pKey === \"Late Fees\" && pData[pKey] instanceof Object) {\n          comparatorLateFees = {\n            name: pKey,\n            values: [],\n            items: [] // difference : isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n\n          };\n          this.setValuesForComparison(comparatorLateFees.values, pData[pKey]);\n          comparatorLateFees.difference = (comparatorLateFees.values[2] !== \"--\" ? comparatorLateFees.values[2] : 0) - (comparatorLateFees.values[5] !== \"--\" ? comparatorLateFees.values[5] : 0);\n        } else if (pKey === \"Adjustments\" && pData[pKey] instanceof Object) {\n          adjustments = {\n            name: pKey,\n            values: [],\n            items: [] // difference : isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n\n          };\n          this.setValuesForComparison(adjustments.values, pData[pKey]);\n          adjustments.difference = (adjustments.values[2] !== \"--\" ? adjustments.values[2] : 0) - (adjustments.values[5] !== \"--\" ? adjustments.values[5] : 0);\n        } else if (pKey === \"Previous Amount\" && pData[pKey] instanceof Object) {\n          comparatorPreviousBalance = {\n            name: pKey,\n            values: [],\n            items: [] // difference: isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n\n          };\n          this.setValuesForComparison(comparatorPreviousBalance.values, pData[pKey]);\n          comparatorPreviousBalance.difference = (comparatorPreviousBalance.values[2] !== \"--\" ? comparatorPreviousBalance.values[2] : 0) - (comparatorPreviousBalance.values[5] !== \"--\" ? comparatorPreviousBalance.values[5] : 0);\n        } else if (pKey === \"Netflix Charges\" && pData[pKey] instanceof Object) {\n          netflixCharges = {\n            name: pKey,\n            values: [],\n            items: [] // difference: isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n\n          };\n          this.setValuesForComparison(netflixCharges.values, pData[pKey]);\n          netflixCharges.difference = (netflixCharges.values[2] !== \"--\" ? netflixCharges.values[2] : 0) - (netflixCharges.values[5] !== \"--\" ? netflixCharges.values[5] : 0);\n        } else if (pKey === \"EMI Charges\" && pData[pKey] instanceof Object) {\n          emiCharges = {\n            name: pKey,\n            values: [],\n            items: [] // difference: isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n\n          };\n          this.setValuesForComparison(emiCharges.values, pData[pKey]);\n          emiCharges.difference = (emiCharges.values[2] !== \"--\" ? emiCharges.values[2] : 0) - (emiCharges.values[5] !== \"--\" ? emiCharges.values[5] : 0);\n        } else if (pKey === \"Taxes\" && pData[pKey] instanceof Object) {\n          comparatorTaxes = {\n            name: pKey,\n            values: [],\n            items: [] // difference : isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n\n          };\n          this.setValuesForComparison(comparatorTaxes.values, pData[pKey]);\n          comparatorTaxes.difference = (comparatorTaxes.values[2] !== \"--\" ? comparatorTaxes.values[2] : 0) - (comparatorTaxes.values[5] !== \"--\" ? comparatorTaxes.values[5] : 0);\n        }\n      }\n\n      if (netflixCharges) {\n        arr.push(netflixCharges);\n      }\n\n      if (emiCharges) {\n        arr.push(emiCharges);\n      }\n\n      if (comparatorLateFees) {\n        arr.push(comparatorLateFees);\n      }\n\n      if (adjustments) {\n        arr.push(adjustments);\n      }\n\n      if (comparatorPreviousBalance) {\n        arr.push(comparatorPreviousBalance);\n      }\n\n      if (comparatorTaxes) {\n        arr.push(comparatorTaxes);\n      }\n\n      return arr;\n    }\n  }, {\n    key: \"setValuesForComparison\",\n    value: function setValuesForComparison(values, data) {\n      if (data[\"selectedMonthChargesBreakUp\"]) {\n        this.roundComparatorValues(values, data[\"selectedMonthChargesBreakUp\"]);\n      } else {\n        for (var a = 0; a < 3; a++) {\n          values.push(\"--\");\n        }\n      }\n\n      if (data[\"comparedToMonthChargesBreakUp\"]) {\n        this.roundComparatorValues(values, data[\"comparedToMonthChargesBreakUp\"]);\n      } else {\n        for (var _a = 0; _a < 3; _a++) {\n          values.push(\"--\");\n        }\n      }\n    }\n  }, {\n    key: \"getCardLinks\",\n    value: function getCardLinks(pData) {\n      for (var pKey in pData) {\n        if (pKey === \"cardLinks\" && pData[pKey] instanceof Object) {\n          return pData[pKey];\n        }\n      }\n    }\n  }, {\n    key: \"roundComparatorValues\",\n    value: function roundComparatorValues(values, data) {\n      values.push(Math.round(data[\"usage\"]));\n      values.push(Math.round(data[\"discount\"]));\n      values.push(Math.round(data[\"netCharges\"]));\n    }\n  }, {\n    key: \"sumOfBillComparator\",\n    value: function sumOfBillComparator(data) {\n      var billComparisonTotal = {\n        name: \"Total Bill (Rs.)\",\n        values: [0.00, 0.00, 0.00, 0.00, 0.00, 0.00],\n        difference: 0.00\n      };\n\n      for (var n = 0; n < data.length; n++) {\n        for (var i = 0; i < data[n].values.length; i++) {\n          if (!isNaN(data[n].values[i])) {\n            billComparisonTotal.values[i] = billComparisonTotal.values[i] + Math.round(data[n].values[i]);\n          }\n        }\n\n        billComparisonTotal[\"difference\"] = billComparisonTotal[\"difference\"] + Math.round(data[n].difference);\n      }\n\n      return billComparisonTotal;\n    }\n  }, {\n    key: \"sortInvoiceDate\",\n    value: function sortInvoiceDate(data) {\n      var dateArr = [];\n\n      for (var dateStr in data) {\n        data[dateStr][\"displayName\"] = dateStr;\n        dateArr.push(data[dateStr]);\n      }\n\n      dateArr.sort(function (a, b) {\n        var d1 = new Date(a.billDate).getTime();\n        var d2 = new Date(b.billDate).getTime();\n        ;\n        return d2 - d1;\n      });\n      return dateArr;\n    }\n  }]);\n\n  return BillCompareService;\n}();\n\nexport default BillCompareService;","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/services/bill-compare.service.js"],"names":["CustomHttpService","Config","EncodeDecodeType","CookieManagerService","AppConstant","BillCompareService","reqData","transactionId","getItem","CORRELATION_ID","url","contextPath","get","DEFAULT","authDetails","getAuthDetails","channel","pData","arr","comparatorLateFees","comparatorTaxes","comparatorPreviousBalance","adjustments","netflixCharges","emiCharges","pKey","Object","cData","pObj","name","values","items","difference","cKey","cObj","replace","setValuesForComparison","push","length","k","itemValues","i","parseFloat","data","roundComparatorValues","a","Math","round","billComparisonTotal","n","isNaN","dateArr","dateStr","sort","b","d1","Date","billDate","getTime","d2"],"mappings":"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","sourcesContent":["import CustomHttpService from './custom-http.service';\nimport Config from '../config/config';\nimport EncodeDecodeType from '../actiontype/encode-decode-type';\nimport CookieManagerService from './cookie.service';\nimport { AppConstant } from '../constants/app.constant';\n\nclass BillCompareService {\n\n  static fetchInvoiceRequest(reqData) {\n    const transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n    const url = Config.contextPath + \"user/rest/v1.0/invoices?transactionId=\" + transactionId;\n    return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n  }\n\n  static fetchBillRequest(reqData) {\n    const transactionId = CookieManagerService.getItem(AppConstant.CORRELATION_ID);\n    const authDetails = CookieManagerService.getAuthDetails();\n    const channel = authDetails && authDetails['channel'] ? authDetails['channel'] : null;\n    const url = Config.contextPath + \"user/rest/v1.0/compare/bills?transactionId=\" + transactionId + \"&month=\" + reqData[\"currentBillCycle\"] + \"&compareToMonth=\" + reqData[\"previousBillCycle\"] + \"&channel=\" + channel;\n    return CustomHttpService.get(url, {}, EncodeDecodeType.DEFAULT);\n  }\n\n  static getBillComparisonData(pData) {\n    const arr = [];\n    let comparatorLateFees = null;\n    let comparatorTaxes = null;\n    let comparatorPreviousBalance = null;\n    let adjustments = null;\n    let netflixCharges = null;\n    let emiCharges = null;\n    for (let pKey in pData) {\n      if (pKey !== \"Taxes\" && pKey !== \"Late Fees\" && pKey !== \"Previous Amount\" && pKey !== \"Adjustments\" && pKey !== \"cardLinks\" && pKey !== \"Netflix Charges\" && pKey !== \"EMI Charges\" && pData[pKey] instanceof Object) {\n        const cData = pData[pKey];\n        const pObj = {\n          name: pKey,\n          values: [0.00, 0.00, 0.00, 0.00, 0.00, 0.00],\n          items: [],\n          difference: 0.00\n        }\n        for (let cKey in cData) {\n          if (cData[cKey] instanceof Object) {\n            const cObj = {\n              name: cKey.replace(\"Bill Plan Charges\", \"\"),\n              values: []\n              // difference : isNaN(cData[cKey][\"difference\"]) ? cData[cKey][\"difference\"] : Math.round(cData[cKey][\"difference\"])\n            }\n            this.setValuesForComparison(cObj.values, cData[cKey]);\n            cObj.difference = ((cObj.values[2] !== \"--\") ? cObj.values[2] : 0) - ((cObj.values[5] !== \"--\") ? cObj.values[5] : 0)\n            pObj.items.push(cObj);\n          }\n        }\n        if (pObj.items.length) {\n          for (let k = 0; k < pObj.items.length; k++) {\n            const itemValues = pObj.items[k].values;\n            for (let i = 0; i < itemValues.length; i++) {\n              if (parseFloat(itemValues[i])) {\n                pObj.values[i] = pObj.values[i] + parseFloat(itemValues[i]);\n              }\n\n            }\n            pObj.difference = pObj.difference + parseFloat(pObj.items[k].difference);\n          }\n        }\n        arr.push(pObj);\n      } else if (pKey === \"Late Fees\" && pData[pKey] instanceof Object) {\n        comparatorLateFees = {\n          name: pKey,\n          values: [],\n          items: [],\n          // difference : isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n        }\n        this.setValuesForComparison(comparatorLateFees.values, pData[pKey]);\n        comparatorLateFees.difference = (comparatorLateFees.values[2] !== \"--\" ? comparatorLateFees.values[2] : 0) - (comparatorLateFees.values[5] !== \"--\" ? comparatorLateFees.values[5] : 0);\n      } else if (pKey === \"Adjustments\" && pData[pKey] instanceof Object) {\n        adjustments = {\n          name: pKey,\n          values: [],\n          items: []\n          // difference : isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n        }\n        this.setValuesForComparison(adjustments.values, pData[pKey]);\n        adjustments.difference = (adjustments.values[2] !== \"--\" ? adjustments.values[2] : 0) - (adjustments.values[5] !== \"--\" ? adjustments.values[5] : 0);\n      } else if (pKey === \"Previous Amount\" && pData[pKey] instanceof Object) {\n        comparatorPreviousBalance = {\n          name: pKey,\n          values: [],\n          items: []\n          // difference: isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n        }\n        this.setValuesForComparison(comparatorPreviousBalance.values, pData[pKey]);\n        comparatorPreviousBalance.difference = (comparatorPreviousBalance.values[2] !== \"--\" ? comparatorPreviousBalance.values[2] : 0) - (comparatorPreviousBalance.values[5] !== \"--\" ? comparatorPreviousBalance.values[5] : 0);\n      } else if (pKey === \"Netflix Charges\" && pData[pKey] instanceof Object) {\n        netflixCharges = {\n          name: pKey,\n          values: [],\n          items: []\n          // difference: isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n        }\n        this.setValuesForComparison(netflixCharges.values, pData[pKey]);\n        netflixCharges.difference = (netflixCharges.values[2] !== \"--\" ? netflixCharges.values[2] : 0) - (netflixCharges.values[5] !== \"--\" ? netflixCharges.values[5] : 0);\n      } else if (pKey === \"EMI Charges\" && pData[pKey] instanceof Object) {\n        emiCharges = {\n          name: pKey,\n          values: [],\n          items: []\n          // difference: isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n        }\n        this.setValuesForComparison(emiCharges.values, pData[pKey]);\n        emiCharges.difference = (emiCharges.values[2] !== \"--\" ? emiCharges.values[2] : 0) - (emiCharges.values[5] !== \"--\" ? emiCharges.values[5] : 0);\n      } else if (pKey === \"Taxes\" && pData[pKey] instanceof Object) {\n        comparatorTaxes = {\n          name: pKey,\n          values: [],\n          items: []\n          // difference : isNaN(pData[pKey][\"difference\"]) ? pData[pKey][\"difference\"] : $scope.roundValue(pData[pKey][\"difference\"])\n        }\n        this.setValuesForComparison(comparatorTaxes.values, pData[pKey]);\n        comparatorTaxes.difference = (comparatorTaxes.values[2] !== \"--\" ? comparatorTaxes.values[2] : 0) - (comparatorTaxes.values[5] !== \"--\" ? comparatorTaxes.values[5] : 0);\n      }\n    }\n    if (netflixCharges) {\n      arr.push(netflixCharges);\n    }\n    if (emiCharges) {\n      arr.push(emiCharges);\n    }\n    if (comparatorLateFees) {\n      arr.push(comparatorLateFees);\n    }\n    if (adjustments) {\n      arr.push(adjustments);\n    }\n    if (comparatorPreviousBalance) {\n      arr.push(comparatorPreviousBalance);\n    }\n    if (comparatorTaxes) {\n      arr.push(comparatorTaxes);\n    }\n    return arr;\n  }\n\n  static setValuesForComparison(values, data) {\n    if (data[\"selectedMonthChargesBreakUp\"]) {\n      this.roundComparatorValues(values, data[\"selectedMonthChargesBreakUp\"]);\n    } else {\n      for (let a = 0; a < 3; a++) {\n        values.push(\"--\");\n      }\n    }\n    if (data[\"comparedToMonthChargesBreakUp\"]) {\n      this.roundComparatorValues(values, data[\"comparedToMonthChargesBreakUp\"]);\n    } else {\n      for (let a = 0; a < 3; a++) {\n        values.push(\"--\");\n      }\n    }\n  }\n\n  static getCardLinks(pData) {\n    for (let pKey in pData) {\n      if (pKey === \"cardLinks\" && pData[pKey] instanceof Object) {\n        return pData[pKey];\n      }\n    }\n  }\n\n  static roundComparatorValues(values, data) {\n    values.push(Math.round(data[\"usage\"]));\n    values.push(Math.round(data[\"discount\"]));\n    values.push(Math.round(data[\"netCharges\"]));\n  }\n\n  static sumOfBillComparator(data) {\n    const billComparisonTotal = {\n      name: \"Total Bill (Rs.)\",\n      values: [0.00, 0.00, 0.00, 0.00, 0.00, 0.00],\n      difference: 0.00\n    }\n    for (let n = 0; n < data.length; n++) {\n      for (let i = 0; i < data[n].values.length; i++) {\n        if (!isNaN(data[n].values[i])) {\n          billComparisonTotal.values[i] = billComparisonTotal.values[i] + Math.round(data[n].values[i]);\n        }\n      }\n      billComparisonTotal[\"difference\"] = billComparisonTotal[\"difference\"] + Math.round(data[n].difference);\n    }\n    return billComparisonTotal;\n  }\n\n  static sortInvoiceDate(data) {\n    var dateArr = [];\n    for (var dateStr in data) {\n      data[dateStr][\"displayName\"] = dateStr;\n      dateArr.push(data[dateStr]);\n    }\n    dateArr.sort(function (a, b) {\n      var d1 = new Date(a.billDate).getTime();\n      var d2 = new Date(b.billDate).getTime();;\n      return d2 - d1;\n    })\n    return dateArr;\n  }\n}\n\nexport default BillCompareService;\n"]},"metadata":{},"sourceType":"module"}