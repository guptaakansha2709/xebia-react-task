{"ast":null,"code":"import _defineProperty from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/login/login-form.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './login.style.css';\nimport Select from '@material-ui/core/Select';\nimport { fetchLoginData as _fetchLoginData } from '../../actions/login.action';\nimport { withRouter } from 'react-router';\nimport { LocalStorageService } from '../../services/localstorage.service';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { openSnackbarRequest as _openSnackbarRequest } from '../../actions/snackbar.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './login.style';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.handleChangeDepartmentType = function (event) {\n      _this.setState({\n        selectedDepartment: event.target.value\n      });\n    };\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value));\n      };\n    };\n\n    _this.onLoginHandler = function (event) {\n      event.preventDefault();\n      var myObj = {\n        fname: _this.state.fname,\n        lname: _this.state.lname,\n        emailid: _this.state.emailid,\n        gender: _this.state.gender,\n        department: _this.state.selectedDepartment\n      };\n      console.log(\"myObj\", myObj);\n      LocalStorageService.setRegistationInfo(myObj); // const { username, password } = this.state;\n      // let loginObj = {\n      //     username,\n      //     password\n      // }\n      // if (username && password) {\n      //     this.props.fetchLoginData(loginObj);\n      // }\n    };\n\n    _this.state = {\n      fname: '',\n      lname: '',\n      emailid: '',\n      gender: '',\n      selectedDepartment: ''\n    };\n    _this.onLoginHandler = _this.onLoginHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var isEnabled = this.state.fname; // check for login status \n\n      if (this.props.loginStatus && this.props.loginStatus === \"loginSuccess\") {\n        var loginSuccessPath = \"/home\".concat(this.props.location.search);\n        return React.createElement(Redirect, {\n          exact: true,\n          from: \"/login\",\n          to: loginSuccessPath,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }\n\n      var departmentList = ['Engineering', 'Marketing', 'Finance', 'HR'];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onLoginHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"fname\",\n        placeholder: \"Enter first name\",\n        margin: \"normal\",\n        type: \"text\",\n        value: this.state.fname,\n        onChange: this.handleChange('fname'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"lname\",\n        placeholder: \"Enter Last Name\",\n        margin: \"normal\",\n        type: \"text\",\n        value: this.state.lname,\n        onChange: this.handleChange('lname'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"emailid\",\n        placeholder: \"Enter EmailId\",\n        margin: \"normal\",\n        type: \"text\",\n        value: this.state.emailid,\n        onChange: this.handleChange('emailid'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"gender\",\n        placeholder: \"Enter gender\",\n        margin: \"normal\",\n        type: \"text\",\n        value: this.state.gender,\n        onChange: this.handleChange('gender'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        fullWidth: true,\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"channel-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Department\"), React.createElement(Select, {\n        value: this.state.selectedDepartment,\n        onChange: this.handleChangeDepartmentType,\n        input: React.createElement(Input, {\n          name: \"selectedDepartment\",\n          id: \"channel-simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Department Type\"), departmentList.map(function (type) {\n        return React.createElement(MenuItem, {\n          key: type,\n          value: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, type);\n      }))), React.createElement(FormControl, {\n        className: \"pull-right loginButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        value: \"Submit\",\n        disabled: !isEnabled,\n        variant: \"contained\",\n        size: \"large\",\n        color: \"primary\",\n        onClick: this.onLoginHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"LOGIN\"))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchLoginData: function fetchLoginData(data) {\n      return dispatch(_fetchLoginData(data));\n    },\n    openSnackbarRequest: function openSnackbarRequest(data) {\n      return dispatch(_openSnackbarRequest(data));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginStatus: state.loginInfo.loginStatus,\n    loginApiResponse: state.loginInfo.loginApiResponse\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginForm)));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/login/login-form.smart.js"],"names":["React","Component","connect","TextField","FormControl","Button","Input","InputLabel","MenuItem","Select","fetchLoginData","withRouter","LocalStorageService","HashRouter","Router","Route","Redirect","openSnackbarRequest","withStyles","styles","LoginForm","props","handleChangeDepartmentType","event","setState","selectedDepartment","target","value","handleChange","prop","onLoginHandler","preventDefault","myObj","fname","state","lname","emailid","gender","department","console","log","setRegistationInfo","bind","classes","isEnabled","loginStatus","loginSuccessPath","location","search","departmentList","formControl","map","type","mapDispatchToProps","dispatch","data","mapStateToProps","loginInfo","loginApiResponse"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport './login.style.css'; import Select from '@material-ui/core/Select';\nimport { fetchLoginData } from '../../actions/login.action';\nimport { withRouter } from 'react-router'\nimport { LocalStorageService } from '../../services/localstorage.service';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { openSnackbarRequest } from '../../actions/snackbar.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './login.style';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { fname: '', lname: '', emailid: '', gender: '', selectedDepartment: '' };\n        this.onLoginHandler = this.onLoginHandler.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChangeDepartmentType = event => {\n        this.setState({ selectedDepartment: event.target.value });\n    };\n\n    handleChange = prop => event => {\n        this.setState({ [prop]: event.target.value });\n    };\n\n    onLoginHandler = (event) => {\n        event.preventDefault();\n        const myObj = {\n\n            fname: this.state.fname,\n            lname: this.state.lname,\n            emailid: this.state.emailid,\n            gender: this.state.gender,\n            department: this.state.selectedDepartment\n        }\n        console.log(\"myObj\", myObj);\n        LocalStorageService.setRegistationInfo(myObj);\n        // const { username, password } = this.state;\n        // let loginObj = {\n        //     username,\n        //     password\n        // }\n\n        // if (username && password) {\n        //     this.props.fetchLoginData(loginObj);\n        // }\n    }\n    render() {\n\n        const { classes } = this.props;\n        const isEnabled = this.state.fname;\n        // check for login status \n        if (this.props.loginStatus && this.props.loginStatus === \"loginSuccess\") {\n            const loginSuccessPath = `/home${this.props.location.search}`;\n            return (\n                <Redirect exact from='/login' to={loginSuccessPath} ></Redirect>\n            )\n        }\n        const departmentList = ['Engineering', 'Marketing', 'Finance', 'HR']\n\n        return (\n            <div>\n\n                <form onSubmit={this.onLoginHandler}>\n                    <FormControl fullWidth>\n                        <TextField\n                            label=\"fname\"\n                            placeholder=\"Enter first name\"\n                            margin=\"normal\"\n                            type=\"text\"\n                            value={this.state.fname}\n                            onChange={this.handleChange('fname')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth>\n                        <TextField\n                            label=\"lname\"\n                            placeholder=\"Enter Last Name\"\n                            margin=\"normal\"\n                            type=\"text\"\n                            value={this.state.lname}\n                            onChange={this.handleChange('lname')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth>\n                        <TextField\n                            label=\"emailid\"\n                            placeholder=\"Enter EmailId\"\n                            margin=\"normal\"\n                            type=\"text\"\n                            value={this.state.emailid}\n                            onChange={this.handleChange('emailid')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth>\n                        <TextField\n                            label=\"gender\"\n                            placeholder=\"Enter gender\"\n                            margin=\"normal\"\n                            type=\"text\"\n                            value={this.state.gender}\n                            onChange={this.handleChange('gender')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel htmlFor=\"channel-simple\">Department</InputLabel>\n                        <Select\n                            value={this.state.selectedDepartment}\n                            onChange={this.handleChangeDepartmentType}\n                            input={<Input name=\"selectedDepartment\" id=\"channel-simple\" />}\n                        >\n\n                            <MenuItem value=\"\">Department Type</MenuItem>\n                            {\n                                departmentList.map(type => {\n                                    return (\n                                        <MenuItem key={type} value={type}>{type}</MenuItem>\n                                    )\n                                })\n                            }\n                        </Select>\n                    </FormControl>\n\n\n                    <FormControl className=\"pull-right loginButton\">\n                        <Button type=\"submit\" value=\"Submit\" disabled={!isEnabled} variant=\"contained\" size=\"large\" color=\"primary\" onClick={this.onLoginHandler}>LOGIN</Button>\n                    </FormControl>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    fetchLoginData: data => dispatch(fetchLoginData(data)),\n    openSnackbarRequest: data => dispatch(openSnackbarRequest(data)),\n});\nconst mapStateToProps = state => {\n    return {\n        loginStatus: state.loginInfo.loginStatus,\n        loginApiResponse: state.loginInfo.loginApiResponse\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginForm)));"]},"metadata":{},"sourceType":"module"}