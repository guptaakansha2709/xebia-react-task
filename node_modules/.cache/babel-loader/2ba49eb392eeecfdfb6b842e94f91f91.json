{"ast":null,"code":"import _defineProperty from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/A1HP71DP/Documents/personal/mmt-task/task/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/usage-details/usage-details.smart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../../../index.css';\nimport Button from '@material-ui/core/Button';\nimport { fetchUsageDetailsTabData as _fetchUsageDetailsTabData } from '../../../actions/usage-details-tab.action';\nimport styles from './usage-details.style';\nimport { updateCurrentScenarioId as _updateCurrentScenarioId } from '../../../actions/scenario.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport AppLoader from '../../common/AppLoader';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport RemoveCircle from '@material-ui/icons/RemoveCircle';\nimport ExternalIcon from \"../../../assets/images/external.svg\";\nimport { CardLinkConstant } from '../../../constants/card-link.constant';\nimport { cardLinksHandler as _cardLinksHandler } from '../../../actions/card-links.action';\nimport AmazonPrimeIcon from '../../../assets/images/amazon-prime-icon.png';\nimport NetflixIcon from '../../../assets/images/netflix-icon.png';\nimport ZeeIcon from '../../../assets/images/zee5-icon.png';\nimport AirtelTvIcon from '../../../assets/images/airtel-tv-icon.png';\nimport WynkIcon from '../../../assets/images/wynk-icon.png';\nimport { UsageCardConstant } from '../../../constants/usage-card.constant';\nimport Tooltips from '../../common/tooltip/tooltip.dumb';\nimport renderHTML from 'react-render-html';\n\nvar UsageDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UsageDetails, _Component);\n\n  function UsageDetails(props) {\n    var _this;\n\n    _classCallCheck(this, UsageDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UsageDetails).call(this, props));\n\n    _this.checkUsageAddOnRowKey = function (usageDisplayStr, rowKey) {\n      if (_this.props.usageAddOnDetailsApiResponse && _this.props.usageAddOnDetailsApiResponse.length && usageDisplayStr && usageDisplayStr !== null && rowKey === 'ADD-ON') {\n        return true;\n      }\n\n      return null;\n    };\n\n    _this.handlePlanUsageScenario = function (item) {\n      if (item && item.value) {\n        _this.props.updateCurrentScenarioId(item.value);\n      }\n    };\n\n    _this.onExpandCategoryRow = function (rowKey) {\n      _this.setState(_defineProperty({}, 'expanded_' + rowKey, !_this.state['expanded_' + rowKey]));\n    };\n\n    _this.getBenefitsIconType = function (benefitType) {\n      if (benefitType) {\n        switch (benefitType) {\n          case UsageCardConstant.AMAZON_PRIME_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: AmazonPrimeIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Amazon prime\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            });\n\n          case UsageCardConstant.NETFLIX_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: NetflixIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Netflix\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            });\n\n          case UsageCardConstant.ZEE5_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: ZeeIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Zee5\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            });\n\n          case UsageCardConstant.AIRTEL_TV_PLUS_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: AirtelTvIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Airtel Tv\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            });\n\n          case UsageCardConstant.WYNK_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: WynkIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Wynk\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95\n              },\n              __self: this\n            });\n\n          default:\n            break;\n        }\n      }\n    };\n\n    _this.getBenefitsIconType = function (benefitType) {\n      if (benefitType) {\n        switch (benefitType) {\n          case UsageCardConstant.AMAZON_PRIME_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: AmazonPrimeIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Amazon prime\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            });\n\n          case UsageCardConstant.NETFLIX_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: NetflixIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Netflix\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            });\n\n          case UsageCardConstant.ZEE5_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: ZeeIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Zee5\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            });\n\n          case UsageCardConstant.AIRTEL_TV_PLUS_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: AirtelTvIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Airtel Tv\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108\n              },\n              __self: this\n            });\n\n          case UsageCardConstant.WYNK_BENEFIT_TYPE:\n            return React.createElement(\"img\", {\n              src: WynkIcon,\n              className: _this.props.classes.benefitsIcon,\n              alt: \"Wynk\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109\n              },\n              __self: this\n            });\n\n          default:\n            return benefitType;\n        }\n      }\n    };\n\n    _this.getCategoryRow = function (rowKey, categoryRow) {\n      if (rowKey && categoryRow && categoryRow[0] && categoryRow[0]['flattened']) {\n        var item = categoryRow[0];\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: \"table-cell-padding dispame\",\n          width: \"34%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, rowKey)), React.createElement(TableCell, {\n          className: \"table-cell-padding benefitDisplayStr\",\n          width: \"33%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, item['hoverInfo'] && item['hoverInfo'] !== null && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, item['benefitDisplayStr'], React.createElement(Tooltips, {\n          tooltipText: item['hoverInfo'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(InfoIcon, {\n          className: \"color-blue cursor-pointer infoIconCustomcss\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }))), !item['hoverInfo'] && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, item['benefitDisplayStr'])), React.createElement(TableCell, {\n          className: \"table-cell-padding usageDisplayStr\",\n          width: \"33%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \" \", item['usageDisplayStr'], _this.checkUsageAddOnRowKey(item['usageDisplayStr'], rowKey) && React.createElement(Tooltips, {\n          tooltipText: _this.getTooltipData(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(InfoIcon, {\n          className: \"color-blue cursor-pointer infoIconCustomcss\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        })))));\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: \"12\",\n        className: \"table_expansion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(ExpansionPanel, {\n        className: \"custom_expandablebox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        className: \"width-100\",\n        onClick: function onClick(e) {\n          return _this.onExpandCategoryRow(rowKey);\n        },\n        expandIcon: React.createElement(Button, {\n          className: \"customExpandIcon\",\n          primary: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, !_this.state['expanded_' + rowKey] && React.createElement(AddCircle, {\n          className: \"color-blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), \" \", _this.state['expanded_' + rowKey] && React.createElement(RemoveCircle, {\n          className: \"color-blue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: _this.props.classes.tableHeading + \" pr-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \" \", React.createElement(\"b\", {\n        className: \"pl-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, rowKey, \"  \"), React.createElement(\"span\", {\n        className: \"color-blue ml-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \" (\", categoryRow.length, \") \"))), React.createElement(ExpansionPanelDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"expanded-table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, categoryRow && categoryRow.length && categoryRow.map(function (myitem, index) {\n        return React.createElement(TableRow, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          width: \"34%\",\n          className: \"table-cell-padding-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, _this.getBenefitsIconType(myitem['displayName'])), myitem['hoverInfo'] && myitem['hoverInfo'] !== null && React.createElement(TableCell, {\n          width: \"33%\",\n          className: \"table-cell-padding-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, myitem['benefitDisplayStr'], React.createElement(Tooltips, {\n          tooltipText: myitem['hoverInfo'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(InfoIcon, {\n          className: \"color-blue cursor-pointer infoIconCustomcss\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        })))), !myitem['hoverInfo'] && React.createElement(TableCell, {\n          width: \"33%\",\n          className: \"table-cell-padding-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, myitem['benefitDisplayStr'])), myitem['usageDisplayStr'] && myitem['usageDisplayStr'] !== null && React.createElement(TableCell, {\n          width: \"33%\",\n          className: \"table-cell-padding-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, myitem['usageDisplayStr'])));\n      })))))));\n    };\n\n    _this.handlePlanUsageScenario = _this.handlePlanUsageScenario.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkUsageAddOnRowKey = _this.checkUsageAddOnRowKey.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      cardLoader: true\n    };\n    _this.onClickTagIcon = _this.onClickTagIcon.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UsageDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.isCustomerFound) {\n        this.props.fetchUsageDetailsTabData();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.usageDetailsTabApiResponse !== prevProps.usageDetailsTabApiResponse) {\n        var refreshedState = {\n          cardLoader: true\n        };\n\n        for (var key in prevState) {\n          if (key !== 'cardLoader') {\n            refreshedState[key] = false;\n          }\n        }\n\n        this.setState(refreshedState);\n      }\n    }\n  }, {\n    key: \"onClickTagIcon\",\n    value: function onClickTagIcon(cardLinks) {\n      this.props.cardLinksHandler(cardLinks, CardLinkConstant.CRM_CODE_TYPE, CardLinkConstant.PLAN_USAGE_CARD);\n    }\n  }, {\n    key: \"getTooltipData\",\n    value: function getTooltipData() {\n      var str = '';\n\n      if (this.props.usageAddOnDetailsApiResponse && this.props.usageAddOnDetailsApiResponse.length) {\n        for (var i = 0; i < this.props.usageAddOnDetailsApiResponse.length; i++) {\n          str += '<span className=\"color-9f9f9f\">' + this.props.usageAddOnDetailsApiResponse[i].msisdn + '</span> : <b>' + this.props.usageAddOnDetailsApiResponse[i].pricePart + '</b> </n> <br/>';\n        }\n\n        return renderHTML(str);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          usageDetailsTabApiResponse = _this$props.usageDetailsTabApiResponse,\n          loading = _this$props.loading,\n          usageScenarioCardLinksData = _this$props.usageScenarioCardLinksData;\n      var classes = this.props.classes;\n      var cardLinksList = [];\n      var usageDetailsTabApikeys;\n      var usageDetailscardInnerResponse = {};\n\n      if (usageDetailsTabApiResponse && usageDetailsTabApiResponse['cardContent'] && usageDetailsTabApiResponse['cardContent']['plan_and_usage']) {\n        usageDetailsTabApikeys = Object.keys(usageDetailsTabApiResponse['cardContent']['plan_and_usage']);\n        usageDetailscardInnerResponse = usageDetailsTabApiResponse['cardContent']['plan_and_usage'];\n      }\n\n      if (usageDetailsTabApiResponse && usageDetailsTabApiResponse['cardLinks']) {\n        cardLinksList = usageDetailsTabApiResponse['cardLinks'];\n      }\n\n      return React.createElement(\"div\", {\n        className: \"position-relative minH\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, cardLinksList && usageDetailsTabApikeys && usageDetailsTabApiResponse && React.createElement(\"img\", {\n        onClick: function onClick() {\n          return _this2.onClickTagIcon(cardLinksList);\n        },\n        src: ExternalIcon,\n        className: classes.tagIcon,\n        alt: \"tagging\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), usageDetailsTabApikeys && usageDetailsTabApiResponse && React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        className: \"th-height\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        width: \"34%\",\n        className: \"table-cell-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Plan and Boosters\"))), React.createElement(TableCell, {\n        width: \"33%\",\n        className: \"table-cell-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Benefits\"))), React.createElement(TableCell, {\n        width: \"33%\",\n        className: \"table-cell-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Usage\"), \" \")))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, usageDetailsTabApikeys && usageDetailsTabApiResponse && usageDetailsTabApikeys.map(function (row, index) {\n        return React.createElement(TableRow, {\n          key: row,\n          className: classes.row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, _this2.getCategoryRow(row, usageDetailscardInnerResponse[row]));\n      }))), React.createElement(\"div\", {\n        className: \"mt-10 text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, usageScenarioCardLinksData && usageScenarioCardLinksData.length > 0 && usageScenarioCardLinksData.map(function (item, index) {\n        return React.createElement(Button, {\n          className: \"fs-14 color-blue cursor-pointer mb-10\",\n          key: index,\n          onClick: function onClick() {\n            return _this2.handlePlanUsageScenario(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, item.additionalInfo, \" \\u203A\");\n      })), loading ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(AppLoader, {\n        cardLoader: this.state.cardLoader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })) : null);\n    }\n  }]);\n\n  return UsageDetails;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUsageDetailsTabData: function fetchUsageDetailsTabData(data) {\n      return dispatch(_fetchUsageDetailsTabData(data));\n    },\n    updateCurrentScenarioId: function updateCurrentScenarioId(id) {\n      return dispatch(_updateCurrentScenarioId(id));\n    },\n    cardLinksHandler: function cardLinksHandler(data, type, key) {\n      return dispatch(_cardLinksHandler(data, type, key));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    usageDetailsTabApiResponse: state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse,\n    isCustomerFound: state.customerInfo.isCustomerFound,\n    loading: state.UsageDetailsTabApiInfo.UsageDetailsTabStatus === 'LOADING',\n    usageAddOnDetailsApiResponse: state.UsageDetailsTabApiInfo.usageAddOnDetailsResponse,\n    usageScenarioCardLinksData: state.UsageDetailsTabApiInfo.usageScenarioCardLinksData\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UsageDetails));","map":{"version":3,"sources":["/Users/A1HP71DP/Documents/personal/mmt-task/task/src/components/home/usage-details/usage-details.smart.js"],"names":["React","Component","connect","Button","fetchUsageDetailsTabData","styles","updateCurrentScenarioId","withStyles","Table","TableBody","TableCell","TableHead","TableRow","InfoIcon","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","AppLoader","AddCircle","RemoveCircle","CardLinkConstant","cardLinksHandler","AmazonPrimeIcon","NetflixIcon","ZeeIcon","AirtelTvIcon","WynkIcon","UsageCardConstant","Tooltips","renderHTML","UsageDetails","props","checkUsageAddOnRowKey","usageDisplayStr","rowKey","usageAddOnDetailsApiResponse","length","handlePlanUsageScenario","item","value","onExpandCategoryRow","setState","state","getBenefitsIconType","benefitType","AMAZON_PRIME_BENEFIT_TYPE","classes","benefitsIcon","NETFLIX_BENEFIT_TYPE","ZEE5_BENEFIT_TYPE","AIRTEL_TV_PLUS_BENEFIT_TYPE","WYNK_BENEFIT_TYPE","getCategoryRow","categoryRow","getTooltipData","e","tableHeading","map","myitem","index","bind","cardLoader","onClickTagIcon","isCustomerFound","prevProps","prevState","usageDetailsTabApiResponse","refreshedState","key","cardLinks","CRM_CODE_TYPE","PLAN_USAGE_CARD","str","i","msisdn","pricePart","loading","usageScenarioCardLinksData","cardLinksList","usageDetailsTabApikeys","usageDetailscardInnerResponse","Object","keys","ExternalIcon","tagIcon","row","additionalInfo","mapDispatchToProps","dispatch","data","id","type","mapStateToProps","UsageDetailsTabApiInfo","customerInfo","UsageDetailsTabStatus","usageAddOnDetailsResponse"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport '../../../index.css';\nimport Button from '@material-ui/core/Button';\nimport { fetchUsageDetailsTabData } from '../../../actions/usage-details-tab.action';\nimport styles from './usage-details.style';\nimport { updateCurrentScenarioId } from '../../../actions/scenario.action';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport AppLoader from '../../common/AppLoader';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport RemoveCircle from '@material-ui/icons/RemoveCircle';\nimport ExternalIcon from '../../../assets/images/external.svg';\nimport { CardLinkConstant } from '../../../constants/card-link.constant';\nimport { cardLinksHandler } from '../../../actions/card-links.action';\nimport AmazonPrimeIcon from '../../../assets/images/amazon-prime-icon.png';\nimport NetflixIcon from '../../../assets/images/netflix-icon.png';\nimport ZeeIcon from '../../../assets/images/zee5-icon.png';\nimport AirtelTvIcon from '../../../assets/images/airtel-tv-icon.png';\nimport WynkIcon from '../../../assets/images/wynk-icon.png';\nimport { UsageCardConstant } from '../../../constants/usage-card.constant';\nimport Tooltips from '../../common/tooltip/tooltip.dumb';\nimport renderHTML from 'react-render-html';\nclass UsageDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePlanUsageScenario = this.handlePlanUsageScenario.bind(this);\n    this.checkUsageAddOnRowKey = this.checkUsageAddOnRowKey.bind(this);\n    this.state = { cardLoader: true };\n    this.onClickTagIcon = this.onClickTagIcon.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.isCustomerFound) {\n      this.props.fetchUsageDetailsTabData();\n    }\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.usageDetailsTabApiResponse !== prevProps.usageDetailsTabApiResponse) {\n      let refreshedState = { cardLoader: true };\n      for (let key in prevState) {\n        if (key !== 'cardLoader') {\n          refreshedState[key] = false;\n        }\n      }\n      this.setState(refreshedState);\n    }\n  }\n  checkUsageAddOnRowKey = (usageDisplayStr, rowKey) => {\n    if (this.props.usageAddOnDetailsApiResponse && this.props.usageAddOnDetailsApiResponse.length && usageDisplayStr && usageDisplayStr !== null && rowKey === 'ADD-ON') {\n      return true;\n    }\n    return null;\n  }\n\n  handlePlanUsageScenario = (item) => {\n    if (item && item.value) {\n      this.props.updateCurrentScenarioId(item.value);\n    }\n  }\n  onClickTagIcon(cardLinks) {\n    this.props.cardLinksHandler(cardLinks, CardLinkConstant.CRM_CODE_TYPE, CardLinkConstant.PLAN_USAGE_CARD);\n  }\n  getTooltipData() {\n    var str = '';\n    if (this.props.usageAddOnDetailsApiResponse && this.props.usageAddOnDetailsApiResponse.length) {\n      for (var i = 0; i < this.props.usageAddOnDetailsApiResponse.length; i++) {\n        str += '<span className=\"color-9f9f9f\">' + this.props.usageAddOnDetailsApiResponse[i].msisdn + '</span> : <b>' + this.props.usageAddOnDetailsApiResponse[i].pricePart + '</b> </n> <br/>';\n      }\n      return renderHTML(str)\n    }\n\n\n  }\n  onExpandCategoryRow = (rowKey) => {\n    this.setState({ ['expanded_' + rowKey]: !this.state['expanded_' + rowKey] })\n  }\n  getBenefitsIconType = (benefitType) => {\n    if (benefitType) {\n      switch (benefitType) {\n        case UsageCardConstant.AMAZON_PRIME_BENEFIT_TYPE: return <img src={AmazonPrimeIcon} className={this.props.classes.benefitsIcon} alt=\"Amazon prime\" />\n        case UsageCardConstant.NETFLIX_BENEFIT_TYPE: return <img src={NetflixIcon} className={this.props.classes.benefitsIcon} alt=\"Netflix\" />\n        case UsageCardConstant.ZEE5_BENEFIT_TYPE: return <img src={ZeeIcon} className={this.props.classes.benefitsIcon} alt=\"Zee5\" />\n        case UsageCardConstant.AIRTEL_TV_PLUS_BENEFIT_TYPE: return <img src={AirtelTvIcon} className={this.props.classes.benefitsIcon} alt=\"Airtel Tv\" />\n        case UsageCardConstant.WYNK_BENEFIT_TYPE: return <img src={WynkIcon} className={this.props.classes.benefitsIcon} alt=\"Wynk\" />\n        default: break;\n      }\n    }\n  }\n\n  // TODO: default icon ?\n  getBenefitsIconType = (benefitType) => {\n    if (benefitType) {\n      switch (benefitType) {\n        case UsageCardConstant.AMAZON_PRIME_BENEFIT_TYPE: return <img src={AmazonPrimeIcon} className={this.props.classes.benefitsIcon} alt=\"Amazon prime\" />\n        case UsageCardConstant.NETFLIX_BENEFIT_TYPE: return <img src={NetflixIcon} className={this.props.classes.benefitsIcon} alt=\"Netflix\" />\n        case UsageCardConstant.ZEE5_BENEFIT_TYPE: return <img src={ZeeIcon} className={this.props.classes.benefitsIcon} alt=\"Zee5\" />\n        case UsageCardConstant.AIRTEL_TV_PLUS_BENEFIT_TYPE: return <img src={AirtelTvIcon} className={this.props.classes.benefitsIcon} alt=\"Airtel Tv\" />\n        case UsageCardConstant.WYNK_BENEFIT_TYPE: return <img src={WynkIcon} className={this.props.classes.benefitsIcon} alt=\"Wynk\" />\n        default: return benefitType;\n      }\n    }\n  }\n\n\n  getCategoryRow = (rowKey, categoryRow) => {\n    if (rowKey && categoryRow && categoryRow[0] && categoryRow[0]['flattened']) {\n      const item = categoryRow[0];\n      return (\n        <React.Fragment>\n          <TableCell className=\"table-cell-padding dispame\" width=\"34%\">\n            <p>{rowKey}</p>\n          </TableCell>\n\n          <TableCell className=\"table-cell-padding benefitDisplayStr\" width=\"33%\">\n            {\n              item['hoverInfo'] && item['hoverInfo'] !== null &&\n              <p>{item['benefitDisplayStr']}\n                <Tooltips tooltipText={item['hoverInfo']}>\n                  <InfoIcon className=\"color-blue cursor-pointer infoIconCustomcss\" />\n                </Tooltips>\n              </p>}\n            {\n              !item['hoverInfo'] && <p>{item['benefitDisplayStr']}</p>}\n          </TableCell>\n          <TableCell className=\"table-cell-padding usageDisplayStr\" width=\"33%\">\n            <p> {item['usageDisplayStr']}\n              {this.checkUsageAddOnRowKey(item['usageDisplayStr'], rowKey) &&\n                <Tooltips tooltipText={this.getTooltipData()}>\n                  <InfoIcon className=\"color-blue cursor-pointer infoIconCustomcss\" />\n                </Tooltips>\n              }\n\n            </p>\n          </TableCell>\n\n\n\n        </React.Fragment>\n      )\n\n    }\n\n    return (\n      <React.Fragment>\n        <TableCell colSpan=\"12\" className=\"table_expansion\">\n          <ExpansionPanel className=\"custom_expandablebox\">\n            <ExpansionPanelSummary className=\"width-100\" onClick={(e) => this.onExpandCategoryRow(rowKey)} expandIcon={<Button className=\"customExpandIcon\" primary=\"true\"\n            >\n              {!this.state['expanded_' + rowKey] && <AddCircle className=\"color-blue\" />} {this.state['expanded_' + rowKey] && <RemoveCircle className=\"color-blue\" />}</Button>}>\n              <Typography className={this.props.classes.tableHeading + \" pr-10\"}> <b className=\"pl-10\">{rowKey}  </b>\n                <span className='color-blue ml-10'> ({categoryRow.length}) </span>\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Table className=\"expanded-table\">\n                <TableBody>\n                  {\n                    categoryRow && categoryRow.length && categoryRow.map((myitem, index) => {\n                      return (\n                        <TableRow key={index}>\n                          <TableCell width=\"34%\" className=\"table-cell-padding-inner\">\n                            {this.getBenefitsIconType(myitem['displayName'])}\n\n                          </TableCell>\n                          {\n                            myitem['hoverInfo'] && myitem['hoverInfo'] !== null &&\n                            <TableCell width=\"33%\" className=\"table-cell-padding-inner\">\n                              <p>{myitem['benefitDisplayStr']}\n                                <Tooltips tooltipText={myitem['hoverInfo']}>\n                                  <InfoIcon className=\"color-blue cursor-pointer infoIconCustomcss\" />\n                                </Tooltips>\n                              </p>\n                            </TableCell>\n                          }\n                          {\n                            !myitem['hoverInfo'] &&\n                            <TableCell width=\"33%\" className=\"table-cell-padding-inner\">\n                              <p>{myitem['benefitDisplayStr']}</p>\n                            </TableCell>\n                          }\n                          {myitem['usageDisplayStr'] && myitem['usageDisplayStr'] !== null &&\n                            <TableCell width=\"33%\" className=\"table-cell-padding-inner\">\n                              <p>{myitem['usageDisplayStr']}</p>\n                            </TableCell>\n                          }\n                        </TableRow>\n                      )\n                    })\n                  }\n                </TableBody>\n              </Table>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        </TableCell>\n      </React.Fragment>\n    )\n  }\n\n\n  render() {\n    const { usageDetailsTabApiResponse, loading, usageScenarioCardLinksData } = this.props;\n    const { classes } = this.props;\n    let cardLinksList = [];\n    let usageDetailsTabApikeys;\n    let usageDetailscardInnerResponse = {};\n    if (usageDetailsTabApiResponse && usageDetailsTabApiResponse['cardContent'] && usageDetailsTabApiResponse['cardContent']['plan_and_usage']) {\n      usageDetailsTabApikeys = Object.keys(usageDetailsTabApiResponse['cardContent']['plan_and_usage']);\n      usageDetailscardInnerResponse = usageDetailsTabApiResponse['cardContent']['plan_and_usage'];\n    }\n    if (usageDetailsTabApiResponse && usageDetailsTabApiResponse['cardLinks']) {\n      cardLinksList = usageDetailsTabApiResponse['cardLinks'];\n    }\n\n    return (\n      <div className=\"position-relative minH\">\n        {cardLinksList && usageDetailsTabApikeys && usageDetailsTabApiResponse && <img onClick={() => this.onClickTagIcon(cardLinksList)} src={ExternalIcon} className={classes.tagIcon} alt=\"tagging\" />}\n        {\n          usageDetailsTabApikeys && usageDetailsTabApiResponse &&\n          <Table>\n            <TableHead>\n\n              <TableRow className=\"th-height\">\n                <TableCell width=\"34%\" className=\"table-cell-padding\"><Typography component=\"h4\"><strong>Plan and Boosters</strong></Typography></TableCell>\n                <TableCell width=\"33%\" className=\"table-cell-padding\"><Typography component=\"h4\"><strong>Benefits</strong></Typography></TableCell>\n                <TableCell width=\"33%\" className=\"table-cell-padding\"><Typography component=\"h4\"><strong>Usage</strong> </Typography></TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {usageDetailsTabApikeys && usageDetailsTabApiResponse && usageDetailsTabApikeys.map((row, index) => {\n                return (\n\n                  <TableRow key={row} className={classes.row}>\n                    {this.getCategoryRow(row, usageDetailscardInnerResponse[row])}\n\n                  </TableRow>\n                )\n              })}\n            </TableBody>\n\n          </Table>\n        }\n\n        <div className=\"mt-10 text-right\">\n          {usageScenarioCardLinksData && usageScenarioCardLinksData.length > 0 && usageScenarioCardLinksData.map((item, index) => (\n            <Button className='fs-14 color-blue cursor-pointer mb-10' key={index} onClick={() => this.handlePlanUsageScenario(item)}>{item.additionalInfo} &rsaquo;</Button>\n          ))}\n        </div>\n        {loading ? <div><AppLoader cardLoader={this.state.cardLoader} /></div> : null}\n      </div >\n    )\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  fetchUsageDetailsTabData: data => dispatch(fetchUsageDetailsTabData(data)),\n  updateCurrentScenarioId: id => dispatch(updateCurrentScenarioId(id)),\n  cardLinksHandler: (data, type, key) => dispatch(cardLinksHandler(data, type, key)),\n});\nconst mapStateToProps = state => {\n  return {\n    usageDetailsTabApiResponse: state.UsageDetailsTabApiInfo.usageDetailsTabApiResponse,\n    isCustomerFound: state.customerInfo.isCustomerFound,\n    loading: state.UsageDetailsTabApiInfo.UsageDetailsTabStatus === 'LOADING',\n    usageAddOnDetailsApiResponse: state.UsageDetailsTabApiInfo.usageAddOnDetailsResponse,\n    usageScenarioCardLinksData: state.UsageDetailsTabApiInfo.usageScenarioCardLinksData\n  };\n}\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(withStyles(styles)(UsageDetails));\n\n"]},"metadata":{},"sourceType":"module"}